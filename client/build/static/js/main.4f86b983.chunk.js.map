{"version":3,"sources":["localization/strings.js","components/ButtonAppBar.js","components/Register.js","components/QuestionDropZone.js","components/EditQuestion.js","components/EditAnswerOption.js","components/AnswerOption.js","components/Login.js","components/NewQuizDialog.js","components/EditQuizTitleComponent.js","components/QuizTitleComponent.js","App.js","reportWebVitals.js","index.js"],"names":["strings","LocalizedStrings","en","fi","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","lanselect","margin","width","paddingInlineStart","ButtonAppBar","props","setLanguage","language","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","to","style","textDecoration","Select","defaultValue","onChange","e","switchLanguage","target","value","MenuItem","selected","isLoggedIn","Button","disableElevation","onClick","logOut","logout","login","Register","useState","firstname","surname","email","password","role_id","userData","setUserData","isAdmin","setIsAdmin","errorMsg","changeData","field","useEffect","isRegistered","List","ListItem","register","TextField","event","size","label","type","Checkbox","checked","adminuser","console","log","submitRegistration","QuestionDropZone","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","outline","transition","activeStyle","acceptStyle","rejectStyle","onDrop","useCallback","files","a","req","superagent","post","forEach","file","attach","end","err","res","useDropzone","acceptedFiles","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useMemo","map","path","EditQuestion","showDropZone","setShowDropZone","role","undefined","dense","fullWidth","updateQuestion","quiz","parentIndex","question","deleteQuestion","id","EditAnswerOption","GreenCheckbox","withStyles","green","ListItemIcon","updateAnsweroption","index","correct","tabIndex","dispatch","data","newText","quizIndex","questionIndex","answerIndex","answer","deleteAnsweroption","AnswerOption","answersVisible","disabled","ListItemText","primary","Login","submitLogin","reglink","NewQuizDialog","React","open","setOpen","quizname","setQuizname","handleClose","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","autoFocus","DialogActions","addNewQuiz","EditQuizTitleComponent","updateQuiz","quizindex","deleting","areyousuredelete","actioncannotbeundone","cancel","deleteQuiz","delete","quizid","QuizTitleComponent","sIOEndpoint","maxWidth","palette","background","paper","reducer","state","action","deepCopy","JSON","parse","stringify","count","quizQuestions","answerOptions","newAnswer","push","newQuestion","newQuiz","quizId","splice","Error","withSnackbar","dataAlustettu","setDataAlustettu","setQuiz","setAnswersVisible","useReducer","loggedIn","setLoggedIn","admin","setAdmin","lan","setLan","enqueueSnackbar","useSnackbar","user","setUser","body","axios","then","response","snackMsg","registersuccess","registerfail","localStorage","setItem","token","userObj","loginsuccess","loginfail","socket","socketIOClient","on","emit","message","payload","channel","thisPayload","old","new","get","result","length","i","questions","j","answers","fetchData","addQuestion","addAnsweroption","questionId","addQuiz","put","editMode","answerId","teacherMode","status","Container","newLan","exact","component","greet","userinrole","val","Paper","elevation","topicArea","addnewquestion","hidecorrect","showcorrect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.4f86b983.chunk.js","sourcesContent":["import LocalizedStrings from \"react-localization\";\r\n\r\nlet strings = new LocalizedStrings(\r\n    {\r\n        en: {\r\n            \"login\": \"Login\",\r\n            \"register\": \"Register\",\r\n            \"email\": \"Email\",\r\n            \"password\": \"Password\",\r\n            \"reglink\": \"Register here\",\r\n            \"firstname\": \"First name\",\r\n            \"surname\": \"Surname\",\r\n            \"adminuser\": \"Admin user\",\r\n            \"teachermode\": \"Teacher mode\",\r\n            \"showcorrect\": \"Show correct answers\",\r\n            \"hidecorrect\": \"Hide correct answers\",\r\n            \"question\": \"Question\",\r\n            \"answer\": \"Answer\",\r\n            \"addnewquestion\": \"Add new question\",\r\n            \"addnewanswer\": \"Add new answer\",\r\n            \"addnewquiz\": \"Add new quiz\",\r\n            \"delete\": \"Delete\",\r\n            \"regerror\": \"Registration failed\",\r\n            \"files\": \"Files\",\r\n            \"deleting\": \"Deleting\",\r\n            \"areyousuredelete\": \"Are you sure you want to delete this quiz?\",\r\n            \"actioncannotbeundone\": \"This action cannot be undone!\",\r\n            \"cancel\": \"Cancel\",\r\n            \"logout\": \"Logout\",\r\n            \"landingtext\": \"Please log in or register to continue\",\r\n            \"loginfail\": \"Login failed\",\r\n            \"loginsuccess\": \"Login successful! Welcome\",\r\n            \"registersuccess\": \"Registration successful! Welcome\",\r\n            \"registerfail\": \"Registration failed\",\r\n            \"greet\": \"Hello\",\r\n            \"userinrole\": \"User in role\"\r\n        },\r\n        fi: {\r\n            \"login\": \"Kirjaudu\",\r\n            \"register\": \"Rekisteröidy\",\r\n            \"email\": \"Sähköposti\",\r\n            \"password\": \"Salasana\",\r\n            \"reglink\": \"Rekisteröidy tästä\",\r\n            \"firstname\": \"Etunimi\",\r\n            \"surname\": \"Sukunimi\",\r\n            \"adminuser\": \"Admin-käyttäjä\",\r\n            \"teachermode\": \"Opettaja\",\r\n            \"showcorrect\": \"Näytä oikeat vastaukset\",\r\n            \"hidecorrect\": \"Piilota oikeat vastaukset\",\r\n            \"question\": \"Kysymys\",\r\n            \"answer\": \"Vastaus\",\r\n            \"addnewquestion\": \"Lisää uusi kysymys\",\r\n            \"addnewanswer\": \"Lisää uusi vastaus\",\r\n            \"addnewquiz\": \"Lisää uusi tentti\",\r\n            \"delete\": \"Poista\",\r\n            \"regerror\": \"Rekisteröityminen epäonnistui\",\r\n            \"files\": \"Tiedostot\",\r\n            \"deleting\": \"Poistetaan\",\r\n            \"areyousuredelete\": \"Oletko varma, että haluat poistaa tämän tentin?\",\r\n            \"actioncannotbeundone\": \"Tätä toimintoa ei voi peruuttaa!\",\r\n            \"cancel\": \"Peruuta\",\r\n            \"logout\": \"Kirjaudu ulos\",\r\n            \"landingtext\": \"Kirjauduthan sisään jatkaaksesi\",\r\n            \"loginfail\": \"Kirjautuminen epäonnistui\",\r\n            \"loginsuccess\": \"Kirjautuminen onnistui! Tervetuloa\",\r\n            \"registersuccess\": \"Rekisteröityminen onnistui! Tervetuloa\",\r\n            \"registerfail\": \"Rekisteröityminen epäonnistui\",\r\n            \"greet\": \"Hei\",\r\n            \"userinrole\": \"Käyttäjä roolissa\"\r\n        }\r\n    }\r\n)\r\n\r\nexport default strings","\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button, IconButton, MenuItem, Select } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport strings from '../localization/strings';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  lanselect: {\r\n    margin: theme.spacing(1),\r\n    width: \"70px\",\r\n    paddingInlineStart: '15px'\r\n  }\r\n}));\r\n\r\n\r\nfunction ButtonAppBar(props) {\r\n  strings.setLanguage(props.language)\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n              Quiz App\r\n            </Link>\r\n          </Typography>\r\n          <Select className={classes.lanselect} defaultValue=\"en\" style={{ color: 'white' }} onChange={(e) => props.switchLanguage(e.target.value)}  >\r\n            <MenuItem value=\"en\" selected> EN </MenuItem>\r\n            <MenuItem value=\"fi\"> FI </MenuItem>\r\n          </Select>\r\n          {props.isLoggedIn ? <Button variant=\"contained\" color=\"primary\" disableElevation onClick={() => props.logOut()}>{strings.logout}</Button>\r\n            :\r\n            <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n              <Button variant=\"contained\" color=\"primary\" disableElevation>{strings.login}</Button>\r\n            </Link>\r\n          }\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonAppBar\r\n","import React, { useEffect, useState } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { Button, Checkbox, TextField } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport strings from '../localization/strings';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Register = (props) => {\r\n    const [userData, setUserData] = useState({\r\n        firstname: '',\r\n        surname: '',\r\n        email: '',\r\n        password: '',\r\n        role_id: 2\r\n    })\r\n    const [isAdmin, setIsAdmin] = useState(true)\r\n    const [isRegistered, setIsRegistered] = useState(false)\r\n\r\n    const [errorMsg, setErrorMsg] = useState(\"\")\r\n\r\n    const changeData = (e, field) => {\r\n        setUserData({ ...userData, [field]: e.target.value })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isAdmin) {\r\n            setUserData({ ...userData, \"role_id\": 2 }) // roleid 2: teacher\r\n        } else {\r\n            setUserData({ ...userData, \"role_id\": 3 }) // roleid 3: student\r\n        }\r\n    }, [isAdmin])\r\n\r\n\r\n    const registering = () => {\r\n        console.log(userData)\r\n        props.submitRegistration(userData)\r\n    }\r\n    // const submitRegistration = async (e) => {\r\n    //     console.log(userData)\r\n    //     let body = {\r\n    //         email: userData.email,\r\n    //         password: userData.password,\r\n    //         firstname: userData.firstname,\r\n    //         surname: userData.surname,\r\n    //         role_id: userData.role_id\r\n    //     }\r\n    //     console.log(body)\r\n    //     e.preventDefault()\r\n    //     try {\r\n    //         await axios.post(\"http://localhost:5000/register/\", body).then(response => {\r\n    //             setErrorMsg(\"\");\r\n    //             setIsRegistered(true)\r\n    //         })\r\n\r\n    //     } catch (e) {\r\n    //         setErrorMsg(strings.regerror)\r\n    //         console.log(\"registration error\", e)\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {props.isRegistered ? <Redirect to=\"/\" /> :\r\n                <List>\r\n                    <ListItem>\r\n                        <h2>{strings.register}</h2>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <TextField onChange={(event) => changeData(event, \"firstname\")} size=\"small\" label={strings.firstname} variant=\"outlined\"></TextField>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <TextField onChange={(event) => changeData(event, \"surname\")} size=\"small\" label={strings.surname} variant=\"outlined\"></TextField>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <TextField onChange={(event) => changeData(event, \"email\")} size=\"small\" label={strings.email} variant=\"outlined\"></TextField>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <TextField onChange={(event) => changeData(event, \"password\")} size=\"small\" label={strings.password} type=\"password\" variant=\"outlined\"></TextField>\r\n                    </ListItem>\r\n                    <ListItem><Checkbox checked={isAdmin} onChange={(e) => setIsAdmin(!isAdmin)} /> {strings.adminuser}?</ListItem>\r\n                    <ListItem>\r\n                        <Button variant=\"outlined\" onClick={registering}>{strings.register}</Button>\r\n                    </ListItem>\r\n                    <ListItem className=\"errorMessage\">{errorMsg}</ListItem>\r\n                </List>\r\n            }\r\n        </div >\r\n    )\r\n};\r\n\r\nexport default Register;","import axios from 'axios';\r\nimport React, { useCallback, useMemo } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport superagent from 'superagent'\r\nimport strings from '../localization/strings';\r\n\r\nfunction QuestionDropZone(props) {\r\n    // https://github.com/react-dropzone/react-dropzone/tree/master/examples/styling\r\n\r\n    const baseStyle = {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: '20px',\r\n        borderWidth: 2,\r\n        borderRadius: 2,\r\n        borderColor: '#eeeeee',\r\n        borderStyle: 'dashed',\r\n        backgroundColor: '#fafafa',\r\n        color: '#bdbdbd',\r\n        outline: 'none',\r\n        transition: 'border .24s ease-in-out'\r\n    };\r\n\r\n    const activeStyle = {\r\n        borderColor: '#2196f3'\r\n    };\r\n\r\n    const acceptStyle = {\r\n        borderColor: '#00e676'\r\n    };\r\n\r\n    const rejectStyle = {\r\n        borderColor: '#ff1744'\r\n    };\r\n\r\n\r\n    const onDrop = useCallback(async files => {\r\n        console.log(files);\r\n\r\n        const req = superagent.post('http://localhost:5000/upload');\r\n\r\n        files.forEach(file => {\r\n            req.attach('file', file);\r\n            console.log(file)\r\n        });\r\n        req.end((err, res) => {\r\n            console.log(\"THIS IS THE RES\", res)\r\n        });\r\n\r\n    }, []);\r\n\r\n    // const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n    const {\r\n        acceptedFiles,\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject\r\n    } = useDropzone({ onDrop });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isDragActive ? activeStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n    }));\r\n    const files = acceptedFiles.map(file => (\r\n        <li key={file.path}>\r\n          {file.path} - {file.size} bytes\r\n        </li>\r\n      ));\r\n      \r\n    //https://github.com/react-dropzone/react-dropzone/tree/master/examples/basic\r\n    return (\r\n        <section>\r\n            <div {...getRootProps({ style })}>\r\n                <input {...getInputProps()} />\r\n                {\r\n                    isDragActive ?\r\n                        <p>Drop the files here ...</p> :\r\n                        <p>Drag 'n' drop some files here, or click to select files</p>\r\n                }\r\n            </div>\r\n            <aside>\r\n                <ul>{strings.files}</ul>\r\n                <ul>{files}</ul>\r\n            </aside>\r\n        </section>\r\n    )\r\n}\r\nexport default QuestionDropZone;","import { Button, ListItem, TextField } from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport { useState } from \"react\";\r\nimport strings from '../localization/strings';\r\nimport QuestionDropZone from \"./QuestionDropZone\";\r\n\r\nfunction EditQuestion(props) {\r\n    const [showDropZone, setShowDropZone] = useState(false)\r\n    const openDropZone = () => {\r\n        setShowDropZone(!showDropZone)\r\n    }\r\n\r\n    return (<div>\r\n        <ListItem key={props.value.id} role={undefined} dense >\r\n            <TextField fullWidth onChange={(event) => props.updateQuestion(event, props.quiz, props.parentIndex)} size=\"small\" label={(strings.question) + \" \" + (props.parentIndex + 1)} variant=\"outlined\" value={props.value.question} />\r\n            <Button className=\"deleteButton\" onClick={(event) => props.deleteQuestion(event, props.quiz, props.parentIndex)}><DeleteIcon /></Button>\r\n            <Button className=\"deleteButton\" onClick={(event) => openDropZone()}><ImageIcon /></Button>\r\n        </ListItem>\r\n        <ListItem>\r\n            {showDropZone ?\r\n                <QuestionDropZone />\r\n                : \"\"\r\n            }\r\n\r\n        </ListItem></div>\r\n    )\r\n}\r\nexport default EditQuestion;","import { Button, Checkbox, ListItem, ListItemIcon, TextField } from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport strings from '../localization/strings';\r\n\r\nfunction EditAnswerOption(props) {\r\n    const GreenCheckbox = withStyles({\r\n        root: {\r\n          color: green[400],\r\n          '&$checked': {\r\n            color: green[600],\r\n          },\r\n        },\r\n        checked: {},\r\n      })((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n    return (\r\n        <ListItem key={\"editansweropt\" + props.value.id} role={undefined} dense >\r\n            <ListItemIcon>\r\n                <GreenCheckbox\r\n                    onChange={(event) => props.updateAnsweroption(event, props.quiz, props.parentIndex, props.index, \"CHECKBOX\")}\r\n                    checked={props.value.correct}\r\n                    edge=\"start\"\r\n                    tabIndex={-1}\r\n                />\r\n            </ListItemIcon>\r\n            <ListItemIcon>\r\n                <Checkbox\r\n                    // TODO:\r\n                    // onChange={(event) => console.log(event, \"click\")}\r\n                     onChange={(event) => props.dispatch({ type: \"SELECT_TOGGLE\", data: { newText: event.target.value, quizIndex: props.quiz, questionIndex: props.parentIndex, answerIndex: props.index } })}\r\n                    checked={props.value.selected}\r\n                    edge=\"start\"\r\n                    tabIndex={-1}\r\n                />\r\n            </ListItemIcon>\r\n                <div>\r\n                    <TextField onChange={(event) => props.updateAnsweroption(event, props.quiz, props.parentIndex, props.index, \"TEXT\")} size=\"small\" label={(strings.answer) + \" \" + (props.index + 1)} variant=\"outlined\" value={props.value.answer} />\r\n                    <Button className=\"deleteButton\" onClick={(event) => props.deleteAnsweroption(event, props.quiz, props.parentIndex, props.index)}><DeleteIcon /></Button>\r\n                </div>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default EditAnswerOption;","import { Checkbox, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nfunction AnswerOption(props) {\r\n    const GreenCheckbox = withStyles({\r\n        root: {\r\n            color: green[400],\r\n            '&$checked': {\r\n                color: green[600],\r\n            },\r\n        },\r\n        checked: {},\r\n    })((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n    return (\r\n        <ListItem key={props.value.id} role={undefined} dense >\r\n            <ListItemIcon>\r\n                {props.answersVisible ?\r\n                    <GreenCheckbox\r\n                        checked={props.value.correct}\r\n                        edge=\"start\"\r\n                        tabIndex={-1}\r\n                        disabled={true}\r\n                    /> : null}\r\n            </ListItemIcon>\r\n            <ListItemIcon>\r\n                <Checkbox\r\n                    // TODO:\r\n                    // onChange={(event) => dispatch({ type: \"SELECT_TOGGLE\", data: { newText: event.target.value, quizIndex: quiz, questionIndex: parentIndex, answerIndex: index } })}\r\n                    checked={props.value.selected}\r\n                    edge=\"start\"\r\n                    tabIndex={-1}\r\n                />\r\n            </ListItemIcon>\r\n            <div><ListItemText id={props.index} primary={props.value.answer} /></div>\r\n        </ListItem>\r\n    )\r\n}\r\nexport default AnswerOption;","import React, { useState } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport {\r\n    Link, Redirect\r\n} from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport strings from '../localization/strings';\r\n\r\nconst Login = (props) => {\r\n    const [userData, setUserData] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    const changeData = (e, field) => {\r\n        setUserData({ ...userData, [field]: e.target.value })\r\n    }\r\n\r\n    // const submitLogin = async (e) => {\r\n    //     console.log(userData)\r\n    //     let body = {\r\n    //         email: userData.email,\r\n    //         password: userData.password,\r\n    //     }\r\n    //     console.log(body)\r\n    //     e.preventDefault()\r\n    //     try {\r\n    //         await axios.post(\"http://localhost:5000/login/\", body).then(response => {\r\n    //             console.log(response, \"LOGIN RESPONSE\")\r\n    //             localStorage.setItem('jwtToken', response.data.token)\r\n    //             setIsLoggedIn(true)\r\n    //         })\r\n    //     } catch (e) {\r\n    //         console.log(\"registration error\", e)\r\n    //     }\r\n    // }\r\n\r\n    const loggingIn = () => {\r\n        console.log(userData)\r\n        // setIsLoggedIn(true)       \r\n        props.submitLogin(userData)\r\n    }\r\n\r\n    // localstorage jwtToken tallenna userid rooli\r\n    return (\r\n        <div className=\"container\">\r\n            {/* {props.isLoggedIn ? <Redirect to= \"/\"/> :  */}\r\n            <List>\r\n                <ListItem>\r\n                    <h2>{strings.login}</h2>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <TextField onChange={(event) => changeData(event, \"email\")} size=\"small\" label={strings.email} variant=\"outlined\"></TextField>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <TextField onChange={(event) => changeData(event, \"password\")} size=\"small\" label={strings.password} type=\"password\" variant=\"outlined\"></TextField>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Button variant=\"outlined\" onClick={loggingIn}>{strings.login}</Button>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Link to=\"/register\"><i>{strings.reglink}</i></Link>\r\n                </ListItem>\r\n            </List>\r\n            {/* } */}\r\n        </div>\r\n    )\r\n};\r\nexport default Login","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nfunction NewQuizDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [quizname, setQuizname] = useState(\"\")\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    handleClose();\r\n    props.addNewQuiz(quizname);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen}><AddCircleIcon /> Add new quiz </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Create New Quiz</DialogTitle>\r\n        <DialogContent>\r\n\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Quiz name\"\r\n            fullWidth\r\n            onChange={(e) => setQuizname(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Create new quiz\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\nexport default NewQuizDialog;\r\n","import { Button, ListItem, ListItemIcon, TextField } from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport strings from '../localization/strings';\r\nimport React, { useState } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nfunction EditQuizTitleComponent(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        handleClose();\r\n        props.deleteQuiz(event, props.quizindex);\r\n    }\r\n\r\n    return (\r\n        <ListItem key={\"editquiztitlecomp\" + props.quizid} role={undefined} dense >\r\n            <div>\r\n                <TextField onChange={(event) => props.updateQuiz(event, props.quizindex)} size=\"small\" variant=\"outlined\" value={props.quizname} />\r\n                <Button className=\"deleteButton\" onClick={handleClickOpen}><DeleteIcon /></Button>\r\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">{strings.deleting} {props.quizname}</DialogTitle>\r\n                    <DialogContent>\r\n                        <p>\r\n                            {strings.areyousuredelete}\r\n                        </p>\r\n                        <p>\r\n                            <u>{strings.actioncannotbeundone}</u>\r\n                        </p>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            {strings.cancel}\r\n                        </Button>\r\n                        <Button onClick={handleSubmit} color=\"secondary\">\r\n                            {strings.delete}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default EditQuizTitleComponent;","import {ListItem} from \"@material-ui/core\";\r\n\r\nfunction QuizTitleComponent(props) {\r\n    return (\r\n        <ListItem key=\"editquiztitlecomp\" >\r\n            <div >\r\n               <h2>{props.quizname}</h2>\r\n            </div>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default QuizTitleComponent;","import './App.css';\nimport React, { useEffect, useState, useReducer } from 'react';\nimport ButtonAppBar from './components/ButtonAppBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Container, Paper, Button } from '@material-ui/core';\nimport axios from 'axios';\nimport Register from './components/Register'\nimport EditQuestion from './components/EditQuestion';\nimport EditAnswerOption from './components/EditAnswerOption';\nimport AnswerOption from './components/AnswerOption';\nimport Login from './components/Login';\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport strings from './localization/strings';\nimport { useSnackbar, withSnackbar } from 'notistack';\nimport socketIOClient from 'socket.io-client'\nimport NewQuizDialog from './components/NewQuizDialog';\nimport EditQuizTitleComponent from './components/EditQuizTitleComponent';\nimport QuizTitleComponent from './components/QuizTitleComponent';\nvar sIOEndpoint = ''\n// const sIOEndpoint = 'ws://localhost:9000'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\n\nvar path = null;\nswitch (process.env.NODE_ENV) {\n\n  case 'production':\n    path = 'https://vappus-quiz-app.herokuapp.com/'\n    sIOEndpoint = 'https://vappus-quiz-app.herokuapp.com'\n    break;\n  case 'development':\n    path = 'http://localhost:5000/'\n    sIOEndpoint = 'http://localhost:5000'\n    break;\n  case 'test':\n    path = 'http://localhost:5000/'\n    break;\n  default:\n    // eslint-disable-next-line no-throw-literal\n    throw \"Environment not set\"\n}\n\n// ----------------REDUCER----------------------------------------------------\nfunction reducer(state, action) {\n  let deepCopy = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case 'increment':\n      return { count: state.count + 1 };\n    case \"INIT_DATA\":\n      console.log(action)\n      return action.data; /// <--- this should be state\n    case \"ANSWER_CHANGED\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].answer = action.data.newText;\n      return deepCopy;\n    case \"QUESTION_CHANGED\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].question = action.data.newText;\n      return deepCopy;\n    case \"QUIZ_CHANGED\":\n      deepCopy[action.data.quizIndex].quizname = action.data.newText;\n      return deepCopy;\n    case \"ADD_ANSWER\":\n      let newAnswer = { answer: \"\", correct: false, selected: false, id: action.data.id }\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions.push(newAnswer)\n      return deepCopy;\n    case \"ADD_QUESTION\":\n      let newQuestion = { question: \"\", answerOptions: [], id: action.data.id }\n      deepCopy[action.data.quizIndex].quizQuestions.push(newQuestion)\n      return deepCopy;\n    case \"ADD_QUIZ\":\n      let newQuiz = { id: action.data.quizId, quizname: action.data.quizname, quizQuestions: [] }\n      deepCopy.push(newQuiz)\n      return deepCopy;\n    case \"DELETE_ANSWER\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions.splice(action.data.answerIndex, 1)\n      return deepCopy;\n    case \"DELETE_QUESTION\":\n      deepCopy[action.data.quizIndex].quizQuestions.splice(action.data.questionIndex, 1)\n      return deepCopy;\n    case \"DELETE_QUIZ\":\n      deepCopy.splice(action.data.quizIndex, 1)\n      return deepCopy;\n    case \"SELECT_TOGGLE\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].selected =\n        !deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].selected;\n      return deepCopy;\n    case \"CORRECT_TOGGLE\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].correct =\n        !deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].correct;\n      return deepCopy;\n    default:\n      throw new Error();\n  }\n}\n\n// ----------------APP-------------------------------------------------------\n\nfunction App() {\n\n  const classes = useStyles();\n  const [dataAlustettu, setDataAlustettu] = useState(false);\n  const [quiz, setQuiz] = useState(0);\n  const [answersVisible, setAnswersVisible] = useState(false);\n  const [state, dispatch] = useReducer(reducer, []);\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [admin, setAdmin] = useState(false)\n  const [lan, setLan] = useState('en')\n  const { enqueueSnackbar } = useSnackbar();\n  const [user, setUser] = useState({\n    firstname: \"\",\n    surname: \"\",\n    id: null,\n    role_id: null\n  })\n\n  /// LOGIN\n\n  \n  const submitRegistration = async (userData) => {\n    console.log(userData)\n    let body = {\n        email: userData.email,\n        password: userData.password,\n        firstname: userData.firstname,\n        surname: userData.surname,\n        role_id: userData.role_id\n    }\n    console.log(body)\n    try {\n        await axios.post(\"http://localhost:5000/register/\", body).then(response => {\n          var snackMsg = strings.registersuccess\n          enqueueSnackbar(snackMsg, { variant: 'success' })\n          setUser(userData)\n          if (userData.role_id == 2) {\n            setAdmin(true)\n          }\n          setLoggedIn(true)\n        })\n\n    } catch (e) {\n      var snackMsg = strings.registerfail\n      enqueueSnackbar(snackMsg, { variant: 'error' })\n      console.log(\"registration error\", e)\n    }\n}\n\n  const submitLogin = async (userData) => {\n    console.log(userData)\n    let body = {\n      email: userData.email,\n      password: userData.password,\n    }\n    console.log(body)\n    try {\n      await axios.post(\"http://localhost:5000/login/\", body).then(response => {\n        console.log(response, \"LOGIN RESPONSE\")\n        localStorage.setItem('jwtToken', response.data.token)\n        setUser({ firstname: response.data.userObj.firstname, surname: response.data.userObj.surname, id: response.data.userObj.surname, role_id: response.data.userObj.role_id })\n        if (response.data.userObj.role_id == 2) {\n          setAdmin(true)\n        }\n        setLoggedIn(true)\n        var snackMsg = strings.loginsuccess\n        enqueueSnackbar(snackMsg, { variant: 'success' })\n      })\n    } catch (e) {\n      var snackMsg = strings.loginfail\n      enqueueSnackbar(snackMsg, { variant: 'error' })\n      console.log(\"login error\", e)\n    }\n  }\n\n  const logOut = () => {\n    setUser({\n      firstname: \"\",\n      surname: \"\",\n      id: null,\n      role_id: null\n    })\n    setLoggedIn(false)\n    setAdmin(false)\n  }\n\n  useEffect(() => {\n    const socket = socketIOClient(sIOEndpoint)\n    socket.on('connected', function (data) {\n      console.log(\"CONNECTED\")\n      socket.emit('ready for data', {})\n      enqueueSnackbar('Socket connected!')\n    });\n    socket.on('update', function (data) {\n      var snackMsg = \"\"\n      console.log(\"UPDATED\", data.message.payload)\n      switch (data.message.channel) {\n        case \"addquiz\":\n          snackMsg = \"New Quiz: \" + data.message.payload\n          break;\n        case \"adduser\":\n          snackMsg = data.message.payload + \" just registered for the first time!\"\n          break;\n        case \"alterquiz\":\n          let thisPayload = JSON.parse(data.message.payload)\n          console.log(\"hi from here\")\n          console.log(thisPayload)\n          snackMsg = \"Quiz: \" + thisPayload.old + \" was renamed to \" + thisPayload.new\n          break;\n        case \"addedrecord\":\n          snackMsg = \"this is a test!\"\n          break;\n        default:\n          break;\n      }\n      enqueueSnackbar(snackMsg)\n    })\n    return \n  }, [])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let result = await axios.get(path + \"quiz\")\n        if (result.data.length > 0) {\n          for (var i = 0; i < result.data.length; i++) {\n            result.data[i].quizQuestions = []\n            let questions = await axios.get(path + \"quiz/\" + result.data[i].id + \"/question/\")\n            result.data[i].quizQuestions = questions.data;\n            if (result.data[i].quizQuestions.length > 0) {\n              for (var j = 0; j < result.data[i].quizQuestions.length; j++) {\n                result.data[i].quizQuestions[j].answerOptions = [];\n                let answers = await axios.get(path + \"quiz/\" + result.data[i].id + \"/question/\" + result.data[i].quizQuestions[j].id + \"/answer\")\n                result.data[i].quizQuestions[j].answerOptions = answers.data;\n              }\n            }\n          }\n          console.log(result.data)\n          dispatch({ type: \"INIT_DATA\", data: result.data })\n          setDataAlustettu(true)\n        } else {\n          // eslint-disable-next-line no-throw-literal\n          throw (\"No data :(\")\n        }\n      }\n      catch (exception) {\n        console.log(exception)\n      }\n    }\n    fetchData();\n  }, [])\n\n  const getWindowLanguage = () => {\n    var language\n    console.log(window.navigator.languages)\n    if (window.navigator.languages) {\n      language = window.navigator.languages[0]\n    } else {\n      language = window.navigator.userLanguage || window.navigator.language\n    }\n    return language;\n  }\n\n  const switchLanguage = (newLan) => {\n    setLan(newLan)\n    strings.setLanguage(newLan)\n  }\n\n\n  // TODO: updateUseranswer\n\n  //// POST ---------------------------------------------------------------------------------------------------\n  const addQuestion = async (event, quizIndex) => {\n    let quizId = state[quizIndex].id;\n    let body = {}\n    try {\n      let result = await axios.post(path + \"quiz/\" + quizId, body).then(response => {\n        console.log(\"new id\" + response.data.id);\n        dispatch({ type: \"ADD_QUESTION\", data: { quizIndex: quiz, id: response.data.id } })\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const addAnsweroption = async (event, quizIndex, questionIndex) => {\n    let quizId = state[quizIndex].id;\n    let questionId = state[quizIndex].quizQuestions[questionIndex].id;\n    let body = { correct: false }\n    try {\n      let result = await axios.post(path + \"quiz/\" + quizId + \"/question/\" + questionId, body).then(response => {\n        console.log(\"new id\" + response.data.id);\n        dispatch({ type: \"ADD_ANSWER\", data: { quizIndex: quiz, questionIndex: questionIndex, id: response.data.id } })\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const addQuiz = async (quizname) => {\n    let body = { quizname: quizname }\n    try {\n      let result = await axios.post(path + \"quiz/\", body).then(response => {\n        console.log(\"new id\" + response.data.id);\n        dispatch({ type: \"ADD_QUIZ\", data: { quizId: response.data.id, quizname: quizname } })\n      })\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  //// PUT -------------------------------------------------------------------------------------------------------\n  const updateQuiz = async (event, quizIndex,) => {\n    console.log(event.target.value)\n    let quizId = state[quizIndex].id;\n    let body = {\n      quizname: event.target.value\n    }\n    try {\n      let result = await axios.put(path + \"quiz/\" + quizId, body)\n      dispatch({ type: \"QUIZ_CHANGED\", data: { newText: body.quizname, quizIndex: quizIndex } })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const updateQuestion = async (event, quizIndex, questionIndex) => {\n    let quizId = state[quizIndex].id;\n    let questionId = state[quizIndex].quizQuestions[questionIndex].id;\n    let body = {\n      question: event.target.value\n    }\n    try {\n      let result = await axios.put(path + \"quiz/\" + quizId + \"/question/\" + questionId, body)\n      dispatch({ type: \"QUESTION_CHANGED\", data: { newText: body.question, quizIndex: quizIndex, questionIndex: questionIndex } })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n  const updateAnsweroption = async (event, quizIndex, questionIndex, answerIndex, editMode) => {\n    let quizId = state[quizIndex].id;\n    let questionId = state[quizIndex].quizQuestions[questionIndex].id;\n    let answerId = state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].id;\n    let body = {}\n    switch (editMode) {\n      case \"TEXT\":\n        body.answer = event.target.value;\n        body.correct = state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].correct;\n        break;\n      case \"CHECKBOX\":\n        body.answer = state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].answer;\n        body.correct = !state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].correct;\n        break;\n      default:\n        body.answer = state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].answer;\n        body.correct = state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].correct;\n        break;\n    }\n    try {\n      let result = await axios.put(path + \"quiz/\" + quizId + \"/question/\" + questionId + \"/answer/\" + answerId, body)\n      switch (editMode) {\n        case \"TEXT\":\n          dispatch({ type: \"ANSWER_CHANGED\", data: { newText: body.answer, quizIndex: quizIndex, questionIndex: questionIndex, answerIndex: answerIndex } })\n          break;\n        case \"CHECKBOX\":\n          dispatch({ type: \"CORRECT_TOGGLE\", data: { newText: body.answer, quizIndex: quizIndex, questionIndex: questionIndex, answerIndex: answerIndex } })\n          break;\n        default:\n          break;\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  //// DELETE ------------------------------------------------------------------------------------------------\n\n  const deleteQuestion = async (event, quizIndex, questionIndex) => {\n    let quizId = state[quizIndex].id;\n    let questionId = state[quizIndex].quizQuestions[questionIndex].id;\n    try {\n      let result = await axios.delete(path + \"quiz/\" + quizId + \"/question/\" + questionId)\n      dispatch({ type: \"DELETE_QUESTION\", data: { newText: '', quizIndex: quiz, questionIndex: questionIndex } })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const deleteQuiz = async (event, quizIndex) => {\n    let quizId = state[quizIndex].id;\n    try {\n      setQuiz(0)\n      let result = await axios.delete(path + \"quiz/\" + quizId)\n      dispatch({ type: \"DELETE_QUIZ\", data: { newText: '', quizIndex: quizIndex } })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const deleteAnsweroption = async (event, quizIndex, questionIndex, answerIndex) => {\n    let quizId = state[quizIndex].id;\n    let questionId = state[quizIndex].quizQuestions[questionIndex].id;\n    let answerId = state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].id;\n    try {\n      let result = await axios.delete(path + \"quiz/\" + quizId + \"/question/\" + questionId + \"/answer/\" + answerId)\n      dispatch({ type: \"DELETE_ANSWER\", data: { newText: '', quizIndex: quiz, questionIndex: questionIndex, answerIndex: answerIndex } })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  //// MISC ---------------------------------------------------------------------------------------------------\n  const selectQuiz = (quizNo) => {\n    setQuiz(quizNo);\n  }\n\n  const toggleAnswers = () => {\n    setAnswersVisible(!answersVisible);\n  }\n\n  const [status, setStatus] = React.useState({\n    teacherMode: false,\n  });\n\n  const handleChange = (event) => {\n    setStatus({ ...status, [event.target.name]: event.target.checked });\n  };\n\n  // const [topicList, setTopicList] = useState([])\n  // const buildTopicList = (topic) => {\n  //   if (!topicList.includes(topic)) {\n  //     var newTopicList = [...topicList].concat(topic)\n  //     setTopicList(newTopicList)\n  //   }\n  // }\n\n\n\n  //// JSX ------------------------------------------------------------------------------------------------------\n  return (\n    <div>\n      <Container className=\"quizContainer\">\n        <ButtonAppBar switchLanguage={switchLanguage} isLoggedIn={loggedIn} logOut={logOut} language={lan} />\n        <Switch>\n          <Route exact path=\"/register\" component={() => <Register submitRegistration={submitRegistration} isRegistered={loggedIn}/>} />\n          {/* <Route exact path=\"/login\" component={() => <Login submitLogin={submitLogin} isLoggedIn={loggedIn} />} /> */}\n          <Route exact path=\"/\">\n            {loggedIn ?\n              <div>\n                <div className=\"greetingContainer\">\n                  <p className=\"greeting\">{strings.greet}, {user.firstname} {user.surname}<br/>\n                  {strings.userinrole}: {user.role_id}</p></div>\n                <div className={classes.root}>\n                  {/* <FormControlLabel\n                control={\n                  <MaterialSwitch\n                    checked={status.teacherMode}\n                    onChange={handleChange}\n                    name=\"teacherMode\"\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                  />\n                }\n                label={strings.teachermode} /><br /> */}\n\n                  {dataAlustettu ? state.map((val, index) => {\n                    return <Button variant=\"outlined\" onClick={() => selectQuiz(index)}>{val.quizname}</Button>\n                  }) : null}\n                  {admin && dataAlustettu ? <div><NewQuizDialog addNewQuiz={addQuiz} /></div> : \"\"}\n                </div>\n                {dataAlustettu ?\n                  <div className=\"questionCard\">\n                    <Paper elevation={1} padding=\"10%\">\n                      {admin\n                        ? <EditQuizTitleComponent quizname={state[quiz].quizname} quizid={state[quiz].id} quizindex={quiz} updateQuiz={updateQuiz} deleteQuiz={deleteQuiz} />\n                        : <QuizTitleComponent quizname={state[quiz].quizname} />}\n                    </Paper>\n                  </div>\n                  : \"\"}\n                {dataAlustettu ? state[quiz].quizQuestions.map((value, parentIndex) => {\n                  return (\n                    <div className=\"questionCard\">\n                      <Paper elevation={1}>\n                        <List className={classes.root}>\n                          <h3>{value.topicArea}</h3>\n                          {admin ?\n                            <EditQuestion value={value} quiz={quiz} parentIndex={parentIndex} updateQuestion={updateQuestion} deleteQuestion={deleteQuestion} />\n                            : <div className=\"question\">{value.question}</div>\n                          }\n                          {value.answerOptions.map((value, index) => {\n                            return (\n                              <div>\n                                {admin ?\n                                  <EditAnswerOption value={value} quiz={quiz} parentIndex={parentIndex} index={index} status={status}\n                                    updateAnsweroption={updateAnsweroption}\n                                    deleteAnsweroption={deleteAnsweroption}\n                                    dispatch={dispatch}\n                                  />\n                                  : <AnswerOption value={value} quiz={quiz} parentIndex={parentIndex} index={index} answersVisible={answersVisible} />}\n                              </div>\n                            )\n                          })}\n                          {admin ? <div className=\"addButton\"><Button onClick={(event) => addAnsweroption(event, quiz, parentIndex)}><AddCircleIcon /></Button></div> : \"\"}\n                        </List>\n                      </Paper>\n                    </div>\n                  );\n                })\n                  : null}\n                <div className=\"bottomButtons\">\n                  {admin ? <Button variant=\"contained\" onClick={(event) => addQuestion(event, quiz)}><AddIcon />   {strings.addnewquestion}</Button> :\n                    <Button variant=\"contained\" onClick={() => toggleAnswers()}>{answersVisible ? strings.hidecorrect : strings.showcorrect}</Button>\n                  }</div>\n              </div> :\n              <Login submitLogin={submitLogin} isLoggedIn={loggedIn} />}\n            {/* // <div className=\"landing\"> {strings.landingtext} </div> */}\n            {/* } */}\n\n\n\n\n          </Route>\n        </Switch>\n      </Container >\n    </div >\n  );\n}\nexport default withSnackbar(App);\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { SnackbarProvider } from 'notistack';\n\nReactDOM.render(\n    <BrowserRouter>\n      <SnackbarProvider maxSnack={3} variant=\"info\">\n        <App />\n      </SnackbarProvider>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}