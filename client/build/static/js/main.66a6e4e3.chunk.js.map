{"version":3,"sources":["localization/strings.js","components/ButtonAppBar.js","components/Register.js","components/QuestionDropZone.js","components/EditQuestion.js","components/EditAnswerOption.js","components/AnswerOption.js","components/Login.js","components/NewQuizDialog.js","components/EditQuizTitleComponent.js","components/QuizTitleComponent.js","App.js","reportWebVitals.js","index.js"],"names":["strings","LocalizedStrings","en","fi","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","lanselect","margin","width","paddingInlineStart","list","fullList","menuitem","heading","fontSize","typography","pxToRem","fontWeight","fontWeightBold","nameHeader","ButtonAppBar","props","setLanguage","language","classes","useState","drawerOpen","setDrawerOpen","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","Typography","variant","to","style","textDecoration","isLoggedIn","Button","disableElevation","logOut","logout","login","Fragment","Drawer","open","onClose","List","ListItem","user","firstname","surname","email","Accordion","AccordionSummary","AccordionDetails","MenuList","MenuItem","value","selected","e","switchLanguage","Register","password","role_id","userData","setUserData","isAdmin","setIsAdmin","errorMsg","changeData","field","target","useEffect","isRegistered","register","TextField","onChange","event","size","label","type","Checkbox","checked","adminuser","console","log","submitRegistration","QuestionDropZone","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","outline","transition","activeStyle","acceptStyle","rejectStyle","onDrop","useCallback","files","a","req","superagent","post","forEach","file","attach","end","err","res","useDropzone","acceptedFiles","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useMemo","map","path","EditQuestion","showDropZone","setShowDropZone","role","undefined","dense","fullWidth","updateQuestion","quiz","parentIndex","question","deleteQuestion","id","EditAnswerOption","GreenCheckbox","withStyles","green","ListItemIcon","updateAnsweroption","index","correct","tabIndex","dispatch","data","newText","quizIndex","questionIndex","answerIndex","answer","deleteAnsweroption","AnswerOption","answersVisible","disabled","ListItemText","primary","Login","submitLogin","reglink","NewQuizDialog","React","setOpen","quizname","setQuizname","handleClose","Dialog","aria-labelledby","DialogTitle","DialogContent","autoFocus","DialogActions","addNewQuiz","EditQuizTitleComponent","updateQuiz","quizindex","deleting","areyousuredelete","actioncannotbeundone","cancel","deleteQuiz","delete","quizid","QuizTitleComponent","sIOEndpoint","maxWidth","palette","background","paper","reducer","state","action","deepCopy","JSON","parse","stringify","count","quizQuestions","answerOptions","newAnswer","push","newQuestion","newQuiz","quizId","splice","Error","withSnackbar","dataAlustettu","setDataAlustettu","setQuiz","setAnswersVisible","useReducer","loggedIn","setLoggedIn","admin","setAdmin","lan","setLan","enqueueSnackbar","useSnackbar","localStorage","getItem","token","setToken","setUser","getUser","axios","get","then","response","body","snackMsg","registersuccess","registerfail","setItem","userObj","username","loginsuccess","loginfail","socket","socketIOClient","on","emit","message","payload","channel","thisPayload","old","new","result","length","i","questions","j","answers","fetchData","addQuestion","addAnsweroption","questionId","addQuiz","put","editMode","answerId","teacherMode","status","Container","newLan","removeItem","exact","component","greet","userinrole","val","Paper","elevation","topicArea","addnewquestion","hidecorrect","showcorrect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.66a6e4e3.chunk.js","sourcesContent":["import LocalizedStrings from \"react-localization\";\r\n\r\nlet strings = new LocalizedStrings(\r\n    {\r\n        en: {\r\n            \"login\": \"Login\",\r\n            \"register\": \"Register\",\r\n            \"email\": \"Email\",\r\n            \"password\": \"Password\",\r\n            \"reglink\": \"Register here\",\r\n            \"firstname\": \"First name\",\r\n            \"surname\": \"Surname\",\r\n            \"adminuser\": \"Admin user\",\r\n            \"teachermode\": \"Teacher mode\",\r\n            \"showcorrect\": \"Show correct answers\",\r\n            \"hidecorrect\": \"Hide correct answers\",\r\n            \"question\": \"Question\",\r\n            \"answer\": \"Answer\",\r\n            \"addnewquestion\": \"Add new question\",\r\n            \"addnewanswer\": \"Add new answer\",\r\n            \"addnewquiz\": \"Add new quiz\",\r\n            \"delete\": \"Delete\",\r\n            \"regerror\": \"Registration failed\",\r\n            \"files\": \"Files\",\r\n            \"deleting\": \"Deleting\",\r\n            \"areyousuredelete\": \"Are you sure you want to delete this quiz?\",\r\n            \"actioncannotbeundone\": \"This action cannot be undone!\",\r\n            \"cancel\": \"Cancel\",\r\n            \"logout\": \"Logout\",\r\n            \"landingtext\": \"Please log in or register to continue\",\r\n            \"loginfail\": \"Login failed\",\r\n            \"loginsuccess\": \"Login successful! Welcome\",\r\n            \"registersuccess\": \"Registration successful! Welcome\",\r\n            \"registerfail\": \"Registration failed\",\r\n            \"greet\": \"Hello\",\r\n            \"userinrole\": \"User in role\",\r\n            \"language\": \"Language settings\"\r\n        },\r\n        fi: {\r\n            \"login\": \"Kirjaudu\",\r\n            \"register\": \"Rekisteröidy\",\r\n            \"email\": \"Sähköposti\",\r\n            \"password\": \"Salasana\",\r\n            \"reglink\": \"Rekisteröidy tästä\",\r\n            \"firstname\": \"Etunimi\",\r\n            \"surname\": \"Sukunimi\",\r\n            \"adminuser\": \"Admin-käyttäjä\",\r\n            \"teachermode\": \"Opettaja\",\r\n            \"showcorrect\": \"Näytä oikeat vastaukset\",\r\n            \"hidecorrect\": \"Piilota oikeat vastaukset\",\r\n            \"question\": \"Kysymys\",\r\n            \"answer\": \"Vastaus\",\r\n            \"addnewquestion\": \"Lisää uusi kysymys\",\r\n            \"addnewanswer\": \"Lisää uusi vastaus\",\r\n            \"addnewquiz\": \"Lisää uusi tentti\",\r\n            \"delete\": \"Poista\",\r\n            \"regerror\": \"Rekisteröityminen epäonnistui\",\r\n            \"files\": \"Tiedostot\",\r\n            \"deleting\": \"Poistetaan\",\r\n            \"areyousuredelete\": \"Oletko varma, että haluat poistaa tämän tentin?\",\r\n            \"actioncannotbeundone\": \"Tätä toimintoa ei voi peruuttaa!\",\r\n            \"cancel\": \"Peruuta\",\r\n            \"logout\": \"Kirjaudu ulos\",\r\n            \"landingtext\": \"Kirjauduthan sisään jatkaaksesi\",\r\n            \"loginfail\": \"Kirjautuminen epäonnistui\",\r\n            \"loginsuccess\": \"Kirjautuminen onnistui! Tervetuloa\",\r\n            \"registersuccess\": \"Rekisteröityminen onnistui! Tervetuloa\",\r\n            \"registerfail\": \"Rekisteröityminen epäonnistui\",\r\n            \"greet\": \"Hei\",\r\n            \"userinrole\": \"Käyttäjä roolissa\",\r\n            \"language\": \"Kieliasetukset\"\r\n        }\r\n    }\r\n)\r\n\r\nexport default strings","\r\nimport React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Button, Drawer, IconButton, List, ListItem, MenuItem, MenuList, Select } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport strings from '../localization/strings';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  lanselect: {\r\n    margin: theme.spacing(1),\r\n    width: \"70px\",\r\n    paddingInlineStart: '15px'\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  menuitem: {\r\n    width: 'inherit'\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  nameHeader: {\r\n    fontSize: theme.typography.pxToRem(20),\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  }\r\n}));\r\n\r\n\r\nfunction ButtonAppBar(props) {\r\n  strings.setLanguage(props.language)\r\n  const classes = useStyles();\r\n  const [drawerOpen, setDrawerOpen] = useState(false)\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => setDrawerOpen(true)}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n              Quiz App\r\n            </Link>\r\n          </Typography>\r\n\r\n          {props.isLoggedIn ? <Button variant=\"contained\" color=\"primary\" disableElevation onClick={() => props.logOut()}>{strings.logout}</Button>\r\n            :\r\n            <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n              <Button variant=\"contained\" color=\"primary\" disableElevation>{strings.login}</Button>\r\n            </Link>\r\n          }\r\n        </Toolbar>\r\n      </AppBar>\r\n      <React.Fragment key=\"menudrawer\">\r\n        <Drawer open={drawerOpen} onClose={() => setDrawerOpen(false)}>\r\n          <List className={classes.list}>\r\n            <ListItem>\r\n              <Typography className={classes.heading}><b>Quiz App</b></Typography>\r\n            </ListItem>\r\n            {props.isLoggedIn ?\r\n              <div>\r\n                <ListItem className={classes.nameHeader}>\r\n                {props.user.firstname} {props.user.surname}\r\n                </ListItem>\r\n                <ListItem>\r\n                  <i>{props.user.email}</i>\r\n                </ListItem>\r\n              </div>\r\n              : \"\"}\r\n            <Accordion>\r\n              <AccordionSummary>\r\n                <Typography className={classes.heading}>{strings.language}</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <MenuList className={classes.list}>\r\n                  {/* not translating the language names, feels like it would make it easier for user */}\r\n                  <MenuItem value=\"en\" selected={props.language === \"en\"} onClick={(e) => props.switchLanguage(\"en\")}> English </MenuItem>\r\n                  <MenuItem value=\"fi\" selected={props.language === \"fi\"} onClick={(e) => props.switchLanguage(\"fi\")}> Suomi </MenuItem>\r\n                </MenuList>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n            {/* <Select className={classes.lanselect} defaultValue=\"en\" style={{ color: 'black' }} onChange={(e) => props.switchLanguage(e.target.value)}  >\r\n  \r\n              </Select> */}\r\n\r\n          </List>\r\n        </Drawer>\r\n      </React.Fragment>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonAppBar\r\n","import React, { useEffect, useState } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { Button, Checkbox, TextField } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport strings from '../localization/strings';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Register = (props) => {\r\n    const [userData, setUserData] = useState({\r\n        firstname: '',\r\n        surname: '',\r\n        email: '',\r\n        password: '',\r\n        role_id: 2\r\n    })\r\n    const [isAdmin, setIsAdmin] = useState(true)\r\n    const [isRegistered, setIsRegistered] = useState(false)\r\n\r\n    const [errorMsg, setErrorMsg] = useState(\"\")\r\n\r\n    const changeData = (e, field) => {\r\n        setUserData({ ...userData, [field]: e.target.value })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isAdmin) {\r\n            setUserData({ ...userData, \"role_id\": 2 }) // roleid 2: teacher\r\n        } else {\r\n            setUserData({ ...userData, \"role_id\": 3 }) // roleid 3: student\r\n        }\r\n    }, [isAdmin])\r\n\r\n\r\n    const registering = () => {\r\n        console.log(userData)\r\n        props.submitRegistration(userData)\r\n    }\r\n    // const submitRegistration = async (e) => {\r\n    //     console.log(userData)\r\n    //     let body = {\r\n    //         email: userData.email,\r\n    //         password: userData.password,\r\n    //         firstname: userData.firstname,\r\n    //         surname: userData.surname,\r\n    //         role_id: userData.role_id\r\n    //     }\r\n    //     console.log(body)\r\n    //     e.preventDefault()\r\n    //     try {\r\n    //         await axios.post(\"http://localhost:5000/register/\", body).then(response => {\r\n    //             setErrorMsg(\"\");\r\n    //             setIsRegistered(true)\r\n    //         })\r\n\r\n    //     } catch (e) {\r\n    //         setErrorMsg(strings.regerror)\r\n    //         console.log(\"registration error\", e)\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {props.isRegistered ? <Redirect to=\"/\" /> :\r\n                <List>\r\n                    <ListItem>\r\n                        <h2>{strings.register}</h2>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <TextField onChange={(event) => changeData(event, \"firstname\")} size=\"small\" label={strings.firstname} variant=\"outlined\"></TextField>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <TextField onChange={(event) => changeData(event, \"surname\")} size=\"small\" label={strings.surname} variant=\"outlined\"></TextField>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <TextField onChange={(event) => changeData(event, \"email\")} size=\"small\" label={strings.email} variant=\"outlined\"></TextField>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <TextField onChange={(event) => changeData(event, \"password\")} size=\"small\" label={strings.password} type=\"password\" variant=\"outlined\"></TextField>\r\n                    </ListItem>\r\n                    <ListItem><Checkbox checked={isAdmin} onChange={(e) => setIsAdmin(!isAdmin)} /> {strings.adminuser}?</ListItem>\r\n                    <ListItem>\r\n                        <Button variant=\"outlined\" onClick={registering}>{strings.register}</Button>\r\n                    </ListItem>\r\n                    <ListItem className=\"errorMessage\">{errorMsg}</ListItem>\r\n                </List>\r\n            }\r\n        </div >\r\n    )\r\n};\r\n\r\nexport default Register;","import axios from 'axios';\r\nimport React, { useCallback, useMemo } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport superagent from 'superagent'\r\nimport strings from '../localization/strings';\r\n\r\nfunction QuestionDropZone(props) {\r\n    // https://github.com/react-dropzone/react-dropzone/tree/master/examples/styling\r\n\r\n    const baseStyle = {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: '20px',\r\n        borderWidth: 2,\r\n        borderRadius: 2,\r\n        borderColor: '#eeeeee',\r\n        borderStyle: 'dashed',\r\n        backgroundColor: '#fafafa',\r\n        color: '#bdbdbd',\r\n        outline: 'none',\r\n        transition: 'border .24s ease-in-out'\r\n    };\r\n\r\n    const activeStyle = {\r\n        borderColor: '#2196f3'\r\n    };\r\n\r\n    const acceptStyle = {\r\n        borderColor: '#00e676'\r\n    };\r\n\r\n    const rejectStyle = {\r\n        borderColor: '#ff1744'\r\n    };\r\n\r\n\r\n    const onDrop = useCallback(async files => {\r\n        console.log(files);\r\n\r\n        const req = superagent.post('http://localhost:5000/upload');\r\n\r\n        files.forEach(file => {\r\n            req.attach('file', file);\r\n            console.log(file)\r\n        });\r\n        req.end((err, res) => {\r\n            console.log(\"THIS IS THE RES\", res)\r\n        });\r\n\r\n    }, []);\r\n\r\n    // const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n    const {\r\n        acceptedFiles,\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject\r\n    } = useDropzone({ onDrop });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isDragActive ? activeStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n    }));\r\n    const files = acceptedFiles.map(file => (\r\n        <li key={file.path}>\r\n          {file.path} - {file.size} bytes\r\n        </li>\r\n      ));\r\n      \r\n    //https://github.com/react-dropzone/react-dropzone/tree/master/examples/basic\r\n    return (\r\n        <section>\r\n            <div {...getRootProps({ style })}>\r\n                <input {...getInputProps()} />\r\n                {\r\n                    isDragActive ?\r\n                        <p>Drop the files here ...</p> :\r\n                        <p>Drag 'n' drop some files here, or click to select files</p>\r\n                }\r\n            </div>\r\n            <aside>\r\n                <ul>{strings.files}</ul>\r\n                <ul>{files}</ul>\r\n            </aside>\r\n        </section>\r\n    )\r\n}\r\nexport default QuestionDropZone;","import { Button, ListItem, TextField } from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport { useState } from \"react\";\r\nimport strings from '../localization/strings';\r\nimport QuestionDropZone from \"./QuestionDropZone\";\r\n\r\nfunction EditQuestion(props) {\r\n    const [showDropZone, setShowDropZone] = useState(false)\r\n    const openDropZone = () => {\r\n        setShowDropZone(!showDropZone)\r\n    }\r\n\r\n    return (<div>\r\n        <ListItem key={props.value.id} role={undefined} dense >\r\n            <TextField fullWidth onChange={(event) => props.updateQuestion(event, props.quiz, props.parentIndex)} size=\"small\" label={(strings.question) + \" \" + (props.parentIndex + 1)} variant=\"outlined\" value={props.value.question} />\r\n            <Button className=\"deleteButton\" onClick={(event) => props.deleteQuestion(event, props.quiz, props.parentIndex)}><DeleteIcon /></Button>\r\n            <Button className=\"deleteButton\" onClick={(event) => openDropZone()}><ImageIcon /></Button>\r\n        </ListItem>\r\n        <ListItem>\r\n            {showDropZone ?\r\n                <QuestionDropZone />\r\n                : \"\"\r\n            }\r\n\r\n        </ListItem></div>\r\n    )\r\n}\r\nexport default EditQuestion;","import { Button, Checkbox, ListItem, ListItemIcon, TextField } from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport strings from '../localization/strings';\r\n\r\nfunction EditAnswerOption(props) {\r\n    const GreenCheckbox = withStyles({\r\n        root: {\r\n          color: green[400],\r\n          '&$checked': {\r\n            color: green[600],\r\n          },\r\n        },\r\n        checked: {},\r\n      })((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n    return (\r\n        <ListItem key={\"editansweropt\" + props.value.id} role={undefined} dense >\r\n            <ListItemIcon>\r\n                <GreenCheckbox\r\n                    onChange={(event) => props.updateAnsweroption(event, props.quiz, props.parentIndex, props.index, \"CHECKBOX\")}\r\n                    checked={props.value.correct}\r\n                    edge=\"start\"\r\n                    tabIndex={-1}\r\n                />\r\n            </ListItemIcon>\r\n            <ListItemIcon>\r\n                <Checkbox\r\n                    // TODO:\r\n                    // onChange={(event) => console.log(event, \"click\")}\r\n                     onChange={(event) => props.dispatch({ type: \"SELECT_TOGGLE\", data: { newText: event.target.value, quizIndex: props.quiz, questionIndex: props.parentIndex, answerIndex: props.index } })}\r\n                    checked={props.value.selected}\r\n                    edge=\"start\"\r\n                    tabIndex={-1}\r\n                />\r\n            </ListItemIcon>\r\n                <div>\r\n                    <TextField onChange={(event) => props.updateAnsweroption(event, props.quiz, props.parentIndex, props.index, \"TEXT\")} size=\"small\" label={(strings.answer) + \" \" + (props.index + 1)} variant=\"outlined\" value={props.value.answer} />\r\n                    <Button className=\"deleteButton\" onClick={(event) => props.deleteAnsweroption(event, props.quiz, props.parentIndex, props.index)}><DeleteIcon /></Button>\r\n                </div>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default EditAnswerOption;","import { Checkbox, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nfunction AnswerOption(props) {\r\n    const GreenCheckbox = withStyles({\r\n        root: {\r\n            color: green[400],\r\n            '&$checked': {\r\n                color: green[600],\r\n            },\r\n        },\r\n        checked: {},\r\n    })((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n    return (\r\n        <ListItem key={props.value.id} role={undefined} dense >\r\n            <ListItemIcon>\r\n                {props.answersVisible ?\r\n                    <GreenCheckbox\r\n                        checked={props.value.correct}\r\n                        edge=\"start\"\r\n                        tabIndex={-1}\r\n                        disabled={true}\r\n                    /> : null}\r\n            </ListItemIcon>\r\n            <ListItemIcon>\r\n                <Checkbox\r\n                    // TODO:\r\n                    // onChange={(event) => dispatch({ type: \"SELECT_TOGGLE\", data: { newText: event.target.value, quizIndex: quiz, questionIndex: parentIndex, answerIndex: index } })}\r\n                    checked={props.value.selected}\r\n                    edge=\"start\"\r\n                    tabIndex={-1}\r\n                />\r\n            </ListItemIcon>\r\n            <div><ListItemText id={props.index} primary={props.value.answer} /></div>\r\n        </ListItem>\r\n    )\r\n}\r\nexport default AnswerOption;","import React, { useState } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport {\r\n    Link, Redirect\r\n} from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport strings from '../localization/strings';\r\n\r\nconst Login = (props) => {\r\n    const [userData, setUserData] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const changeData = (e, field) => {\r\n        setUserData({ ...userData, [field]: e.target.value })\r\n    }\r\n    const loggingIn = () => {\r\n        // setIsLoggedIn(true)       \r\n        props.submitLogin(userData)\r\n    }\r\n\r\n    // localstorage jwtToken tallenna userid rooli\r\n    return (\r\n        <div className=\"container\">\r\n            {/* {props.isLoggedIn ? <Redirect to= \"/\"/> :  */}\r\n            <List>\r\n                <ListItem>\r\n                    <h2>{strings.login}</h2>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <TextField onChange={(event) => changeData(event, \"email\")} size=\"small\" label={strings.email} variant=\"outlined\"></TextField>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <TextField onChange={(event) => changeData(event, \"password\")} size=\"small\" label={strings.password} type=\"password\" variant=\"outlined\"></TextField>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Button variant=\"outlined\" onClick={loggingIn}>{strings.login}</Button>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Link to=\"/register\"><i>{strings.reglink}</i></Link>\r\n                </ListItem>\r\n            </List>\r\n            {/* } */}\r\n        </div>\r\n    )\r\n};\r\nexport default Login","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nfunction NewQuizDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [quizname, setQuizname] = useState(\"\")\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    handleClose();\r\n    props.addNewQuiz(quizname);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen}><AddCircleIcon /> Add new quiz </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Create New Quiz</DialogTitle>\r\n        <DialogContent>\r\n\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Quiz name\"\r\n            fullWidth\r\n            onChange={(e) => setQuizname(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Create new quiz\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\nexport default NewQuizDialog;\r\n","import { Button, ListItem, ListItemIcon, TextField } from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport strings from '../localization/strings';\r\nimport React, { useState } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nfunction EditQuizTitleComponent(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        handleClose();\r\n        props.deleteQuiz(event, props.quizindex);\r\n    }\r\n\r\n    return (\r\n        <ListItem key={\"editquiztitlecomp\" + props.quizid} role={undefined} dense >\r\n            <div>\r\n                <TextField onChange={(event) => props.updateQuiz(event, props.quizindex)} size=\"small\" variant=\"outlined\" value={props.quizname} />\r\n                <Button className=\"deleteButton\" onClick={handleClickOpen}><DeleteIcon /></Button>\r\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">{strings.deleting} {props.quizname}</DialogTitle>\r\n                    <DialogContent>\r\n                        <p>\r\n                            {strings.areyousuredelete}\r\n                        </p>\r\n                        <p>\r\n                            <u>{strings.actioncannotbeundone}</u>\r\n                        </p>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            {strings.cancel}\r\n                        </Button>\r\n                        <Button onClick={handleSubmit} color=\"secondary\">\r\n                            {strings.delete}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default EditQuizTitleComponent;","import {ListItem} from \"@material-ui/core\";\r\n\r\nfunction QuizTitleComponent(props) {\r\n    return (\r\n        <ListItem key=\"editquiztitlecomp\" >\r\n            <div >\r\n               <h2>{props.quizname}</h2>\r\n            </div>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default QuizTitleComponent;","import './App.css';\nimport React, { useEffect, useState, useReducer } from 'react';\nimport ButtonAppBar from './components/ButtonAppBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Container, Paper, Button, Drawer, ListItem } from '@material-ui/core';\nimport axios from 'axios';\nimport Register from './components/Register'\nimport EditQuestion from './components/EditQuestion';\nimport EditAnswerOption from './components/EditAnswerOption';\nimport AnswerOption from './components/AnswerOption';\nimport Login from './components/Login';\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport strings from './localization/strings';\nimport { useSnackbar, withSnackbar } from 'notistack';\nimport socketIOClient from 'socket.io-client'\nimport NewQuizDialog from './components/NewQuizDialog';\nimport EditQuizTitleComponent from './components/EditQuizTitleComponent';\nimport QuizTitleComponent from './components/QuizTitleComponent';\nvar sIOEndpoint = ''\n// const sIOEndpoint = 'ws://localhost:9000'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\n\nvar path = null;\nswitch (process.env.NODE_ENV) {\n\n  case 'production':\n    path = 'https://vappus-quiz-app.herokuapp.com/'\n    sIOEndpoint = 'https://vappus-quiz-app.herokuapp.com'\n    break;\n  case 'development':\n    path = 'http://localhost:5000/'\n    sIOEndpoint = 'http://localhost:5000'\n    break;\n  case 'test':\n    path = 'http://localhost:5000/'\n    break;\n  default:\n    // eslint-disable-next-line no-throw-literal\n    throw \"Environment not set\"\n}\n\n// ----------------REDUCER----------------------------------------------------\nfunction reducer(state, action) {\n  let deepCopy = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case 'increment':\n      return { count: state.count + 1 };\n    case \"INIT_DATA\":\n      console.log(action)\n      return action.data; /// <--- this should be state\n    case \"ANSWER_CHANGED\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].answer = action.data.newText;\n      return deepCopy;\n    case \"QUESTION_CHANGED\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].question = action.data.newText;\n      return deepCopy;\n    case \"QUIZ_CHANGED\":\n      deepCopy[action.data.quizIndex].quizname = action.data.newText;\n      return deepCopy;\n    case \"ADD_ANSWER\":\n      let newAnswer = { answer: \"\", correct: false, selected: false, id: action.data.id }\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions.push(newAnswer)\n      return deepCopy;\n    case \"ADD_QUESTION\":\n      let newQuestion = { question: \"\", answerOptions: [], id: action.data.id }\n      deepCopy[action.data.quizIndex].quizQuestions.push(newQuestion)\n      return deepCopy;\n    case \"ADD_QUIZ\":\n      let newQuiz = { id: action.data.quizId, quizname: action.data.quizname, quizQuestions: [] }\n      deepCopy.push(newQuiz)\n      return deepCopy;\n    case \"DELETE_ANSWER\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions.splice(action.data.answerIndex, 1)\n      return deepCopy;\n    case \"DELETE_QUESTION\":\n      deepCopy[action.data.quizIndex].quizQuestions.splice(action.data.questionIndex, 1)\n      return deepCopy;\n    case \"DELETE_QUIZ\":\n      deepCopy.splice(action.data.quizIndex, 1)\n      return deepCopy;\n    case \"SELECT_TOGGLE\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].selected =\n        !deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].selected;\n      return deepCopy;\n    case \"CORRECT_TOGGLE\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].correct =\n        !deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].correct;\n      return deepCopy;\n    default:\n      throw new Error();\n  }\n}\n\n// ----------------APP-------------------------------------------------------\n\nfunction App() {\n\n  const classes = useStyles();\n  const [dataAlustettu, setDataAlustettu] = useState(false);\n  const [quiz, setQuiz] = useState(0);\n  const [answersVisible, setAnswersVisible] = useState(false);\n  const [state, dispatch] = useReducer(reducer, []);\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [admin, setAdmin] = useState(false)\n  const [lan, setLan] = useState('en')\n  const { enqueueSnackbar } = useSnackbar();\n  const [token, setToken] = useState(localStorage.getItem('jwtToken'))\n  const [user, setUser] = useState({\n    firstname: \"\",\n    surname: \"\",\n    email: \"\",\n    id: null,\n    role_id: null\n  })\n\n  /// LOGIN\n\n  useEffect(() => {\n    console.log(\"TOKEN \", token)\n    if (token === null) {\n      setLoggedIn(false)\n    }\n    else\n      setLoggedIn(true)\n\n    if (loggedIn) {\n      console.log(loggedIn)\n      getUser() // get user profile to populate user object\n    }\n  }, [loggedIn, token])\n\n  const getUser = async () => {\n    try {\n      await axios.get(path + \"user?secret_token=\" + token).then(response => {\n        setUser(response.data)\n        console.log(\"gotUser\" + response.data)\n        if (response.data.role_id == 2) {\n          setAdmin(true)\n        }\n        setLoggedIn(true)\n      })\n    } catch (e) {\n      console.log(\"error getting user\", e)\n    }\n  }\n  const submitRegistration = async (userData) => {\n    console.log(userData)\n    let body = {\n      email: userData.email,\n      password: userData.password,\n      firstname: userData.firstname,\n      surname: userData.surname,\n      role_id: userData.role_id\n    }\n    console.log(body)\n    try {\n      await axios.post(path + \"register/\", body).then(response => {\n        var snackMsg = strings.registersuccess\n        enqueueSnackbar(snackMsg, { variant: 'success' })\n        setUser(userData)\n        if (userData.role_id == 2) {\n          setAdmin(true)\n        }\n        setLoggedIn(true)\n      })\n\n    } catch (e) {\n      var snackMsg = strings.registerfail\n      enqueueSnackbar(snackMsg, { variant: 'error' })\n      console.log(\"registration error\", e)\n    }\n  }\n\n  const submitLogin = async (userData) => {\n    console.log(userData)\n    let body = {\n      email: userData.email,\n      password: userData.password,\n    }\n    console.log(body)\n    try {\n      await axios.post(path + \"login/\", body).then(response => {\n        console.log(response, \"LOGIN RESPONSE\")\n        localStorage.setItem('jwtToken', response.data.token)\n        setUser({ firstname: response.data.userObj.firstname, surname: response.data.userObj.surname, id: response.data.userObj.surname, role_id: response.data.userObj.role_id, email: response.data.userObj.username })\n        if (response.data.userObj.role_id == 2) {\n          setAdmin(true)\n        }\n        setLoggedIn(true)\n        setToken(response.data.token)\n        var snackMsg = strings.loginsuccess\n        enqueueSnackbar(snackMsg, { variant: 'success' })\n      })\n    } catch (e) {\n      var snackMsg = strings.loginfail\n      enqueueSnackbar(snackMsg, { variant: 'error' })\n      console.log(\"login error\", e)\n    }\n  }\n\n  const logOut = () => {\n    setUser({\n      firstname: \"\",\n      surname: \"\",\n      id: null,\n      role_id: null,\n      email: \"\"\n    })\n    setLoggedIn(false)\n    setAdmin(false)\n    setToken(null)\n    localStorage.removeItem('jwtToken')\n  }\n\n  useEffect(() => {\n    const socket = socketIOClient(sIOEndpoint)\n    socket.on('connected', function (data) {\n      console.log(\"CONNECTED\")\n      socket.emit('ready for data', {})\n      enqueueSnackbar('Socket connected!')\n    });\n    socket.on('update', function (data) {\n      var snackMsg = \"\"\n      console.log(\"UPDATED\", data.message.payload)\n      switch (data.message.channel) {\n        case \"addquiz\":\n          snackMsg = \"New Quiz: \" + data.message.payload\n          break;\n        case \"adduser\":\n          snackMsg = data.message.payload + \" just registered for the first time!\"\n          break;\n        case \"alterquiz\":\n          let thisPayload = JSON.parse(data.message.payload)\n          console.log(\"hi from here\")\n          console.log(thisPayload)\n          snackMsg = \"Quiz: \" + thisPayload.old + \" was renamed to \" + thisPayload.new\n          break;\n        case \"addedrecord\":\n          snackMsg = \"this is a test!\"\n          break;\n        default:\n          break;\n      }\n      enqueueSnackbar(snackMsg)\n    })\n    return\n  }, [])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let result = await axios.get(path + \"quiz\")\n        if (result.data.length > 0) {\n          for (var i = 0; i < result.data.length; i++) {\n            result.data[i].quizQuestions = []\n            let questions = await axios.get(path + \"quiz/\" + result.data[i].id + \"/question/\")\n            result.data[i].quizQuestions = questions.data;\n            if (result.data[i].quizQuestions.length > 0) {\n              for (var j = 0; j < result.data[i].quizQuestions.length; j++) {\n                result.data[i].quizQuestions[j].answerOptions = [];\n                let answers = await axios.get(path + \"quiz/\" + result.data[i].id + \"/question/\" + result.data[i].quizQuestions[j].id + \"/answer\")\n                result.data[i].quizQuestions[j].answerOptions = answers.data;\n              \n              }\n            }\n          }\n          console.log(result.data)\n          dispatch({ type: \"INIT_DATA\", data: result.data })\n          setDataAlustettu(true)\n        } else {\n          // eslint-disable-next-line no-throw-literal\n          throw (\"No data :(\")\n        }\n      }\n      catch (exception) {\n        console.log(exception)\n      }\n    }\n    fetchData();\n  }, [])\n\n  const getWindowLanguage = () => {\n    var language\n    console.log(window.navigator.languages)\n    if (window.navigator.languages) {\n      language = window.navigator.languages[0]\n    } else {\n      language = window.navigator.userLanguage || window.navigator.language\n    }\n    return language;\n  }\n\n  const switchLanguage = (newLan) => {\n    setLan(newLan)\n    strings.setLanguage(newLan)\n  }\n\n\n  // TODO: updateUseranswer\n\n  //// POST ---------------------------------------------------------------------------------------------------\n  const addQuestion = async (event, quizIndex) => {\n    let quizId = state[quizIndex].id;\n    let body = {}\n    try {\n      let result = await axios.post(path + \"quiz/\" + quizId, body).then(response => {\n        console.log(\"new id\" + response.data.id);\n        dispatch({ type: \"ADD_QUESTION\", data: { quizIndex: quiz, id: response.data.id } })\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const addAnsweroption = async (event, quizIndex, questionIndex) => {\n    let quizId = state[quizIndex].id;\n    let questionId = state[quizIndex].quizQuestions[questionIndex].id;\n    let body = { correct: false }\n    try {\n      let result = await axios.post(path + \"quiz/\" + quizId + \"/question/\" + questionId, body).then(response => {\n        console.log(\"new id\" + response.data.id);\n        dispatch({ type: \"ADD_ANSWER\", data: { quizIndex: quiz, questionIndex: questionIndex, id: response.data.id } })\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const addQuiz = async (quizname) => {\n    let body = { quizname: quizname }\n    try {\n      let result = await axios.post(path + \"quiz/\", body).then(response => {\n        console.log(\"new id\" + response.data.id);\n        dispatch({ type: \"ADD_QUIZ\", data: { quizId: response.data.id, quizname: quizname } })\n      })\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  //// PUT -------------------------------------------------------------------------------------------------------\n  const updateQuiz = async (event, quizIndex,) => {\n    console.log(event.target.value)\n    let quizId = state[quizIndex].id;\n    let body = {\n      quizname: event.target.value\n    }\n    try {\n      let result = await axios.put(path + \"quiz/\" + quizId, body)\n      dispatch({ type: \"QUIZ_CHANGED\", data: { newText: body.quizname, quizIndex: quizIndex } })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const updateQuestion = async (event, quizIndex, questionIndex) => {\n    let quizId = state[quizIndex].id;\n    let questionId = state[quizIndex].quizQuestions[questionIndex].id;\n    let body = {\n      question: event.target.value\n    }\n    try {\n      let result = await axios.put(path + \"quiz/\" + quizId + \"/question/\" + questionId, body)\n      dispatch({ type: \"QUESTION_CHANGED\", data: { newText: body.question, quizIndex: quizIndex, questionIndex: questionIndex } })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n  const updateAnsweroption = async (event, quizIndex, questionIndex, answerIndex, editMode) => {\n    let quizId = state[quizIndex].id;\n    let questionId = state[quizIndex].quizQuestions[questionIndex].id;\n    let answerId = state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].id;\n    let body = {}\n    switch (editMode) {\n      case \"TEXT\":\n        body.answer = event.target.value;\n        body.correct = state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].correct;\n        break;\n      case \"CHECKBOX\":\n        body.answer = state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].answer;\n        body.correct = !state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].correct;\n        break;\n      default:\n        body.answer = state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].answer;\n        body.correct = state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].correct;\n        break;\n    }\n    try {\n      let result = await axios.put(path + \"quiz/\" + quizId + \"/question/\" + questionId + \"/answer/\" + answerId, body)\n      switch (editMode) {\n        case \"TEXT\":\n          dispatch({ type: \"ANSWER_CHANGED\", data: { newText: body.answer, quizIndex: quizIndex, questionIndex: questionIndex, answerIndex: answerIndex } })\n          break;\n        case \"CHECKBOX\":\n          dispatch({ type: \"CORRECT_TOGGLE\", data: { newText: body.answer, quizIndex: quizIndex, questionIndex: questionIndex, answerIndex: answerIndex } })\n          break;\n        default:\n          break;\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  //// DELETE ------------------------------------------------------------------------------------------------\n\n  const deleteQuestion = async (event, quizIndex, questionIndex) => {\n    let quizId = state[quizIndex].id;\n    let questionId = state[quizIndex].quizQuestions[questionIndex].id;\n    try {\n      let result = await axios.delete(path + \"quiz/\" + quizId + \"/question/\" + questionId)\n      dispatch({ type: \"DELETE_QUESTION\", data: { newText: '', quizIndex: quiz, questionIndex: questionIndex } })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const deleteQuiz = async (event, quizIndex) => {\n    let quizId = state[quizIndex].id;\n    try {\n      setQuiz(0)\n      let result = await axios.delete(path + \"quiz/\" + quizId)\n      dispatch({ type: \"DELETE_QUIZ\", data: { newText: '', quizIndex: quizIndex } })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const deleteAnsweroption = async (event, quizIndex, questionIndex, answerIndex) => {\n    let quizId = state[quizIndex].id;\n    let questionId = state[quizIndex].quizQuestions[questionIndex].id;\n    let answerId = state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].id;\n    try {\n      let result = await axios.delete(path + \"quiz/\" + quizId + \"/question/\" + questionId + \"/answer/\" + answerId)\n      dispatch({ type: \"DELETE_ANSWER\", data: { newText: '', quizIndex: quiz, questionIndex: questionIndex, answerIndex: answerIndex } })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  //// MISC ---------------------------------------------------------------------------------------------------\n  const selectQuiz = (quizNo) => {\n    setQuiz(quizNo);\n  }\n\n  const toggleAnswers = () => {\n    setAnswersVisible(!answersVisible);\n  }\n\n  const [status, setStatus] = React.useState({\n    teacherMode: false,\n  });\n\n  const handleChange = (event) => {\n    setStatus({ ...status, [event.target.name]: event.target.checked });\n  };\n\n  // const [topicList, setTopicList] = useState([])\n  // const buildTopicList = (topic) => {\n  //   if (!topicList.includes(topic)) {\n  //     var newTopicList = [...topicList].concat(topic)\n  //     setTopicList(newTopicList)\n  //   }\n  // }\n\n\n\n  //// JSX ------------------------------------------------------------------------------------------------------\n  return (\n    <div>\n      <Container className=\"quizContainer\">\n        <ButtonAppBar switchLanguage={switchLanguage} user={user} isLoggedIn={loggedIn} logOut={logOut} language={lan} />\n\n        <Switch>\n          <Route exact path=\"/register\" component={() => <Register submitRegistration={submitRegistration} isRegistered={loggedIn} />} />\n          {/* <Route exact path=\"/login\" component={() => <Login submitLogin={submitLogin} isLoggedIn={loggedIn} />} /> */}\n          <Route exact path=\"/\">\n            {loggedIn ?\n              <div>\n                <div className=\"greetingContainer\">\n                  <p className=\"greeting\">{strings.greet}, {user.firstname} {user.surname}<br />\n                    {strings.userinrole}: {user.role_id}</p></div>\n                <div className={classes.root}>\n                  {/* <FormControlLabel\n                control={\n                  <MaterialSwitch\n                    checked={status.teacherMode}\n                    onChange={handleChange}\n                    name=\"teacherMode\"\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                  />\n                }\n                label={strings.teachermode} /><br /> */}\n\n                  {dataAlustettu ? state.map((val, index) => {\n                    return <Button variant=\"outlined\" onClick={() => selectQuiz(index)}>{val.quizname}</Button>\n                  }) : null}\n                  {admin && dataAlustettu ? <div><NewQuizDialog addNewQuiz={addQuiz} /></div> : \"\"}\n                </div>\n                {dataAlustettu ?\n                  <div className=\"questionCard\">\n                    <Paper elevation={1} padding=\"10%\">\n                      {admin\n                        ? <EditQuizTitleComponent quizname={state[quiz].quizname} quizid={state[quiz].id} quizindex={quiz} updateQuiz={updateQuiz} deleteQuiz={deleteQuiz} />\n                        : <QuizTitleComponent quizname={state[quiz].quizname} />}\n                    </Paper>\n                  </div>\n                  : \"\"}\n                {dataAlustettu ? state[quiz].quizQuestions.map((value, parentIndex) => {\n                  return (\n                    <div className=\"questionCard\">\n                      <Paper elevation={1}>\n                        <List className={classes.root}>\n                          <h3>{value.topicArea}</h3>\n                          {admin ?\n                            <EditQuestion value={value} quiz={quiz} parentIndex={parentIndex} updateQuestion={updateQuestion} deleteQuestion={deleteQuestion} />\n                            : <div className=\"question\">{value.question}</div>\n                          }\n                          {value.answerOptions.map((value, index) => {\n                            return (\n                              <div>\n                                {admin ?\n                                  <EditAnswerOption value={value} quiz={quiz} parentIndex={parentIndex} index={index} status={status}\n                                    updateAnsweroption={updateAnsweroption}\n                                    deleteAnsweroption={deleteAnsweroption}\n                                    dispatch={dispatch}\n                                  />\n                                  : <AnswerOption value={value} quiz={quiz} parentIndex={parentIndex} index={index} answersVisible={answersVisible} />}\n                              </div>\n                            )\n                          })}\n                          {admin ? <div className=\"addButton\"><Button onClick={(event) => addAnsweroption(event, quiz, parentIndex)}><AddCircleIcon /></Button></div> : \"\"}\n                        </List>\n                      </Paper>\n                    </div>\n                  );\n                })\n                  : null}\n                <div className=\"bottomButtons\">\n                  {admin ? <Button variant=\"contained\" onClick={(event) => addQuestion(event, quiz)}><AddIcon />   {strings.addnewquestion}</Button> :\n                    <Button variant=\"contained\" onClick={() => toggleAnswers()}>{answersVisible ? strings.hidecorrect : strings.showcorrect}</Button>\n                  }</div>\n              </div> :\n              <Login submitLogin={submitLogin} isLoggedIn={loggedIn} />}\n            {/* // <div className=\"landing\"> {strings.landingtext} </div> */}\n            {/* } */}\n\n\n\n\n          </Route>\n        </Switch>\n      </Container >\n    </div >\n  );\n}\nexport default withSnackbar(App);\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { SnackbarProvider } from 'notistack';\n\nReactDOM.render(\n    <BrowserRouter>\n      <SnackbarProvider maxSnack={3} variant=\"info\">\n        <App />\n      </SnackbarProvider>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}