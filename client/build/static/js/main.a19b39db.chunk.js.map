{"version":3,"sources":["localization/strings.js","components/ButtonAppBar.js","components/Register.js","components/QuestionDropZone.js","components/EditQuestion.js","components/EditAnswerOption.js","components/AnswerOption.js","components/Login.js","components/NewQuizDialog.js","App.js","reportWebVitals.js","index.js"],"names":["strings","LocalizedStrings","en","fi","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","lanselect","margin","width","paddingInlineStart","ButtonAppBar","props","setLanguage","language","classes","className","AppBar","position","Toolbar","Typography","variant","to","style","textDecoration","color","Button","disableElevation","login","Select","defaultValue","onChange","e","switchLanguage","target","value","MenuItem","selected","Register","useState","firstname","surname","email","password","role_id","userData","setUserData","isAdmin","setIsAdmin","errorMsg","setErrorMsg","changeData","field","useEffect","submitRegistration","a","console","log","body","preventDefault","axios","post","then","response","regerror","List","ListItem","register","TextField","event","size","label","type","Checkbox","checked","adminuser","onClick","QuestionDropZone","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","outline","transition","activeStyle","acceptStyle","rejectStyle","onDrop","useCallback","files","req","superagent","forEach","file","attach","end","err","res","useDropzone","acceptedFiles","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useMemo","map","path","EditQuestion","showDropZone","setShowDropZone","role","undefined","dense","fullWidth","updateQuestion","quiz","parentIndex","question","deleteQuestion","id","EditAnswerOption","GreenCheckbox","withStyles","green","ListItemIcon","updateAnsweroption","index","edge","tabIndex","dispatch","data","newText","quizIndex","questionIndex","answerIndex","answer","deleteAnsweroption","AnswerOption","answersVisible","correct","disabled","ListItemText","primary","Login","reglink","NewQuizDialog","React","open","setOpen","quizname","setQuizname","handleClose","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","autoFocus","DialogActions","addNewQuiz","maxWidth","palette","background","paper","reducer","state","action","deepCopy","JSON","parse","stringify","count","quizQuestions","answerOptions","quizName","newAnswer","push","newQuestion","newQuiz","quizId","splice","Error","withSnackbar","dataAlustettu","setDataAlustettu","setQuiz","setAnswersVisible","useReducer","lan","setLan","useSnackbar","enqueueSnackbar","closeSnackbar","socket","socketIOClient","on","emit","snackMsg","message","payload","channel","thisPayload","old","new","get","result","length","i","questions","j","answers","fetchData","addQuestion","addAnsweroption","questionId","addQuiz","put","editMode","answerId","delete","teacherMode","status","setStatus","Container","newLan","exact","component","withRouter","FormControlLabel","control","name","inputProps","teachermode","val","Paper","elevation","topicArea","addnewanswer","hidecorrect","showcorrect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.a19b39db.chunk.js","sourcesContent":["import LocalizedStrings from \"react-localization\";\r\n\r\nlet strings = new LocalizedStrings(\r\n    {\r\n        en: {\r\n            \"login\": \"Login\",\r\n            \"register\": \"Register\",\r\n            \"email\": \"Email\",\r\n            \"password\": \"Password\",\r\n            \"reglink\": \"Register here\",\r\n            \"firstname\": \"First name\",\r\n            \"surname\": \"Surname\",\r\n            \"adminuser\": \"Admin user\",\r\n            \"teachermode\": \"Teacher mode\",\r\n            \"showcorrect\": \"Show correct answers\",\r\n            \"hidecorrect\": \"Hide correct answers\",\r\n            \"question\": \"Question\",\r\n            \"answer\": \"Answer\",\r\n            \"addnewquestion\": \"Add new question\",\r\n            \"addnewanswer\": \"Add new answer\",\r\n            \"addnewquiz\": \"Add new quiz\",\r\n            \"delete\": \"Delete\",\r\n            \"regerror\": \"Registration failed\",\r\n            \"files\": \"Files\"\r\n        },\r\n        fi: {\r\n            \"login\": \"Kirjaudu\",\r\n            \"register\": \"Rekisteröidy\",\r\n            \"email\": \"Sähköposti\",\r\n            \"password\": \"Salasana\",\r\n            \"reglink\": \"Rekisteröidy tästä\",\r\n            \"firstname\": \"Etunimi\",\r\n            \"surname\": \"Sukunimi\",\r\n            \"adminuser\": \"Admin-käyttäjä\",\r\n            \"teachermode\": \"Opettaja\",\r\n            \"showcorrect\": \"Näytä oikeat vastaukset\",\r\n            \"hidecorrect\": \"Piilota oikeat vastaukset\",\r\n            \"question\": \"Kysymys\",\r\n            \"answer\": \"Vastaus\",\r\n            \"addnewquestion\": \"Lisää uusi kysymys\",\r\n            \"addnewanswer\": \"Lisää uusi vastaus\",\r\n            \"addnewquiz\": \"Lisää uusi tentti\",\r\n            \"delete\": \"Poista\",\r\n            \"regerror\": \"Rekisteröityminen epäonnistui\",\r\n            \"files\": \"Tiedostot\"\r\n        }\r\n    }\r\n)\r\n\r\nexport default strings","\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button,  MenuItem, Select } from '@material-ui/core';\r\nimport { Link} from \"react-router-dom\";\r\nimport strings from '../localization/strings';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  lanselect: {\r\n    margin: theme.spacing(1),\r\n    width: \"70px\",\r\n    paddingInlineStart: '15px'\r\n  }\r\n}));\r\n\r\n\r\nfunction ButtonAppBar(props) {\r\n  strings.setLanguage(props.language)\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n              Quiz App\r\n            </Link>\r\n          </Typography>\r\n          <Link to=\"/login\" style={{ textDecoration: 'none' }}>\r\n            <Button variant=\"contained\" color=\"primary\" disableElevation>{strings.login}</Button>\r\n          </Link>\r\n      \r\n          <Select className={classes.lanselect} defaultValue=\"en\" style={{ color: 'white' }} onChange={(e) => props.switchLanguage(e.target.value)}  >\r\n            <MenuItem value=\"en\" selected> EN </MenuItem>\r\n            <MenuItem value=\"fi\"> FI </MenuItem>\r\n          </Select>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonAppBar\r\n","import React, { useEffect, useState } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { Button, Checkbox, TextField } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport strings from '../localization/strings';\r\n\r\nconst Register = () => {\r\n    const [userData, setUserData] = useState({\r\n        firstname: '',\r\n        surname: '',\r\n        email: '',\r\n        password: '',\r\n        role_id: 2\r\n    })\r\n    const [isAdmin, setIsAdmin] = useState(true)\r\n\r\n    const [errorMsg, setErrorMsg] = useState(\"\")\r\n\r\n    const changeData = (e, field) => {\r\n        setUserData({...userData, [field]: e.target.value})\r\n    }  \r\n    \r\n    useEffect(() => {\r\n        if (isAdmin) {\r\n            setUserData({...userData, \"role_id\": 2}) // roleid 2: teacher\r\n        } else {\r\n            setUserData({...userData, \"role_id\": 3}) // roleid 3: student\r\n        }\r\n    },[isAdmin])\r\n\r\n\r\n    const submitRegistration = async (e) => {\r\n        console.log(userData)\r\n        let body = {\r\n            email: userData.email,\r\n            password: userData.password,\r\n            firstname: userData.firstname,\r\n            surname: userData.surname,\r\n            role_id: userData.role_id\r\n        }\r\n        console.log(body)\r\n        e.preventDefault()\r\n        try {\r\n             await axios.post(\"http://localhost:5000/register/\", body).then(response => {\r\n                setErrorMsg(\"\");})\r\n        \r\n        } catch (e) {\r\n            setErrorMsg(strings.regerror)\r\n            console.log(\"registration error\", e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <List>\r\n                <ListItem>\r\n                    <h2>{strings.register}</h2>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <TextField onChange={(event) => changeData(event, \"firstname\")} size=\"small\" label={strings.firstname} variant=\"outlined\"></TextField>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <TextField onChange={(event) => changeData(event, \"surname\")} size=\"small\" label={strings.surname} variant=\"outlined\"></TextField>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <TextField onChange={(event) => changeData(event, \"email\")} size=\"small\" label={strings.email} variant=\"outlined\"></TextField>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <TextField onChange={(event) => changeData(event, \"password\")} size=\"small\" label={strings.password} type=\"password\" variant=\"outlined\"></TextField>\r\n                </ListItem>\r\n                <ListItem><Checkbox checked={isAdmin} onChange={(e) => setIsAdmin(!isAdmin)}/> {strings.adminuser}?</ListItem>\r\n                <ListItem>\r\n                    <Button variant=\"outlined\" onClick={(e) => submitRegistration(e)}>{strings.register}</Button>\r\n                </ListItem>\r\n                <ListItem className=\"errorMessage\">{errorMsg}</ListItem>\r\n            </List>\r\n        </div >\r\n    )\r\n};\r\n\r\nexport default Register;","import axios from 'axios';\r\nimport React, { useCallback, useMemo } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport superagent from 'superagent'\r\nimport strings from '../localization/strings';\r\n\r\nfunction QuestionDropZone(props) {\r\n    // https://github.com/react-dropzone/react-dropzone/tree/master/examples/styling\r\n\r\n    const baseStyle = {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: '20px',\r\n        borderWidth: 2,\r\n        borderRadius: 2,\r\n        borderColor: '#eeeeee',\r\n        borderStyle: 'dashed',\r\n        backgroundColor: '#fafafa',\r\n        color: '#bdbdbd',\r\n        outline: 'none',\r\n        transition: 'border .24s ease-in-out'\r\n    };\r\n\r\n    const activeStyle = {\r\n        borderColor: '#2196f3'\r\n    };\r\n\r\n    const acceptStyle = {\r\n        borderColor: '#00e676'\r\n    };\r\n\r\n    const rejectStyle = {\r\n        borderColor: '#ff1744'\r\n    };\r\n\r\n\r\n    const onDrop = useCallback(async files => {\r\n        console.log(files);\r\n\r\n        const req = superagent.post('http://localhost:5000/upload');\r\n\r\n        files.forEach(file => {\r\n            req.attach('file', file);\r\n            console.log(file)\r\n        });\r\n        req.end((err, res) => {\r\n            console.log(\"THIS IS THE RES\", res)\r\n        });\r\n\r\n    }, []);\r\n\r\n    // const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n    const {\r\n        acceptedFiles,\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject\r\n    } = useDropzone({ onDrop });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isDragActive ? activeStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n    }));\r\n    const files = acceptedFiles.map(file => (\r\n        <li key={file.path}>\r\n          {file.path} - {file.size} bytes\r\n        </li>\r\n      ));\r\n      \r\n    //https://github.com/react-dropzone/react-dropzone/tree/master/examples/basic\r\n    return (\r\n        <section>\r\n            <div {...getRootProps({ style })}>\r\n                <input {...getInputProps()} />\r\n                {\r\n                    isDragActive ?\r\n                        <p>Drop the files here ...</p> :\r\n                        <p>Drag 'n' drop some files here, or click to select files</p>\r\n                }\r\n            </div>\r\n            <aside>\r\n                <ul>{strings.files}</ul>\r\n                <ul>{files}</ul>\r\n            </aside>\r\n        </section>\r\n    )\r\n}\r\nexport default QuestionDropZone;","import { Button, ListItem, TextField } from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport { useState } from \"react\";\r\nimport strings from '../localization/strings';\r\nimport QuestionDropZone from \"./QuestionDropZone\";\r\n\r\nfunction EditQuestion(props) {\r\n    const [showDropZone, setShowDropZone] = useState(false)\r\n    const openDropZone = () => {\r\n        setShowDropZone(!showDropZone)\r\n    }\r\n\r\n    return (<div>\r\n        <ListItem key={props.value.id} role={undefined} dense >\r\n            <TextField fullWidth onChange={(event) => props.updateQuestion(event, props.quiz, props.parentIndex)} size=\"small\" label={(strings.question) + \" \" + (props.parentIndex + 1)} variant=\"outlined\" value={props.value.question} />\r\n            <Button className=\"deleteButton\" onClick={(event) => props.deleteQuestion(event, props.quiz, props.parentIndex)}><DeleteIcon /></Button>\r\n            <Button className=\"deleteButton\" onClick={(event) => openDropZone()}><ImageIcon /></Button>\r\n        </ListItem>\r\n        <ListItem>\r\n            {showDropZone ?\r\n                <QuestionDropZone />\r\n                : \"\"\r\n            }\r\n\r\n        </ListItem></div>\r\n    )\r\n}\r\nexport default EditQuestion;","import { Button, Checkbox, ListItem, ListItemIcon, TextField } from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport strings from '../localization/strings';\r\n\r\nfunction EditAnswerOption(props) {\r\n    const GreenCheckbox = withStyles({\r\n        root: {\r\n          color: green[400],\r\n          '&$checked': {\r\n            color: green[600],\r\n          },\r\n        },\r\n        checked: {},\r\n      })((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n    return (\r\n        <ListItem key={\"editansweropt\" + props.value.id} role={undefined} dense >\r\n            <ListItemIcon>\r\n                <GreenCheckbox\r\n                    onChange={(event) => props.updateAnsweroption(event, props.quiz, props.parentIndex, props.index, \"CHECKBOX\")}\r\n                    checked={false}\r\n                    edge=\"start\"\r\n                    tabIndex={-1}\r\n                />\r\n            </ListItemIcon>\r\n            <ListItemIcon>\r\n                <Checkbox\r\n                    // TODO:\r\n                    // onChange={(event) => console.log(event, \"click\")}\r\n                     onChange={(event) => props.dispatch({ type: \"SELECT_TOGGLE\", data: { newText: event.target.value, quizIndex: props.quiz, questionIndex: props.parentIndex, answerIndex: props.index } })}\r\n                    checked={props.value.selected}\r\n                    edge=\"start\"\r\n                    tabIndex={-1}\r\n                />\r\n            </ListItemIcon>\r\n                <div>\r\n                    <TextField onChange={(event) => props.updateAnsweroption(event, props.quiz, props.parentIndex, props.index, \"TEXT\")} size=\"small\" label={(strings.answer) + \" \" + (props.index + 1)} variant=\"outlined\" value={props.value.answer} />\r\n                    <Button className=\"deleteButton\" onClick={(event) => props.deleteAnsweroption(event, props.quiz, props.parentIndex, props.index)}><DeleteIcon /></Button>\r\n                </div>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default EditAnswerOption;","import { Checkbox, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nfunction AnswerOption(props) {\r\n    const GreenCheckbox = withStyles({\r\n        root: {\r\n            color: green[400],\r\n            '&$checked': {\r\n                color: green[600],\r\n            },\r\n        },\r\n        checked: {},\r\n    })((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n    return (\r\n        <ListItem key={props.value.id} role={undefined} dense >\r\n            <ListItemIcon>\r\n                {props.answersVisible ?\r\n                    <GreenCheckbox\r\n                        checked={props.value.correct}\r\n                        edge=\"start\"\r\n                        tabIndex={-1}\r\n                        disabled={true}\r\n                    /> : null}\r\n            </ListItemIcon>\r\n            <ListItemIcon>\r\n                <Checkbox\r\n                    // TODO:\r\n                    // onChange={(event) => dispatch({ type: \"SELECT_TOGGLE\", data: { newText: event.target.value, quizIndex: quiz, questionIndex: parentIndex, answerIndex: index } })}\r\n                    checked={props.value.selected}\r\n                    edge=\"start\"\r\n                    tabIndex={-1}\r\n                />\r\n            </ListItemIcon>\r\n            <div><ListItemText id={props.index} primary={props.value.answer} /></div>\r\n        </ListItem>\r\n    )\r\n}\r\nexport default AnswerOption;","import React, { useState } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport strings from '../localization/strings';\r\n\r\nconst Login = () => {\r\n    const [userData, setUserData] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const changeData = (e, field) => {\r\n        setUserData({ ...userData, [field]: e.target.value })\r\n    }\r\n\r\n    const submitLogin = async (e) => {\r\n        console.log(userData)\r\n        let body = {\r\n            email: userData.email,\r\n            password: userData.password,\r\n        }\r\n        console.log(body)\r\n        e.preventDefault()\r\n        // try {\r\n        //      await axios.post(\"http://localhost:5000/register/\", body).then(response => {\r\n        //         setErrorMsg(\"\");})\r\n        \r\n        // } catch (e) {\r\n        //     setErrorMsg(\"Registration failed\")\r\n        //     console.log(\"registration error\", e)\r\n        // }\r\n    }\r\n// localstorage jwtToken tallenna userid rooli\r\n    return (\r\n        <div className=\"container\">\r\n            <List>\r\n                <ListItem>\r\n                    <h2>{strings.login}</h2>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <TextField onChange={(event) => changeData(event, \"email\")} size=\"small\" label={strings.email} variant=\"outlined\"></TextField>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <TextField onChange={(event) => changeData(event, \"password\")} size=\"small\" label={strings.password} type=\"password\" variant=\"outlined\"></TextField>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Button variant=\"outlined\">{strings.login}</Button>\r\n                </ListItem>\r\n                <ListItem>\r\n                        <Link to=\"/register\"><i>{strings.reglink}</i></Link>\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    )\r\n};\r\nexport default Login","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nfunction NewQuizDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [quizname, setQuizname] = useState(\"\")\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n      handleClose();\r\n      props.addNewQuiz(quizname);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n     <Button onClick={handleClickOpen}><AddCircleIcon /> Add new quiz </Button> \r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Create New Quiz</DialogTitle>\r\n        <DialogContent>\r\n     \r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Quiz name\"\r\n            fullWidth\r\n            onChange={(e)=>setQuizname(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Create new quiz\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\nexport default NewQuizDialog;\r\n","import './App.css';\nimport React, { useEffect, useState, useReducer } from 'react';\nimport ButtonAppBar from './components/ButtonAppBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Container, Paper, Button, FormControlLabel, Switch as MaterialSwitch } from '@material-ui/core';\nimport axios from 'axios';\nimport Register from './components/Register'\nimport EditQuestion from './components/EditQuestion';\nimport EditAnswerOption from './components/EditAnswerOption';\nimport AnswerOption from './components/AnswerOption';\nimport Login from './components/Login';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter\n} from \"react-router-dom\";\nimport strings from './localization/strings';\nimport { useSnackbar, withSnackbar } from 'notistack';\nimport socketIOClient from 'socket.io-client'\nimport NewQuizDialog from './components/NewQuizDialog';\nconst sIOEndpoint = 'wss://vappus-quiz-app.herokuapp.com:9000'\n// const sIOEndpoint = 'ws://localhost:9000'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\n\nvar path = null;\nswitch (process.env.NODE_ENV) {\n\n  case 'production':\n    path = 'https://vappus-quiz-app.herokuapp.com/'\n    break;\n  case 'development':\n    path = 'http://localhost:5000/'\n    break;\n  case 'test':\n    path = 'http://localhost:5000/'\n    break;\n  default:\n    throw \"Environment not set\"\n}\n\n// ----------------REDUCER----------------------------------------------------\nfunction reducer(state, action) {\n  let deepCopy = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case 'increment':\n      return { count: state.count + 1 };\n    case \"INIT_DATA\":\n      console.log(action)\n      return action.data; /// <--- this should be state\n    case \"ANSWER_CHANGED\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].answer = action.data.newText;\n      return deepCopy;\n    case \"QUESTION_CHANGED\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].question = action.data.newText;\n      return deepCopy;\n    case \"QUIZ_CHANGED\":\n      //TODO: implement controls\n      deepCopy[action.data.quizIndex].quizName = action.data.newText;\n      return deepCopy;\n    case \"ADD_ANSWER\":\n      let newAnswer = { answer: \"\", correct: false, selected: false, id: action.data.id }\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions.push(newAnswer)\n      return deepCopy;\n    case \"ADD_QUESTION\":\n      let newQuestion = { question: \"\", answerOptions: [], id: action.data.id }\n      deepCopy[action.data.quizIndex].quizQuestions.push(newQuestion)\n      return deepCopy;\n    case \"ADD_QUIZ\":\n      let newQuiz = { id: action.data.quizId, quizname: action.data.quizname, quizQuestions: [] }\n      deepCopy.push(newQuiz)\n      return deepCopy;\n    case \"DELETE_ANSWER\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions.splice(action.data.answerIndex, 1)\n      return deepCopy;\n    case \"DELETE_QUESTION\":\n      deepCopy[action.data.quizIndex].quizQuestions.splice(action.data.questionIndex, 1)\n      return deepCopy;\n    case \"DELETE_QUIZ\":\n      // TODO: implement controls\n      deepCopy[action.data.quizIndex].splice(action.data.quizIndex, 1)\n      return deepCopy;\n    case \"SELECT_TOGGLE\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].selected =\n        !deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].selected;\n      return deepCopy;\n    case \"CORRECT_TOGGLE\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].correct =\n        !deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].correct;\n      return deepCopy;\n    default:\n      throw new Error();\n  }\n}\n\n// ----------------APP-------------------------------------------------------\n\nfunction App() {\n\n  const classes = useStyles();\n  const [dataAlustettu, setDataAlustettu] = useState(false);\n  const [quiz, setQuiz] = useState(0);\n  const [answersVisible, setAnswersVisible] = useState(false);\n  const [state, dispatch] = useReducer(reducer, []);\n  const [loggedIn, setLoggedIn] = useState()\n  const [lan, setLan] = useState('en')\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  // ENVIRONMENTS \n\n  useEffect(() => {\n    const socket = socketIOClient(sIOEndpoint)\n    socket.on('connected', function (data) {\n      console.log(\"CONNECTED\")\n      socket.emit('ready for data', {})\n      enqueueSnackbar('Socket connected!')\n    });\n    socket.on('update', function (data) {\n      var snackMsg = \"\"\n      console.log(\"UPDATED\", data.message.payload)\n      switch (data.message.channel) {\n        case \"addquiz\":\n          snackMsg = \"New Quiz: \" + data.message.payload\n          break;\n        case \"adduser\":\n          snackMsg = data.message.payload + \" just registered for the first time!\"\n          break;\n        case \"alterquiz\":\n          let thisPayload = JSON.parse(data.message.payload)\n          console.log(\"hi from here\")\n          console.log(thisPayload)\n          snackMsg = \"Quiz: \" + thisPayload.old + \" was renamed to \" + thisPayload.new\n          break;\n        case \"addedrecord\":\n          snackMsg = \"this is a test!\"\n          break;\n        default:\n          break;\n      }\n      enqueueSnackbar(snackMsg)\n    })\n  }, [])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let result = await axios.get(path + \"quiz\")\n        if (result.data.length > 0) {\n          for (var i = 0; i < result.data.length; i++) {\n            result.data[i].quizQuestions = []\n            let questions = await axios.get(path + \"quiz/\" + result.data[i].id + \"/question/\")\n            result.data[i].quizQuestions = questions.data;\n            if (result.data[i].quizQuestions.length > 0) {\n              for (var j = 0; j < result.data[i].quizQuestions.length; j++) {\n                result.data[i].quizQuestions[j].answerOptions = [];\n                let answers = await axios.get(path + \"quiz/\" + result.data[i].id + \"/question/\" + result.data[i].quizQuestions[j].id + \"/answer\")\n                result.data[i].quizQuestions[j].answerOptions = answers.data;\n              }\n            }\n          }\n          console.log(result.data)\n          dispatch({ type: \"INIT_DATA\", data: result.data })\n          setDataAlustettu(true)\n        } else {\n          throw (\"No data :(\")\n        }\n      }\n      catch (exception) {\n        console.log(exception)\n      }\n    }\n    fetchData();\n  }, [])\n\n  const getWindowLanguage = () => {\n    var language\n    console.log(window.navigator.languages)\n    if (window.navigator.languages) {\n      language = window.navigator.languages[0]\n    } else {\n      language = window.navigator.userLanguage || window.navigator.language\n    }\n    return language;\n  }\n\n  const switchLanguage = (newLan) => {\n    setLan(newLan)\n    strings.setLanguage(newLan)\n  }\n\n\n  // TODO: updateUseranswer\n\n  //// POST ---------------------------------------------------------------------------------------------------\n  const addQuestion = async (event, quizIndex) => {\n    let quizId = state[quizIndex].id;\n    let body = {}\n    try {\n      let result = await axios.post(path + \"quiz/\" + quizId, body).then(response => {\n        console.log(\"new id\" + response.data.id);\n        dispatch({ type: \"ADD_QUESTION\", data: { quizIndex: quiz, id: response.data.id } })\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const addAnsweroption = async (event, quizIndex, questionIndex) => {\n    let quizId = state[quizIndex].id;\n    let questionId = state[quizIndex].quizQuestions[questionIndex].id;\n    let body = { correct: false }\n    try {\n      let result = await axios.post(path + \"quiz/\" + quizId + \"/question/\" + questionId, body).then(response => {\n        console.log(\"new id\" + response.data.id);\n        dispatch({ type: \"ADD_ANSWER\", data: { quizIndex: quiz, questionIndex: questionIndex, id: response.data.id } })\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const addQuiz = async (quizname) => {\n    let body = { quizname: quizname }\n    try {\n      let result = await axios.post(path + \"quiz/\", body).then(response => {\n        console.log(\"new id\" + response.data.id);\n        dispatch({ type: \"ADD_QUIZ\", data: { quizId: response.data.id, quizname: quizname } })\n      })\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  //// PUT -------------------------------------------------------------------------------------------------------\n  const updateQuestion = async (event, quizIndex, questionIndex) => {\n    let quizId = state[quizIndex].id;\n    let questionId = state[quizIndex].quizQuestions[questionIndex].id;\n    let body = {\n      question: event.target.value\n    }\n    try {\n      let result = await axios.put(path + \"quiz/\" + quizId + \"/question/\" + questionId, body)\n      dispatch({ type: \"QUESTION_CHANGED\", data: { newText: body.question, quizIndex: quizIndex, questionIndex: questionIndex } })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n  const updateAnsweroption = async (event, quizIndex, questionIndex, answerIndex, editMode) => {\n    let quizId = state[quizIndex].id;\n    let questionId = state[quizIndex].quizQuestions[questionIndex].id;\n    let answerId = state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].id;\n    let body = {}\n    switch (editMode) {\n      case \"TEXT\":\n        body.answer = event.target.value;\n        body.correct = state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].correct;\n        break;\n      case \"CHECKBOX\":\n        body.answer = state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].answer;\n        body.correct = !state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].correct;\n        break;\n      default:\n        body.answer = state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].answer;\n        body.correct = state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].correct;\n        break;\n    }\n    try {\n      let result = await axios.put(path + \"quiz/\" + quizId + \"/question/\" + questionId + \"/answer/\" + answerId, body)\n      switch (editMode) {\n        case \"TEXT\":\n          dispatch({ type: \"ANSWER_CHANGED\", data: { newText: body.answer, quizIndex: quizIndex, questionIndex: questionIndex, answerIndex: answerIndex } })\n          break;\n        case \"CHECKBOX\":\n          dispatch({ type: \"CORRECT_TOGGLE\", data: { newText: body.answer, quizIndex: quizIndex, questionIndex: questionIndex, answerIndex: answerIndex } })\n          break;\n        default:\n          break;\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  //// DELETE ------------------------------------------------------------------------------------------------\n\n  const deleteQuestion = async (event, quizIndex, questionIndex) => {\n    let quizId = state[quizIndex].id;\n    let questionId = state[quizIndex].quizQuestions[questionIndex].id;\n    try {\n      let result = await axios.delete(path + \"quiz/\" + quizId + \"/question/\" + questionId)\n      dispatch({ type: \"DELETE_QUESTION\", data: { newText: '', quizIndex: quiz, questionIndex: questionIndex } })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const deleteQuiz = async (event, quizIndex) => {\n    let quizId = state[quizIndex].id;\n    try {\n      let result = await axios.delete(path + \"quiz/\" + quizId)\n      dispatch({ type: \"DELETE_QUIZ\", data: { newText: '', quizIndex: quiz } })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const deleteAnsweroption = async (event, quizIndex, questionIndex, answerIndex) => {\n    let quizId = state[quizIndex].id;\n    let questionId = state[quizIndex].quizQuestions[questionIndex].id;\n    let answerId = state[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].id;\n    try {\n      let result = await axios.delete(path + \"quiz/\" + quizId + \"/question/\" + questionId + \"/answer/\" + answerId)\n      dispatch({ type: \"DELETE_ANSWER\", data: { newText: '', quizIndex: quiz, questionIndex: questionIndex, answerIndex: answerIndex } })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  //// MISC ---------------------------------------------------------------------------------------------------\n  const selectQuiz = (quizNo) => {\n    setQuiz(quizNo);\n  }\n\n  const toggleAnswers = () => {\n    setAnswersVisible(!answersVisible);\n  }\n\n  const [status, setStatus] = React.useState({\n    teacherMode: false,\n  });\n\n  const handleChange = (event) => {\n    setStatus({ ...status, [event.target.name]: event.target.checked });\n  };\n\n  // const [topicList, setTopicList] = useState([])\n  // const buildTopicList = (topic) => {\n  //   if (!topicList.includes(topic)) {\n  //     var newTopicList = [...topicList].concat(topic)\n  //     setTopicList(newTopicList)\n  //   }\n  // }\n\n\n\n  //// JSX ------------------------------------------------------------------------------------------------------\n  return (\n    <div>\n      <Container className=\"quizContainer\">\n        <ButtonAppBar switchLanguage={switchLanguage} language={lan} />\n        <Switch>\n          <Route exact path=\"/register\" component={withRouter(Register)} />\n          <Route exact path=\"/login\" component={withRouter(Login)} />\n          <Route exact path=\"/\">\n            <div className={classes.root}>\n              <FormControlLabel\n                control={\n                  <MaterialSwitch\n                    checked={status.teacherMode}\n                    onChange={handleChange}\n                    name=\"teacherMode\"\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                  />\n                }\n                label={strings.teachermode} /><br />\n\n              {dataAlustettu ? state.map((val, index) => {\n                return <Button variant=\"outlined\" onClick={() => selectQuiz(index)}>{val.quizname}</Button>\n              }) : null}\n              {status.teacherMode && dataAlustettu ? <div><NewQuizDialog addNewQuiz={addQuiz} /></div> : \"\"}\n            </div>\n            {dataAlustettu ? state[quiz].quizQuestions.map((value, parentIndex) => {\n              return (\n                <div className=\"questionCard\">\n                  <Paper elevation={1}>\n                    <List className={classes.root}>\n                      <h3>{value.topicArea}</h3>\n                      {status.teacherMode ?\n                        <EditQuestion value={value} quiz={quiz} parentIndex={parentIndex} updateQuestion={updateQuestion} deleteQuestion={deleteQuestion} />\n                        : <div className=\"question\">{value.question}</div>\n                      }\n                      {value.answerOptions.map((value, index) => {\n                        return (\n                          <div>\n                            {status.teacherMode ?\n                              <EditAnswerOption value={value} quiz={quiz} parentIndex={parentIndex} index={index} status={status}\n                                updateAnsweroption={updateAnsweroption}\n                                deleteAnsweroption={deleteAnsweroption}\n                                dispatch={dispatch}\n                              />\n                              : <AnswerOption value={value} quiz={quiz} parentIndex={parentIndex} index={index} answersVisible={answersVisible} />}\n                          </div>\n                        )\n                      })}\n                      {status.teacherMode ? <div className=\"addButton\"><Button onClick={(event) => addAnsweroption(event, quiz, parentIndex)}><AddCircleIcon /></Button></div> : \"\"}\n                    </List>\n                  </Paper>\n                </div>\n              );\n            })\n              : null}\n            <div className=\"bottomButtons\">\n              {status.teacherMode ? <Button variant=\"contained\" onClick={(event) => addQuestion(event, quiz)}><AddIcon />   {strings.addnewanswer}</Button> :\n                <Button variant=\"contained\" onClick={() => toggleAnswers()}>{answersVisible ? strings.hidecorrect : strings.showcorrect}</Button>\n              }</div>\n\n          </Route>\n        </Switch>\n      </Container >\n    </div >\n  );\n}\nexport default withSnackbar(App);\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { SnackbarProvider } from 'notistack';\n\nReactDOM.render(\n    <BrowserRouter>\n      <SnackbarProvider maxSnack={3} variant=\"info\">\n        <App />\n      </SnackbarProvider>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}