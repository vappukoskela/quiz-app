{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\vappu\\\\Documents\\\\ReactKansio\\\\quiz-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState, useReducer } from 'react';\nimport ButtonAppBar from './ButtonAppBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport quizzesImported from './Quizzes';\nimport uuid from 'react-uuid';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport AddIcon from '@material-ui/icons/Add';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { Container, Paper, Button, Switch, FormControlLabel, TextField } from '@material-ui/core';\nimport axios from 'axios';\nimport { Chart, BarSeries, Title, ArgumentAxis, ValueAxis } from '@devexpress/dx-react-chart-material-ui';\nimport { Animation } from '@devexpress/dx-react-chart';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nconst chartData = {\n  labels: ['Aihealue 1', 'Aihealue 2', 'Aihealue 3'],\n  datasets: [{\n    label: 'My First dataset',\n    backgroundColor: 'rgba(255,99,132,0.2)',\n    borderColor: 'rgba(255,99,132,1)',\n    borderWidth: 1,\n    hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n    hoverBorderColor: 'rgba(255,99,132,1)',\n    data: [65, 59, 100]\n  }]\n};\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/_jsxDEV(Checkbox, {\n  color: \"default\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 66,\n  columnNumber: 15\n}, this)); // ----------------REDUCER----------------------------------------------------\n\nfunction reducer(state, action) {\n  let deepCopy = JSON.parse(JSON.stringify(state));\n\n  switch (action.type) {\n    case 'increment':\n      return {\n        count: state.count + 1\n      };\n\n    case \"INIT_DATA\":\n      return action.data;\n    /// <--- this should be state\n\n    case \"ANSWER_CHANGED\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].answer = action.data.newText;\n      return deepCopy;\n\n    case \"QUESTION_CHANGED\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].question = action.data.newText;\n      return deepCopy;\n\n    case \"QUIZ_CHANGED\":\n      //TODO: implement controls\n      deepCopy[action.data.quizIndex].quizName = action.data.newText;\n      return deepCopy;\n\n    case \"ADD_ANSWER\":\n      let newAnswer = {\n        answer: \"\",\n        correct: false,\n        selected: false,\n        uuid: uuid()\n      };\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions.push(newAnswer);\n      return deepCopy;\n\n    case \"ADD_QUESTION\":\n      let newQuestion = {\n        question: \"\",\n        answerOptions: [{\n          answer: \"\",\n          correct: false,\n          selected: false,\n          uuid: uuid()\n        }],\n        uuid: uuid()\n      };\n      deepCopy[action.data.quizIndex].quizQuestions.push(newQuestion);\n      return deepCopy;\n\n    case \"ADD_QUIZ\":\n      let newQuiz = {\n        quizName: \"New Quiz\",\n        quizQuestions: [{\n          question: \"\",\n          answerOptions: [{\n            answer: \"\",\n            correct: false,\n            selected: false,\n            uuid: uuid()\n          }],\n          uuid: uuid()\n        }],\n        uuid: uuid()\n      };\n      deepCopy.push(newQuiz);\n      return deepCopy;\n\n    case \"DELETE_ANSWER\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions.splice(action.data.answerIndex, 1);\n      return deepCopy;\n\n    case \"DELETE_QUESTION\":\n      deepCopy[action.data.quizIndex].quizQuestions.splice(action.data.questionIndex, 1);\n      return deepCopy;\n\n    case \"DELETE_QUIZ\":\n      // TODO: implement controls\n      deepCopy[action.data.quizIndex].splice(action.data.quizIndex, 1);\n      return deepCopy;\n\n    case \"SELECT_TOGGLE\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].selected = !deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].selected;\n      /*\n       if( deepcopy jne....selected && deepcopyjne...correct) {\n        answerCorrecti = true;\n      }\n      */\n\n      return deepCopy;\n\n    case \"CORRECT_TOGGLE\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].correct = !deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].correct;\n      return deepCopy;\n\n    default:\n      throw new Error();\n  }\n} // ----------------APP-------------------------------------------------------\n\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n  const [dataAlustettu, setDataAlustettu] = useState(false);\n  const [quiz, setQuiz] = useState(0);\n  const [answersVisible, setAnswersVisible] = useState(false);\n  const [state, dispatch] = useReducer(reducer, []);\n  const [barChartData, setBarChartData] = useState([{\n    aiheAlue: 'Euroviisut',\n    vastauksetOikein: 0\n  }, {\n    aiheAlue: 'Eläimet',\n    vastauksetOikein: 2.4\n  }, {\n    aiheAlue: 'Kaupungit',\n    vastauksetOikein: 1.25\n  }]);\n  const createBarChartData = currentQuiz = {};\n  useEffect(() => {\n    const createData = async () => {\n      try {\n        const initialData = quizzesImported;\n        let result = await axios.post(\"http://localhost:3005/quizzes\", initialData);\n        dispatch({\n          type: \"INIT_DATA\",\n          data: initialData\n        });\n        setDataAlustettu(true);\n      } catch (exception) {\n        alert(\"Tietokannan alustaminen epäonnistui\" + exception);\n      }\n    };\n\n    const fetchData = async () => {\n      try {\n        let result = await axios.get(\"http://localhost:3005/quizzes\");\n\n        if (result.data.length > 0) {\n          dispatch({\n            type: \"INIT_DATA\",\n            data: result.data\n          });\n          setDataAlustettu(true);\n        } else {\n          throw \"Nyt pitää data kyllä alustaa!\";\n        }\n      } catch (exception) {\n        createData();\n        console.log(exception);\n      }\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const updateData = async () => {\n      try {\n        let result = await axios.put(\"http://localhost:3005/quizzes\", state);\n      } catch (exception) {\n        console.log(\"Datan päivitys ei onnistunut\");\n      } finally {}\n    };\n\n    if (dataAlustettu) {\n      updateData();\n    }\n  }, [state]);\n\n  const selectQuiz = quizNo => {\n    setQuiz(quizNo);\n  };\n\n  const toggleAnswers = () => {\n    setAnswersVisible(!answersVisible);\n  };\n\n  const [status, setStatus] = React.useState({\n    teacherMode: false\n  });\n\n  const handleChange = event => {\n    setStatus({ ...status,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ButtonAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"quizContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: status.teacherMode,\n            onChange: handleChange,\n            name: \"teacherMode\",\n            inputProps: {\n              'aria-label': 'secondary checkbox'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this),\n          label: \"Teacher mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 36\n        }, this), dataAlustettu ? state.map((val, index) => {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: () => selectQuiz(index),\n            children: val.quizName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 20\n          }, this);\n        }) : null, status.teacherMode ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: event => dispatch({\n            type: \"ADD_QUIZ\",\n            data: {}\n          }),\n          children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 101\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 33\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), dataAlustettu ? state[quiz].quizQuestions.map((value, parentIndex) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questionCard\",\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 1,\n            children: /*#__PURE__*/_jsxDEV(List, {\n              className: classes.root,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: value.topicArea\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this), status.teacherMode ? /*#__PURE__*/_jsxDEV(ListItem, {\n                role: undefined,\n                dense: true,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  onChange: event => dispatch({\n                    type: \"QUESTION_CHANGED\",\n                    data: {\n                      newText: event.target.value,\n                      quizIndex: quiz,\n                      questionIndex: parentIndex\n                    }\n                  }),\n                  size: \"small\",\n                  label: \"Question \" + (parentIndex + 1),\n                  variant: \"outlined\",\n                  value: value.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"deleteButton\",\n                  onClick: event => dispatch({\n                    type: \"DELETE_QUESTION\",\n                    data: {\n                      newText: event.target.value,\n                      quizIndex: quiz,\n                      questionIndex: parentIndex\n                    }\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 198\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 23\n                }, this)]\n              }, value.uuid, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question\",\n                children: value.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 23\n              }, this), value.answerOptions.map((value, index) => {\n                return /*#__PURE__*/_jsxDEV(ListItem, {\n                  role: undefined,\n                  dense: true,\n                  children: [answersVisible || status.teacherMode ? /*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(GreenCheckbox, {\n                      onChange: event => dispatch({\n                        type: \"CORRECT_TOGGLE\",\n                        data: {\n                          newText: event.target.value,\n                          quizIndex: quiz,\n                          questionIndex: parentIndex,\n                          answerIndex: index\n                        }\n                      }),\n                      checked: value.correct,\n                      edge: \"start\",\n                      tabIndex: -1,\n                      hidden: answersVisible,\n                      disabled: !status.teacherMode\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 66\n                  }, this) : null, /*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      onChange: event => dispatch({\n                        type: \"SELECT_TOGGLE\",\n                        data: {\n                          newText: event.target.value,\n                          quizIndex: quiz,\n                          questionIndex: parentIndex,\n                          answerIndex: index\n                        }\n                      }),\n                      checked: value.selected,\n                      edge: \"start\",\n                      tabIndex: -1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 25\n                  }, this), status.teacherMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(TextField, {\n                      onChange: event => dispatch({\n                        type: \"ANSWER_CHANGED\",\n                        data: {\n                          newText: event.target.value,\n                          quizIndex: quiz,\n                          questionIndex: parentIndex,\n                          answerIndex: index\n                        }\n                      }),\n                      size: \"small\",\n                      label: \"Answer \" + (index + 1),\n                      variant: \"outlined\",\n                      value: value.answer\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: \"deleteButton\",\n                      onClick: event => dispatch({\n                        type: \"DELETE_ANSWER\",\n                        data: {\n                          newText: event.target.value,\n                          quizIndex: quiz,\n                          questionIndex: parentIndex,\n                          answerIndex: index\n                        }\n                      }),\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 222\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      id: index,\n                      primary: value.answer\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 34\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 29\n                  }, this)]\n                }, value.uuid, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 23\n                }, this);\n              }), status.teacherMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"addButton\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: event => dispatch({\n                    type: \"ADD_ANSWER\",\n                    data: {\n                      newText: event.target.value,\n                      quizIndex: quiz,\n                      questionIndex: parentIndex\n                    }\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 213\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 68\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 41\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this);\n      }) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottomButtons\",\n        children: status.teacherMode ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: event => dispatch({\n            type: \"ADD_QUESTION\",\n            data: {\n              newText: event.target.value,\n              quizIndex: quiz\n            }\n          }),\n          children: [/*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 170\n          }, this), \"   Add new question\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => toggleAnswers(),\n          children: answersVisible ? \"Hide correct answers\" : \"Show correct answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        data: barChartData,\n        children: [/*#__PURE__*/_jsxDEV(ArgumentAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValueAxis, {\n          max: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BarSeries, {\n          valueField: \"vastauksetOikein\",\n          argumentField: \"aiheAlue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          text: \"Oikein menneet kysymykset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Animation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qlfH+51JqLV2Urrd0je1zj3RHVw=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/vappu/Documents/ReactKansio/quiz-app/src/App.js"],"names":["React","useEffect","useState","useReducer","ButtonAppBar","makeStyles","List","ListItem","ListItemIcon","ListItemText","Checkbox","quizzesImported","uuid","DeleteIcon","AddCircleIcon","AddIcon","withStyles","green","Container","Paper","Button","Switch","FormControlLabel","TextField","axios","Chart","BarSeries","Title","ArgumentAxis","ValueAxis","Animation","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","margin","spacing","chartData","labels","datasets","label","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","GreenCheckbox","color","checked","props","reducer","state","action","deepCopy","JSON","parse","stringify","type","count","quizIndex","quizQuestions","questionIndex","answerOptions","answerIndex","answer","newText","question","quizName","newAnswer","correct","selected","push","newQuestion","newQuiz","splice","Error","App","classes","dataAlustettu","setDataAlustettu","quiz","setQuiz","answersVisible","setAnswersVisible","dispatch","barChartData","setBarChartData","aiheAlue","vastauksetOikein","createBarChartData","currentQuiz","createData","initialData","result","post","exception","alert","fetchData","get","length","console","log","updateData","put","selectQuiz","quizNo","toggleAnswers","status","setStatus","teacherMode","handleChange","event","target","name","map","val","index","value","parentIndex","topicArea","undefined"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useEffect, useState, useReducer } from 'react';\nimport ButtonAppBar from './ButtonAppBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport quizzesImported from './Quizzes'\nimport uuid from 'react-uuid'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport AddIcon from '@material-ui/icons/Add';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { Container, Paper, Button, Switch, FormControlLabel, TextField } from '@material-ui/core';\nimport axios from 'axios';\nimport {\n  Chart,\n  BarSeries,\n  Title,\n  ArgumentAxis,\n  ValueAxis,\n} from '@devexpress/dx-react-chart-material-ui';\n\nimport { Animation } from '@devexpress/dx-react-chart';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst chartData = {\n  labels: ['Aihealue 1', 'Aihealue 2', 'Aihealue 3'],\n  datasets: [\n    {\n      label: 'My First dataset',\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n      hoverBorderColor: 'rgba(255,99,132,1)',\n      data: [65, 59, 100]\n    }\n  ]\n};\n\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\n// ----------------REDUCER----------------------------------------------------\n\nfunction reducer(state, action) {\n  let deepCopy = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case 'increment':\n      return { count: state.count + 1 };\n    case \"INIT_DATA\":\n      return action.data; /// <--- this should be state\n    case \"ANSWER_CHANGED\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].answer = action.data.newText;\n      return deepCopy;\n    case \"QUESTION_CHANGED\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].question = action.data.newText;\n      return deepCopy;\n    case \"QUIZ_CHANGED\":\n      //TODO: implement controls\n      deepCopy[action.data.quizIndex].quizName = action.data.newText;\n      return deepCopy;\n    case \"ADD_ANSWER\":\n      let newAnswer = { answer: \"\", correct: false, selected: false, uuid: uuid() }\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions.push(newAnswer)\n      return deepCopy;\n    case \"ADD_QUESTION\":\n      let newQuestion = { question: \"\", answerOptions: [{ answer: \"\", correct: false, selected: false, uuid: uuid() }], uuid: uuid() }\n      deepCopy[action.data.quizIndex].quizQuestions.push(newQuestion)\n      return deepCopy;\n    case \"ADD_QUIZ\":\n      let newQuiz = { quizName: \"New Quiz\", quizQuestions: [{ question: \"\", answerOptions: [{ answer: \"\", correct: false, selected: false, uuid: uuid() }], uuid: uuid() }], uuid: uuid() }\n      deepCopy.push(newQuiz)\n      return deepCopy;\n    case \"DELETE_ANSWER\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions.splice(action.data.answerIndex, 1)\n      return deepCopy;\n    case \"DELETE_QUESTION\":\n      deepCopy[action.data.quizIndex].quizQuestions.splice(action.data.questionIndex, 1)\n      return deepCopy;\n    case \"DELETE_QUIZ\":\n      // TODO: implement controls\n      deepCopy[action.data.quizIndex].splice(action.data.quizIndex, 1)\n      return deepCopy;\n    case \"SELECT_TOGGLE\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].selected = \n      !deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].selected;\n\n      /*\n       if( deepcopy jne....selected && deepcopyjne...correct) {\n        answerCorrecti = true;\n      }\n      */\n      return deepCopy;\n    case \"CORRECT_TOGGLE\":\n      deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].correct = \n        !deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].correct;\n      return deepCopy;\n    default:\n      throw new Error();\n  }\n}\n\n// ----------------APP-------------------------------------------------------\n\nfunction App() {\n  const classes = useStyles();\n  const [dataAlustettu, setDataAlustettu] = useState(false);\n  const [quiz, setQuiz] = useState(0);\n  const [answersVisible, setAnswersVisible] = useState(false);\n  const [state, dispatch] = useReducer(reducer, []);\n\n  const [barChartData, setBarChartData] = useState([\n    { aiheAlue: 'Euroviisut', vastauksetOikein: 0 },\n    { aiheAlue: 'Eläimet', vastauksetOikein: 2.4 },\n    { aiheAlue: 'Kaupungit', vastauksetOikein: 1.25 },\n  ]);\n\n\n  const createBarChartData = (currentQuiz) ={\n    \n  } \n\n  useEffect(() => {\n    const createData = async () => {\n      try {\n        const initialData = quizzesImported\n        let result = await axios.post(\"http://localhost:3005/quizzes\", initialData)\n        dispatch({ type: \"INIT_DATA\", data: initialData })\n        setDataAlustettu(true)\n      } catch (exception) {\n        alert(\"Tietokannan alustaminen epäonnistui\" + exception)\n      }\n    }\n\n    const fetchData = async () => {\n      try {\n        let result = await axios.get(\"http://localhost:3005/quizzes\")\n        if (result.data.length > 0) {\n          dispatch({ type: \"INIT_DATA\", data: result.data })\n          setDataAlustettu(true)\n\n        } else {\n          throw (\"Nyt pitää data kyllä alustaa!\")\n        }\n      }\n      catch (exception) {\n        createData();\n        console.log(exception)\n      }\n    }\n    fetchData();\n  }, [])\n\n  useEffect(() => {\n    const updateData = async () => {\n      try {\n        let result = await axios.put(\"http://localhost:3005/quizzes\", state)\n      } catch (exception) {\n        console.log(\"Datan päivitys ei onnistunut\")\n      }\n      finally {\n\n      }\n    }\n    if (dataAlustettu) {\n      updateData();\n    }\n  }, [state])\n\n  const selectQuiz = (quizNo) => {\n    setQuiz(quizNo);\n  }\n\n  const toggleAnswers = () => {\n    setAnswersVisible(!answersVisible);\n\n  }\n\n  const [status, setStatus] = React.useState({\n    teacherMode: false,\n  });\n\n  const handleChange = (event) => {\n    setStatus({ ...status, [event.target.name]: event.target.checked });\n  };\n  \n\n\n  return (\n    <div>\n      <ButtonAppBar />\n      <Container className=\"quizContainer\">\n        <div className={classes.root}>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={status.teacherMode}\n                onChange={handleChange}\n                name=\"teacherMode\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n              />\n            }\n            label=\"Teacher mode\" /><br />\n          {dataAlustettu ? state.map((val, index) => {\n            return <Button variant=\"outlined\" onClick={() => selectQuiz(index)}>{val.quizName}</Button>\n          })\n            : null}\n          {status.teacherMode ? <Button onClick={(event) => dispatch({ type: \"ADD_QUIZ\", data:{}})}><AddCircleIcon /></Button> : \"\"}\n        </div>\n\n        {dataAlustettu ? state[quiz].quizQuestions.map((value, parentIndex) => {\n          return (\n            <div className=\"questionCard\">\n              <Paper elevation={1}>\n                <List className={classes.root}>\n                  <h3>{value.topicArea}</h3>\n                  {status.teacherMode ?\n                    <ListItem key={value.uuid} role={undefined} dense >\n                      <TextField  fullWidth onChange={(event) => dispatch({ type: \"QUESTION_CHANGED\", data: { newText: event.target.value, quizIndex: quiz, questionIndex: parentIndex} })} size=\"small\" label={\"Question \" + (parentIndex + 1)} variant=\"outlined\" value={value.question} />\n                      <Button className=\"deleteButton\" onClick={(event) => dispatch({ type: \"DELETE_QUESTION\", data: { newText: event.target.value, quizIndex: quiz, questionIndex: parentIndex} })}><DeleteIcon /></Button>\n                    </ListItem>\n                    : <div className=\"question\">{value.question}</div>}\n                  {value.answerOptions.map((value, index) => {\n                    return (\n                      <ListItem key={value.uuid} role={undefined} dense >\n                        { answersVisible || status.teacherMode ? <ListItemIcon>\n                          <GreenCheckbox\n                            onChange={(event) => dispatch({ type: \"CORRECT_TOGGLE\", data: { newText: event.target.value, quizIndex: quiz, questionIndex: parentIndex, answerIndex: index } })}\n                            checked={value.correct}\n                            edge=\"start\"\n                            tabIndex={-1}\n                            hidden={answersVisible}\n                            disabled={!status.teacherMode}\n                          />\n                        </ListItemIcon> : null}\n                        <ListItemIcon>\n                          <Checkbox\n                            onChange={(event) => dispatch({ type: \"SELECT_TOGGLE\", data: { newText: event.target.value, quizIndex: quiz, questionIndex: parentIndex, answerIndex: index } })}\n                            checked={value.selected}\n                            edge=\"start\"\n                            tabIndex={-1}\n                          />\n                        </ListItemIcon>\n                        {status.teacherMode ?\n                          <div>\n                            <TextField onChange={(event) => dispatch({ type: \"ANSWER_CHANGED\", data: { newText: event.target.value, quizIndex: quiz, questionIndex: parentIndex, answerIndex: index } })} size=\"small\" label={\"Answer \" + (index + 1)} variant=\"outlined\" value={value.answer} />\n                            <Button className=\"deleteButton\" onClick={(event) => dispatch({ type: \"DELETE_ANSWER\", data: { newText: event.target.value, quizIndex: quiz, questionIndex: parentIndex, answerIndex: index} })}><DeleteIcon /></Button>\n                          </div>\n                          : <div><ListItemText id={index} primary={value.answer} /></div>\n                        }\n                      </ListItem>\n                    )\n                  })}\n                  {status.teacherMode ? <div className=\"addButton\"><Button onClick={(event) => dispatch({ type: \"ADD_ANSWER\", data: { newText: event.target.value, quizIndex: quiz, questionIndex: parentIndex} })}><AddCircleIcon /></Button></div> : \"\"}\n                </List>\n              </Paper>\n            </div>\n          );\n        })\n          : null}\n        <div className=\"bottomButtons\">\n          {status.teacherMode ? <Button variant=\"contained\"onClick={(event) => dispatch({ type: \"ADD_QUESTION\", data: { newText: event.target.value, quizIndex: quiz}})}><AddIcon />   Add new question</Button> :\n            <Button variant=\"contained\" onClick={() => toggleAnswers()}>{answersVisible ? \"Hide correct answers\" : \"Show correct answers\"}</Button>\n          }</div>\n      </Container>\n      <Paper>\n        <Chart\n          data={barChartData}\n        >\n          <ArgumentAxis />\n          <ValueAxis max={2} />\n          <BarSeries\n            valueField=\"vastauksetOikein\"\n            argumentField=\"aiheAlue\"\n          />\n          <Title text=\"Oikein menneet kysymykset\" />\n          <Animation />\n        </Chart>\n      </Paper>   \n      </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}