{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\vappu\\\\Documents\\\\ReactKansio\\\\quiz-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport ButtonAppBar from './ButtonAppBar';\nimport CheckboxList from './CheckboxList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport { Container, Card, Paper, Button } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const initialData = [{\n    question: \"How is sepiolite also called?\",\n    answerOptions: [{\n      answer: \"Montmonite\",\n      correct: false,\n      selected: false\n    }, {\n      answer: \"Calcite\",\n      correct: false,\n      selected: false\n    }, {\n      answer: \"Meerschaum\",\n      correct: true,\n      selected: false\n    }, {\n      answer: \"Silica gel\",\n      correct: false,\n      selected: false\n    }]\n  }, {\n    question: \"How is sepiolite commonly mined?\",\n    answerOptions: [{\n      answer: \"Surface mining\",\n      correct: true,\n      selected: false\n    }, {\n      answer: \"Shaft mining\",\n      correct: false,\n      selected: false\n    }, {\n      answer: \"In situ mining\",\n      correct: false,\n      selected: false\n    }, {\n      answer: \"Fracking\",\n      correct: false,\n      selected: false\n    }]\n  }, {\n    question: \"Which country is the largest sepiolite producer in the world?\",\n    answerOptions: [{\n      answer: \"USA\",\n      correct: true,\n      selected: false\n    }, {\n      answer: \"Tanzania\",\n      correct: false,\n      selected: false\n    }, {\n      answer: \"Spain \",\n      correct: true,\n      selected: false\n    }, {\n      answer: \"Turkey\",\n      correct: false,\n      selected: false\n    }]\n  }, {\n    question: \"Which state holds the largest bentonite mine in the USA?\",\n    answerOptions: [{\n      answer: \"Kentucky\",\n      correct: true,\n      selected: false\n    }, {\n      answer: \"Ohio\",\n      correct: false,\n      selected: false\n    }, {\n      answer: \"Wisconsin \",\n      correct: false,\n      selected: false\n    }, {\n      answer: \"Wyoming\",\n      correct: true,\n      selected: false\n    }]\n  }];\n  const [data, setData] = useState([]);\n  const [dataAlustettu, setDataAlustettu] = useState(false);\n  useEffect(() => {\n    let jemma = window.localStorage;\n    let tempData = JSON.parse(jemma.getItem(\"data\"));\n\n    if (tempData == null) {\n      jemma.setItem(\"data\", JSON.stringify(initialData));\n      tempData = initialData;\n    }\n\n    setData(tempData);\n    setDataAlustettu(true);\n  }, []);\n  useEffect(() => {\n    if (dataAlustettu) {\n      window.localStorage.setItem(\"data\", JSON.stringify(data));\n    }\n  }, [data]);\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n\n  const handleToggle = (event, index, parentIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data));\n    deepCopy[parentIndex].answerOptions[index].selected = !deepCopy[parentIndex].answerOptions[index].selected;\n    setData(deepCopy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ButtonAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"quizContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          children: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          children: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        children: [data.map((value, parentIndex) => {\n          return /*#__PURE__*/_jsxDEV(List, {\n            className: classes.root,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"question\",\n              children: value.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), value.answerOptions.map((value, index) => {\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                role: undefined,\n                dense: true,\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    onChange: event => handleToggle(event, index, parentIndex),\n                    checked: value.selected,\n                    edge: \"start\",\n                    tabIndex: -1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  id: index,\n                  primary: value.answer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YJJ0bgmUasEuCj6fUtEShu2EZbo=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/vappu/Documents/ReactKansio/quiz-app/src/App.js"],"names":["React","useEffect","useState","ButtonAppBar","CheckboxList","makeStyles","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","CommentIcon","Container","Card","Paper","Button","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","margin","spacing","App","initialData","question","answerOptions","answer","correct","selected","data","setData","dataAlustettu","setDataAlustettu","jemma","window","localStorage","tempData","JSON","parse","getItem","setItem","stringify","classes","checked","setChecked","handleToggle","event","index","parentIndex","deepCopy","map","value","undefined"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport ButtonAppBar from './ButtonAppBar';\nimport CheckboxList from './CheckboxList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nimport {Container, Card, Paper, Button} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\n\nfunction App() {\n\n  const initialData = [\n      {\n      question: \"How is sepiolite also called?\",\n      answerOptions: [\n      {\n        answer: \"Montmonite\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Calcite\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Meerschaum\",\n        correct: true,\n        selected: false\n      },{\n        answer: \"Silica gel\",\n        correct: false,\n        selected: false\n      }]},\n      {\n      question: \"How is sepiolite commonly mined?\",\n      answerOptions: [\n      {\n        answer: \"Surface mining\",\n        correct: true,\n        selected: false\n      },{\n        answer: \"Shaft mining\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"In situ mining\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Fracking\",\n        correct: false,\n        selected: false\n      }]},{\n      question: \"Which country is the largest sepiolite producer in the world?\",\n      answerOptions: [\n      {\n        answer: \"USA\",\n        correct: true,\n        selected: false\n      },{\n        answer: \"Tanzania\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Spain \",\n        correct: true,\n        selected: false\n      },{\n        answer: \"Turkey\",\n        correct: false,\n        selected: false\n      }]},{\n      question: \"Which state holds the largest bentonite mine in the USA?\",\n      answerOptions: [\n      {\n        answer: \"Kentucky\",\n        correct: true,\n        selected: false\n      },{\n        answer: \"Ohio\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Wisconsin \",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Wyoming\",\n        correct: true,\n        selected: false\n      }]}\n  ];\n\n  const [data, setData] = useState([])\n  const [dataAlustettu, setDataAlustettu] = useState(false)\n\n  useEffect(() => {\n    let jemma = window.localStorage;\n    let tempData = JSON.parse(jemma.getItem(\"data\"))\n    if (tempData == null) {\n      jemma.setItem(\"data\", JSON.stringify(initialData))\n      tempData = initialData\n    } \n    setData(tempData);\n    setDataAlustettu(true)\n  }, [])\n\n  useEffect(() => {\n    if (dataAlustettu) {\n      window.localStorage.setItem(\"data\", JSON.stringify(data))\n    }\n  }, [data])\n\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n\n  const handleToggle = (event, index, parentIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data))\n    deepCopy[parentIndex].answerOptions[index].selected = !deepCopy[parentIndex].answerOptions[index].selected;\n    setData(deepCopy)\n  };\n  \n\n\n  return (\n    <div>\n      <ButtonAppBar/>\n        <Container className=\"quizContainer\">\n        <div className={classes.root}>\n\n        <Button variant=\"outlined\">Default</Button> \n        <Button variant=\"outlined\">Default</Button>\n        </div>\n        <br/>\n          <Paper elevation={3}>\n            {data.map((value, parentIndex) => {\n              return(\n                <List className={classes.root}>\n                <p className=\"question\">{value.question}</p>\n                {value.answerOptions.map((value, index) => {\n                  return(\n                  <ListItem key={index} role={undefined} dense >\n                    <ListItemIcon>\n                      <Checkbox\n                        onChange={(event) => handleToggle(event, index, parentIndex)}\n                        checked={value.selected}\n                        edge=\"start\"\n                        tabIndex={-1}\n                      />\n                    </ListItemIcon>\n                    <ListItemText id={index} primary={value.answer} />\n                  </ListItem>\n                  )\n                })}\n                </List>\n              );\n            })}<br/>\n          </Paper>\n        </Container>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}