{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\vappu\\\\Documents\\\\ReactKansio\\\\quiz-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport ButtonAppBar from './ButtonAppBar';\nimport CheckboxList from './CheckboxList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport SimpleContainer from './SimpleContainer';\nimport { Container, Card, Paper } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const initialData = [{\n    question: \"Nel 2050?\",\n    answerOptions: [{\n      answer: \"Saremo tutti vegani\",\n      correct: \"false\",\n      checked: \"false\"\n    }, {\n      answer: \"I più fortunati però potranno mangiare gli insetti\",\n      correct: \"false\",\n      checked: \"false\"\n    }, {\n      answer: \"Saremo tantissimi \",\n      correct: \"false\",\n      checked: \"false\"\n    }, {\n      answer: \"Saremo tutti un pochino più vecchi\",\n      correct: \"false\",\n      checked: \"false\"\n    }]\n  }, {\n    question: \"Nel 2050?\",\n    answerOptions: [{\n      answer: \"Saremo tutti vegani\",\n      correct: \"false\",\n      checked: \"false\"\n    }, {\n      answer: \"I più fortunati però potranno mangiare gli insetti\",\n      correct: \"false\",\n      checked: \"false\"\n    }, {\n      answer: \"Saremo tantissimi \",\n      correct: \"false\",\n      checked: \"false\"\n    }, {\n      answer: \"Saremo tutti un pochino più vecchi\",\n      correct: \"false\",\n      checked: \"false\"\n    }]\n  }];\n  const [data, setData] = useState([]);\n  const [dataAlustettu, setDataAlustettu] = useState(false);\n  useEffect(() => {\n    let jemma = window.localStorage;\n    let tempData = JSON.parse(jemma.getItem(\"data\"));\n\n    if (tempData == null) {\n      jemma.setItem(\"data\", JSON.stringify(initialData));\n      tempData = initialData;\n    }\n\n    setData(tempData);\n    setDataAlustettu(true);\n  }, []);\n  useEffect(() => {\n    if (dataAlustettu) {\n      window.localStorage.setItem(\"data\", JSON.stringify(data));\n    }\n  }, [data]);\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    console.log(newChecked);\n  };\n\n  const createQuestion = (value, index) => {\n    return /*#__PURE__*/_jsxDEV(List, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: value.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), value.answerOptions.map((value, index) => {\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          role: undefined,\n          dense: true,\n          button: true,\n          onClick: handleToggle(value),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              edge: \"start\",\n              checked: checked.indexOf(value) !== -1,\n              tabIndex: -1,\n              disableRipple: true,\n              inputProps: {\n                'aria-labelledby': index\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            id: index,\n            primary: value.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ButtonAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        children: [initialData.map(value => {\n          const labelId = `checkbox-list-label-${value}`;\n          return createQuestion(value, labelId);\n        }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YJJ0bgmUasEuCj6fUtEShu2EZbo=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/vappu/Documents/ReactKansio/quiz-app/src/App.js"],"names":["React","useEffect","useState","ButtonAppBar","CheckboxList","makeStyles","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","CommentIcon","SimpleContainer","Container","Card","Paper","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","App","initialData","question","answerOptions","answer","correct","checked","data","setData","dataAlustettu","setDataAlustettu","jemma","window","localStorage","tempData","JSON","parse","getItem","setItem","stringify","classes","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","console","log","createQuestion","index","map","undefined","labelId"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport ButtonAppBar from './ButtonAppBar';\nimport CheckboxList from './CheckboxList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nimport SimpleContainer from './SimpleContainer';\nimport {Container, Card, Paper} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\n\nfunction App() {\n\n  const initialData = [\n    {\n      question: \"Nel 2050?\",\n      answerOptions: [\n      {\n        answer: \"Saremo tutti vegani\",\n        correct: \"false\",\n        checked: \"false\"\n      },{\n        answer: \"I più fortunati però potranno mangiare gli insetti\",\n        correct: \"false\",\n        checked: \"false\"\n      },{\n        answer: \"Saremo tantissimi \",\n        correct: \"false\",\n        checked: \"false\"\n      },{\n        answer: \"Saremo tutti un pochino più vecchi\",\n        correct: \"false\",\n        checked: \"false\"\n      }]},{\n      question: \"Nel 2050?\",\n      answerOptions: [\n      {\n        answer: \"Saremo tutti vegani\",\n        correct: \"false\",\n        checked: \"false\"\n      },{\n        answer: \"I più fortunati però potranno mangiare gli insetti\",\n        correct: \"false\",\n        checked: \"false\"\n      },{\n        answer: \"Saremo tantissimi \",\n        correct: \"false\",\n        checked: \"false\"\n      },{\n        answer: \"Saremo tutti un pochino più vecchi\",\n        correct: \"false\",\n        checked: \"false\"\n      }]}\n  ];\n\n  const [data, setData] = useState([])\n  const [dataAlustettu, setDataAlustettu] = useState(false)\n\n  useEffect(() => {\n    let jemma = window.localStorage;\n    let tempData = JSON.parse(jemma.getItem(\"data\"))\n    if (tempData == null) {\n      jemma.setItem(\"data\", JSON.stringify(initialData))\n      tempData = initialData\n    } \n    setData(tempData);\n    setDataAlustettu(true)\n  }, [])\n\n  useEffect(() => {\n    if (dataAlustettu) {\n      window.localStorage.setItem(\"data\", JSON.stringify(data))\n    }\n  }, [data])\n\n\n\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    console.log(newChecked)\n  };\n  \n  const createQuestion = (value, index) => {\n    return(\n        <List className={classes.root}>\n        <p>{value.question}</p>\n        {value.answerOptions.map((value, index) => {\n          return(\n          <ListItem key={index} role={undefined} dense button onClick={handleToggle(value)}>\n          <ListItemIcon>\n            <Checkbox\n              edge=\"start\"\n              checked={checked.indexOf(value) !== -1}\n              tabIndex={-1}\n              disableRipple\n              inputProps={{ 'aria-labelledby': index }}\n            />\n          </ListItemIcon>\n          <ListItemText id={index} primary={value.answer} />\n        </ListItem>\n          )\n        })}\n      </List>\n    );\n  }\n\n\n  return (\n    <div>\n      <ButtonAppBar/>\n      <Container>\n      <Paper elevation={3}>\n      {initialData.map((value) => {\n        const labelId = `checkbox-list-label-${value}`;\n        return (createQuestion(value, labelId))\n      })}<br/>\n      </Paper>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}