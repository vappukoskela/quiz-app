{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\vappu\\\\Documents\\\\ReactKansio\\\\quiz-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState, useReducer } from 'react';\nimport ButtonAppBar from './ButtonAppBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport quizzesImported from './Quizzes';\nimport uuid from 'react-uuid';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport AddIcon from '@material-ui/icons/Add';\nimport CheckIcon from '@material-ui/icons/Check';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { Container, Paper, Button, Switch, FormControlLabel, TextField } from '@material-ui/core';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/_jsxDEV(Checkbox, {\n  color: \"default\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 15\n}, this));\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const [dataAlustettu, setDataAlustettu] = useState(false);\n  const [quiz, setQuiz] = useState(0);\n  const [answersVisible, setAnswersVisible] = useState(false);\n  const [state, dispatch] = useReducer(reducer, []);\n  useEffect(() => {\n    const createData = async () => {\n      try {\n        const initialData = quizzesImported;\n        let result = await axios.post(\"http://localhost:3005/quizzes\", initialData);\n        setData(initialData);\n        setDataAlustettu(true);\n      } catch (exception) {\n        alert(\"Tietokannan alustaminen ep채onnistui\" + exception);\n      }\n    };\n\n    const fetchData = async () => {\n      try {\n        let result = await axios.get(\"http://localhost:3005/quizzes\");\n\n        if (result.data.length > 0) {\n          setData(result.data);\n          setDataAlustettu(true);\n        } else {\n          throw \"Nyt pit채채 data kyll채 alustaa!\";\n        }\n      } catch (exception) {\n        createData();\n        console.log(exception);\n      }\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const updateData = async () => {\n      try {\n        let result = await axios.put(\"http://localhost:3005/quizzes\", data);\n      } catch (exception) {\n        console.log(exception);\n      }\n    };\n\n    if (dataAlustettu) {\n      updateData();\n    }\n  }, [data]);\n\n  function reducer(state, action) {\n    let deepCopy = JSON.parse(JSON.stringify(state));\n\n    switch (action.type) {\n      case 'increment':\n        return {\n          count: state.count + 1\n        };\n\n      case \"ANSWER_CHANGED\":\n        deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].answer = action.data.newText;\n        return deepCopy;\n\n      case \"INIT_DATA\":\n        return action.data;\n\n      default:\n        throw new Error();\n    }\n  }\n\n  const handleToggle = (event, index, parentIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data));\n    deepCopy[quiz].quizQuestions[parentIndex].answerOptions[index].selected = !deepCopy[quiz].quizQuestions[parentIndex].answerOptions[index].selected;\n    setData(deepCopy);\n  };\n\n  const handleCorrectToggle = (event, index, parentIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data));\n    deepCopy[quiz].quizQuestions[parentIndex].answerOptions[index].correct = !deepCopy[quiz].quizQuestions[parentIndex].answerOptions[index].correct;\n    setData(deepCopy);\n  };\n\n  const selectQuiz = quizNo => {\n    setQuiz(quizNo);\n  };\n\n  const toggleAnswers = () => {\n    setAnswersVisible(!answersVisible);\n  }; // --------------------------------------\n\n\n  const addQuiz = () => {\n    let deepCopy = JSON.parse(JSON.stringify(data));\n    let newQuiz = {\n      quizName: \"New Quiz\",\n      quizQuestions: [{\n        question: \"\",\n        answerOptions: [{\n          answer: \"\",\n          correct: false,\n          selected: false,\n          uuid: uuid()\n        }],\n        uuid: uuid()\n      }],\n      uuid: uuid()\n    };\n    deepCopy.push(newQuiz);\n    setData(deepCopy);\n  };\n\n  const addNewQuestion = quizIndex => {\n    let deepCopy = JSON.parse(JSON.stringify(data));\n    let newQuestion = {\n      question: \"\",\n      answerOptions: [{\n        answer: \"\",\n        correct: false,\n        selected: false,\n        uuid: uuid()\n      }],\n      uuid: uuid()\n    };\n    deepCopy[quizIndex].quizQuestions.push(newQuestion);\n    setData(deepCopy);\n  };\n\n  const addNewAnswer = (quizIndex, questionIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data));\n    let newAnswer = {\n      answer: \"\",\n      correct: false,\n      selected: false,\n      uuid: uuid()\n    };\n    deepCopy[quizIndex].quizQuestions[questionIndex].answerOptions.push(newAnswer);\n    setData(deepCopy);\n  };\n\n  const questionChanged = (event, quizIndex, questionIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data));\n    deepCopy[quizIndex].quizQuestions[questionIndex].question = event.target.value;\n    setData(deepCopy);\n  };\n\n  const answerChanged = (event, quizIndex, questionIndex, answerIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data));\n    deepCopy[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].answer = event.target.value;\n    setData(deepCopy);\n  };\n\n  const deleteQuestion = (quizIndex, questionIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data));\n    deepCopy[quizIndex].quizQuestions.splice(questionIndex, 1);\n    setData(deepCopy);\n  };\n\n  const deleteAnswer = (quizIndex, questionIndex, answerIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data));\n    deepCopy[quizIndex].quizQuestions[questionIndex].answerOptions.splice(answerIndex, 1);\n    setData(deepCopy);\n  }; // --------------------------------------\n\n\n  const [status, setStatus] = React.useState({\n    teacherMode: true\n  });\n\n  const handleChange = event => {\n    setStatus({ ...status,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(data), /*#__PURE__*/_jsxDEV(ButtonAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"quizContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: status.teacherMode,\n            onChange: handleChange,\n            name: \"teacherMode\",\n            inputProps: {\n              'aria-label': 'secondary checkbox'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this),\n          label: \"Teacher mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 36\n        }, this), dataAlustettu ? data.map((val, index) => {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: () => selectQuiz(index),\n            children: val.quizName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 20\n          }, this);\n        }) : null, status.teacherMode ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => addQuiz(),\n          children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 33\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), dataAlustettu ? data[quiz].quizQuestions.map((value, parentIndex) => {\n        console.log(value);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questionCard\",\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 1,\n            children: /*#__PURE__*/_jsxDEV(List, {\n              className: classes.root,\n              children: [status.teacherMode ? /*#__PURE__*/_jsxDEV(ListItem, {\n                role: undefined,\n                dense: true,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  onChange: event => questionChanged(event, quiz, parentIndex),\n                  size: \"small\",\n                  label: \"Question \" + (parentIndex + 1),\n                  variant: \"outlined\",\n                  value: value.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"deleteButton\",\n                  onClick: () => deleteQuestion(quiz, parentIndex),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 106\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 23\n                }, this)]\n              }, value.uuid, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question\",\n                children: value.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 23\n              }, this), value.answerOptions.map((value, index) => {\n                return /*#__PURE__*/_jsxDEV(ListItem, {\n                  role: undefined,\n                  dense: true,\n                  children: [answersVisible || status.teacherMode ? /*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(GreenCheckbox, {\n                      onChange: event => handleCorrectToggle(event, index, parentIndex),\n                      checked: value.correct,\n                      edge: \"start\",\n                      tabIndex: -1,\n                      hidden: answersVisible,\n                      disabled: !status.teacherMode\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 66\n                  }, this) : null, /*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      onChange: event => handleToggle(event, index, parentIndex),\n                      checked: value.selected,\n                      edge: \"start\",\n                      tabIndex: -1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 25\n                  }, this), status.teacherMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(TextField, {\n                      onChange: event => dispatch({\n                        type: \"ANSWER_CHANGED\",\n                        data: {\n                          newText: event.target.value,\n                          quizIndex: quiz,\n                          questionIndex: parentIndex,\n                          answerIndex: index\n                        }\n                      }),\n                      size: \"small\",\n                      label: \"Answer \" + (index + 1),\n                      variant: \"outlined\",\n                      value: value.answer\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: \"deleteButton\",\n                      onClick: () => deleteAnswer(quiz, parentIndex, index),\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 117\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      id: index,\n                      primary: value.answer\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 34\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 29\n                  }, this)]\n                }, value.uuid, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 23\n                }, this);\n              }), status.teacherMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"addButton\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => addNewAnswer(quiz, parentIndex),\n                  children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 124\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 68\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 41\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this);\n      }) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottomButtons\",\n        children: status.teacherMode ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => addNewQuestion(quiz),\n          children: [/*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 98\n          }, this), \"   Add new question\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => toggleAnswers(),\n          children: answersVisible ? \"Hide correct answers\" : \"Show correct answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"abPKGniM/0wNZZcd9YR3jktqq14=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/vappu/Documents/ReactKansio/quiz-app/src/App.js"],"names":["React","useEffect","useState","useReducer","ButtonAppBar","makeStyles","List","ListItem","ListItemIcon","ListItemText","Checkbox","quizzesImported","uuid","DeleteIcon","AddCircleIcon","AddIcon","CheckIcon","withStyles","green","Container","Paper","Button","Switch","FormControlLabel","TextField","axios","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","margin","spacing","GreenCheckbox","color","checked","props","App","classes","data","setData","dataAlustettu","setDataAlustettu","quiz","setQuiz","answersVisible","setAnswersVisible","state","dispatch","reducer","createData","initialData","result","post","exception","alert","fetchData","get","length","console","log","updateData","put","action","deepCopy","JSON","parse","stringify","type","count","quizIndex","quizQuestions","questionIndex","answerOptions","answerIndex","answer","newText","Error","handleToggle","event","index","parentIndex","selected","handleCorrectToggle","correct","selectQuiz","quizNo","toggleAnswers","addQuiz","newQuiz","quizName","question","push","addNewQuestion","newQuestion","addNewAnswer","newAnswer","questionChanged","target","value","answerChanged","deleteQuestion","splice","deleteAnswer","status","setStatus","teacherMode","handleChange","name","map","val","undefined"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useEffect, useState, useReducer } from 'react';\nimport ButtonAppBar from './ButtonAppBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport quizzesImported from './Quizzes'\nimport uuid from 'react-uuid'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport AddIcon from '@material-ui/icons/Add';\nimport CheckIcon from '@material-ui/icons/Check';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\n\n\nimport { Container, Paper, Button, Switch, FormControlLabel, TextField } from '@material-ui/core';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\n\nfunction App() {\n\n\n  const classes = useStyles();\n  const [data, setData] = useState([])\n  const [dataAlustettu, setDataAlustettu] = useState(false)\n  const [quiz, setQuiz] = useState(0);\n  const [answersVisible, setAnswersVisible] = useState(false)\n  const [state, dispatch] = useReducer(reducer, []);\n\n\n  useEffect(() => {\n\n    const createData = async () => {\n\n      try {\n        const initialData = quizzesImported\n        let result = await axios.post(\"http://localhost:3005/quizzes\", initialData)\n        setData(initialData)\n        setDataAlustettu(true)\n\n      } catch (exception) {\n\n        alert(\"Tietokannan alustaminen ep채onnistui\" + exception)\n      }\n    }\n\n    const fetchData = async () => {\n      try {\n\n\n        let result = await axios.get(\"http://localhost:3005/quizzes\")\n        if (result.data.length > 0) {\n          setData(result.data);\n          setDataAlustettu(true)\n        } else {\n          throw (\"Nyt pit채채 data kyll채 alustaa!\")\n        }\n      }\n      catch (exception) {\n        createData();\n        console.log(exception)\n      }\n    }\n    fetchData();\n  }, [])\n\n  useEffect(() => {\n    const updateData = async () => {\n      try {\n        let result = await axios.put(\"http://localhost:3005/quizzes\", data)\n      } catch (exception) {\n        console.log(exception)\n      }\n    }\n\n    if (dataAlustettu) {\n      updateData();\n    }\n  }, [data])\n\n  function reducer(state, action) {\n    let deepCopy = JSON.parse(JSON.stringify(state))\n    switch (action.type) {\n      case 'increment':\n        return { count: state.count + 1 };\n      case \"ANSWER_CHANGED\":\n        deepCopy[action.data.quizIndex].quizQuestions[action.data.questionIndex].answerOptions[action.data.answerIndex].answer = action.data.newText;\n        return deepCopy\n\n      case \"INIT_DATA\":\n        return action.data\n      default:\n        throw new Error();\n    }\n  }\n  \n\n  const handleToggle = (event, index, parentIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data))\n    deepCopy[quiz].quizQuestions[parentIndex].answerOptions[index].selected = !deepCopy[quiz].quizQuestions[parentIndex].answerOptions[index].selected;\n    setData(deepCopy)\n  };\n\n  const handleCorrectToggle = (event, index, parentIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data))\n    deepCopy[quiz].quizQuestions[parentIndex].answerOptions[index].correct = !deepCopy[quiz].quizQuestions[parentIndex].answerOptions[index].correct;\n    setData(deepCopy)\n  };\n\n  const selectQuiz = (quizNo) => {\n    setQuiz(quizNo);\n  }\n\n  const toggleAnswers = () => {\n    setAnswersVisible(!answersVisible);\n  }\n\n  // --------------------------------------\n\n  const addQuiz = () => {\n    let deepCopy = JSON.parse(JSON.stringify(data))\n    let newQuiz = { quizName: \"New Quiz\", quizQuestions: [{ question: \"\", answerOptions: [{ answer: \"\", correct: false, selected: false, uuid: uuid()}], uuid: uuid()}], uuid: uuid() }\n    deepCopy.push(newQuiz)\n    setData(deepCopy)\n  }\n\n  const addNewQuestion = (quizIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data))\n    let newQuestion = { question: \"\", answerOptions: [{ answer: \"\", correct: false, selected: false, uuid: uuid() }], uuid: uuid() }\n    deepCopy[quizIndex].quizQuestions.push(newQuestion)\n    setData(deepCopy)\n  }\n\n  const addNewAnswer = (quizIndex, questionIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data))\n    let newAnswer = { answer: \"\", correct: false, selected: false, uuid: uuid() }\n    deepCopy[quizIndex].quizQuestions[questionIndex].answerOptions.push(newAnswer)\n    setData(deepCopy)\n  }\n\n  const questionChanged = (event, quizIndex, questionIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data))\n    deepCopy[quizIndex].quizQuestions[questionIndex].question = event.target.value;\n    setData(deepCopy)\n  }\n\n  const answerChanged = (event, quizIndex, questionIndex, answerIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data))\n    deepCopy[quizIndex].quizQuestions[questionIndex].answerOptions[answerIndex].answer = event.target.value;\n    setData(deepCopy)\n  }\n\n  const deleteQuestion = (quizIndex, questionIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data))\n    deepCopy[quizIndex].quizQuestions.splice(questionIndex, 1)\n    setData(deepCopy)\n  }\n\n  const deleteAnswer = (quizIndex, questionIndex, answerIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data))\n    deepCopy[quizIndex].quizQuestions[questionIndex].answerOptions.splice(answerIndex, 1)\n    setData(deepCopy)\n  }\n\n  // --------------------------------------\n\n  const [status, setStatus] = React.useState({\n    teacherMode: true,\n  });\n\n  const handleChange = (event) => {\n    setStatus({ ...status, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <div>\n      {console.log(data)}\n      <ButtonAppBar />\n      <Container className=\"quizContainer\">\n        <div className={classes.root}>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={status.teacherMode}\n                onChange={handleChange}\n                name=\"teacherMode\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n              />\n            }\n            label=\"Teacher mode\" /><br />\n          {dataAlustettu ? data.map((val, index) => {\n            return <Button variant=\"outlined\" onClick={() => selectQuiz(index)}>{val.quizName}</Button>\n          })\n            : null}\n          {status.teacherMode ? <Button onClick={() => addQuiz()}><AddCircleIcon /></Button> : \"\"}\n        </div>\n\n        {dataAlustettu ? data[quiz].quizQuestions.map((value, parentIndex) => {\n          console.log(value)\n          return (\n            <div className=\"questionCard\">\n              <Paper elevation={1}>\n                <List className={classes.root}>\n                  {status.teacherMode ?\n                    <ListItem key={value.uuid} role={undefined} dense >\n                      <TextField fullWidth onChange={(event) => questionChanged(event, quiz, parentIndex)} size=\"small\" label={\"Question \" + (parentIndex + 1)} variant=\"outlined\" value={value.question} />\n                      <Button className=\"deleteButton\" onClick={() => deleteQuestion(quiz, parentIndex)}><DeleteIcon /></Button>\n                    </ListItem>\n                    : <div className=\"question\">{value.question}</div>}\n                  {value.answerOptions.map((value, index) => {\n                    return (\n                      <ListItem key={value.uuid} role={undefined} dense >\n                        { answersVisible || status.teacherMode ? <ListItemIcon>\n                          <GreenCheckbox\n                            onChange={(event) => handleCorrectToggle(event, index, parentIndex)}\n                            checked={value.correct}\n                            edge=\"start\"\n                            tabIndex={-1}\n                            hidden={answersVisible}\n                            disabled={!status.teacherMode}\n                          />\n                        </ListItemIcon> : null}\n                        <ListItemIcon>\n                          <Checkbox\n                            onChange={(event) => handleToggle(event, index, parentIndex)}\n                            checked={value.selected}\n                            edge=\"start\"\n                            tabIndex={-1}\n                          />\n                        </ListItemIcon>\n                        {status.teacherMode ?\n                          <div>\n                            <TextField onChange={(event) => dispatch({ type: \"ANSWER_CHANGED\", data: { newText: event.target.value, quizIndex: quiz, questionIndex: parentIndex, answerIndex: index } })} size=\"small\" label={\"Answer \" + (index + 1)} variant=\"outlined\" value={value.answer} />\n                            <Button className=\"deleteButton\" onClick={() => deleteAnswer(quiz, parentIndex, index)}><DeleteIcon /></Button>\n                          </div>\n                          : <div><ListItemText id={index} primary={value.answer} /></div>\n                        }\n                      </ListItem>\n                    )\n                  })}\n                  {status.teacherMode ? <div className=\"addButton\"><Button onClick={() => addNewAnswer(quiz, parentIndex)}><AddCircleIcon /></Button></div> : \"\"}\n                </List>\n              </Paper>\n            </div>\n          );\n        })\n          : null}\n        <div className=\"bottomButtons\">\n          {status.teacherMode ? <Button variant=\"contained\" onClick={() => addNewQuestion(quiz)}><AddIcon />   Add new question</Button> :\n            <Button variant=\"contained\" onClick={() => toggleAnswers()}>{answersVisible ? \"Hide correct answers\" : \"Show correct answers\"}</Button>\n          }</div>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}