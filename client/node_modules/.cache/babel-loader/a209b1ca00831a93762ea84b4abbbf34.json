{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\vappu\\\\Documents\\\\ReactKansio\\\\quiz-app\\\\src\\\\ChartsDemo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport './App.css';\nimport { Chart, BarSeries, Title, ArgumentAxis, ValueAxis } from '@devexpress/dx-react-chart-material-ui';\nimport TextField from '@material-ui/core/TextField';\nimport { Animation } from '@devexpress/dx-react-chart';\nexport default function ChartsDemo() {\n  _s();\n\n  const [data, setData] = useState([{\n    aihealue: 'ATK:n perusteet',\n    Points: 5,\n    MaxPoints: 10,\n    Percentage: 50\n  }, {\n    aihealue: 'Biologian alkeet',\n    Points: 2,\n    MaxPoints: 10,\n    Percentage: 20\n  }, {\n    aihealue: 'Matikan lopputentti',\n    Points: 10,\n    MaxPoints: 10,\n    Percentage: 100\n  }, {\n    aihealue: 'Kemian p채채sykoe',\n    Points: 8,\n    MaxPoints: 10,\n    Percentage: 80\n  }, {\n    aihealue: 'Biologian jatkoa ',\n    Points: 5,\n    MaxPoints: 10,\n    Percentage: 50\n  }, {\n    aihealue: 'Terveystiedon alkeet',\n    Points: 9,\n    MaxPoints: 10,\n    Percentage: 90\n  }]);\n\n  const numberChange = (event, index) => {\n    console.log(event.target.value);\n    console.log(index);\n    var newNumber = event.target.value;\n    var dataCopy = [...data];\n    dataCopy[index].Points = newNumber;\n    dataCopy[index].Percentage = newNumber / dataCopy[index].MaxPoints * 100;\n    setData(dataCopy);\n  };\n\n  const maxPointChange = (event, index) => {\n    console.log(event.target.value);\n    console.log(index);\n    var newNumber = event.target.value;\n    var dataCopy = [...data];\n    dataCopy[index].MaxPoints = newNumber;\n    dataCopy[index].Percentage = dataCopy[index].Points / newNumber * 100;\n    setData(dataCopy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data.map((value, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"Points\",\n          label: value.aihealue,\n          type: \"number\",\n          value: value.Points,\n          onChange: event => numberChange(event, index),\n          InputLabelProps: {\n            shrink: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"MaxPoints\",\n          label: \"maksimipisteet\",\n          type: \"number\",\n          value: value.MaxPoints,\n          onChange: event => maxPointChange(event, index),\n          InputLabelProps: {\n            shrink: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Chart, {\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(ArgumentAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ValueAxis, {\n        max: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BarSeries, {\n        valueField: \"Percentage\",\n        argumentField: \"aihealue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        text: \"Aihealueiden pisteprosentit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Animation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChartsDemo, \"dBotT4H+wCNTKBWbwCiyArJGhew=\");\n\n_c = ChartsDemo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartsDemo\");","map":{"version":3,"sources":["C:/Users/vappu/Documents/ReactKansio/quiz-app/src/ChartsDemo.js"],"names":["React","useState","useEffect","useReducer","Chart","BarSeries","Title","ArgumentAxis","ValueAxis","TextField","Animation","ChartsDemo","data","setData","aihealue","Points","MaxPoints","Percentage","numberChange","event","index","console","log","target","value","newNumber","dataCopy","maxPointChange","map","shrink"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\r\nimport './App.css';\r\nimport {\r\n    Chart,\r\n    BarSeries,\r\n    Title,\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { Animation } from '@devexpress/dx-react-chart';\r\n\r\nexport default function ChartsDemo() {\r\n    const [data,setData] = useState([\r\n        { aihealue: 'ATK:n perusteet', Points: 5, MaxPoints: 10, Percentage: 50 },\r\n        { aihealue: 'Biologian alkeet', Points: 2, MaxPoints: 10, Percentage: 20 },\r\n        { aihealue: 'Matikan lopputentti', Points: 10, MaxPoints: 10, Percentage: 100 },\r\n        { aihealue: 'Kemian p채채sykoe', Points: 8, MaxPoints: 10,Percentage: 80 },\r\n        { aihealue: 'Biologian jatkoa ', Points: 5, MaxPoints: 10,Percentage: 50 },\r\n        { aihealue: 'Terveystiedon alkeet', Points: 9, MaxPoints: 10,Percentage: 90},\r\n      ]);\r\n    \r\n      const numberChange = (event, index) => {\r\n        console.log(event.target.value)\r\n        console.log(index)\r\n      \r\n        var newNumber = event.target.value;\r\n        var dataCopy = [...data]\r\n        dataCopy[index].Points = newNumber;\r\n        dataCopy[index].Percentage = newNumber/dataCopy[index].MaxPoints*100\r\n        setData(dataCopy)\r\n      }\r\n      \r\n      const maxPointChange = (event, index) => {\r\n        console.log(event.target.value)\r\n        console.log(index)\r\n      \r\n        var newNumber = event.target.value;\r\n        var dataCopy = [...data]\r\n        dataCopy[index].MaxPoints = newNumber;\r\n        dataCopy[index].Percentage = dataCopy[index].Points/newNumber*100\r\n        setData(dataCopy)\r\n      }\r\n    return (\r\n        <div>\r\n            {data.map((value, index) => {\r\n                return (\r\n                    <div>\r\n                        <TextField\r\n                            id=\"Points\"\r\n                            label={value.aihealue}\r\n                            type=\"number\"\r\n                            value={value.Points}\r\n                            onChange={(event) => numberChange(event, index)}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            id=\"MaxPoints\"\r\n                            label=\"maksimipisteet\"\r\n                            type=\"number\"\r\n                            value={value.MaxPoints}\r\n                            onChange={(event) => maxPointChange(event, index)}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                    </div>)\r\n            })}\r\n            <Chart\r\n                data={data}\r\n            >\r\n                <ArgumentAxis />\r\n                <ValueAxis max={3} />\r\n                <BarSeries\r\n                    valueField=\"Percentage\"\r\n                    argumentField=\"aihealue\"\r\n                />\r\n                <Title text=\"Aihealueiden pisteprosentit\" />\r\n                <Animation />\r\n            </Chart>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}