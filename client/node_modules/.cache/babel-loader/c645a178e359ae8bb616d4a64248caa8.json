{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\vappu\\\\Documents\\\\ReactKansio\\\\quiz-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Switch from '@material-ui/core/Switch';\nexport default function Switches() {\n  _s();\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      checked: state.checkedA,\n      onChange: handleChange,\n      name: \"checkedA\",\n      inputProps: {\n        'aria-label': 'secondary checkbox'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      checked: state.checkedB,\n      onChange: handleChange,\n      color: \"primary\",\n      name: \"checkedB\",\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      disabled: true,\n      inputProps: {\n        'aria-label': 'disabled checkbox'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      disabled: true,\n      checked: true,\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      defaultChecked: true,\n      color: \"default\",\n      inputProps: {\n        'aria-label': 'checkbox with default color'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n} // import './App.css';\n// import React, { useEffect, useState } from 'react';\n// import ButtonAppBar from './ButtonAppBar';\n// import { makeStyles } from '@material-ui/core/styles';\n// import List from '@material-ui/core/List';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import quizzesImported from './Quizzes'\n// import {Container, Paper, Button, LinearProgress, Switch, FormControlLabel} from '@material-ui/core';\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: '100%',\n//     maxWidth: '100%',\n//     backgroundColor: theme.palette.background.paper,\n//     '& > *': {\n//       margin: theme.spacing(1),\n//     },\n//   },\n// }));\n// function App() {\n//   const initialData = quizzesImported;\n//   const classes = useStyles();\n//   const [data, setData] = useState([])\n//   const [dataAlustettu, setDataAlustettu] = useState(false)\n//   const [quiz, setQuiz] = useState(0);\n//   const [answersVisible, setAnswersVisible] = useState(false)\n//   const [isTeacherView, setIsTeacherView] = useState(false)\n//   useEffect(() => {\n//     let jemma = window.localStorage;\n//     let tempData = JSON.parse(jemma.getItem(\"data\"))\n//     if (tempData == null) {\n//       jemma.setItem(\"data\", JSON.stringify(initialData))\n//       tempData = initialData\n//     } \n//     setData(tempData);\n//     setDataAlustettu(true)\n//   }, [])\n//   useEffect(() => {\n//     if (dataAlustettu) {\n//       window.localStorage.setItem(\"data\", JSON.stringify(data))\n//     }\n//   }, [data])\n//   const handleToggle = (event, index, parentIndex) => {\n//     let deepCopy = JSON.parse(JSON.stringify(data))\n//     deepCopy[quiz].quizQuestions[parentIndex].answerOptions[index].selected = !deepCopy[quiz].quizQuestions[parentIndex].answerOptions[index].selected;\n//     setData(deepCopy)\n//   };\n//   const selectQuiz = (quizNo, event) => {\n//     console.log(event)\n//     setQuiz(quizNo);\n//   }\n//   const toggleAnswers = () => {\n//     setAnswersVisible(!answersVisible);\n//   }\n//   const addNewQuestion= () => {\n//   }\n//   // Switch\n//   const [state, setState] = React.useState({\n//     checkedA: true,\n//     checkedB: true,\n//   });\n//   const handleChange = (event) => {\n//     setState({ ...state, [event.target.name]: event.target.checked });\n//   };\n//   return (\n//     <div>\n//       <ButtonAppBar/>\n//       <Container className=\"quizContainer\">\n//         <div className={classes.root}>\n//         <Button variant=\"outlined\" onClick={() => selectQuiz(0)}>Eurovision quiz</Button>\n//         <Button variant=\"outlined\" onClick={() => selectQuiz(1)}>Mineral quiz</Button> \n//         <FormControlLabel\n//         control={\n//           <Switch\n//             checked={state.checkedB}\n//             onChange={(e) => handleChange(e)}\n//             name=\"teacherModeSwitch\"\n//             color=\"primary\"\n//           />\n//         }\n//         label=\"Teacher mode\"/>\n//         </div>\n//             {dataAlustettu ? data[quiz].quizQuestions.map((value, parentIndex) => {\n//               return(\n//                 <div className=\"questionCard\">\n//                 <Paper elevation={1}>\n//                 <List className={classes.root}>\n//                 <p className=\"question\">{value.question}</p>\n//                 {value.answerOptions.map((value, index) => {\n//                   return(\n//                   <ListItem key={index} role={undefined} dense >\n//                    { answersVisible ? <ListItemIcon>\n//                       <Checkbox\n//                         onChange={(event) => handleToggle(event, index, parentIndex)}\n//                         checked={value.correct}\n//                         edge=\"start\"\n//                         tabIndex={-1}\n//                         hidden={answersVisible}\n//                         disabled\n//                       />\n//                     </ListItemIcon> : null }\n//                     <ListItemIcon>\n//                       <Checkbox\n//                         onChange={(event) => handleToggle(event, index, parentIndex)}\n//                         checked={value.selected}\n//                         edge=\"start\"\n//                         tabIndex={-1}\n//                       />\n//                     </ListItemIcon>\n//                     <ListItemText id={index} primary={value.answer} />\n//                   </ListItem>\n//                   )\n//                 })}\n//                 </List>\n//                 </Paper>\n//                 </div>\n//               );\n//             }) : \"\" }<br/>\n//             <div className=\"bottomButtons\">\n//               <Button variant=\"contained\" onClick={() => toggleAnswers()}>{answersVisible ? \"Hide answers\" : \"Show answers\"}</Button> <br />\n//             </div>\n//       </Container>\n//     </div>\n//   );\n// }\n// export default App;\n\n_s(Switches, \"4mVXsS1XCZLd1JQ7lQEynwfinOQ=\");\n\n_c = Switches;\n\nvar _c;\n\n$RefreshReg$(_c, \"Switches\");","map":{"version":3,"sources":["C:/Users/vappu/Documents/ReactKansio/quiz-app/src/App.js"],"names":["React","Switch","Switches","state","setState","useState","checkedA","checkedB","handleChange","event","target","name","checked"],"mappings":";;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,KAAK,CAACK,QAAN,CAAe;AACvCC,IAAAA,QAAQ,EAAE,IAD6B;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAf,CAA1B;;AAKA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BL,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACM,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAA9C,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAET,KAAK,CAACG,QADjB;AAEE,MAAA,QAAQ,EAAEE,YAFZ;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,UAAU,EAAE;AAAE,sBAAc;AAAhB;AAJd;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,MAAD;AACE,MAAA,OAAO,EAAEL,KAAK,CAACI,QADjB;AAEE,MAAA,QAAQ,EAAEC,YAFZ;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,UAAU,EAAE;AAAE,sBAAc;AAAhB;AALd;AAAA;AAAA;AAAA;AAAA,YAPF,eAcE,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAE;AAAE,sBAAc;AAAhB;AAApB;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE,QAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,UAAU,EAAE;AAAE,sBAAc;AAAhB;AAA7B;AAAA;AAAA;AAAA;AAAA,YAfF,eAgBE,QAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,OAAO,MAAxB;AAAyB,MAAA,UAAU,EAAE;AAAE,sBAAc;AAAhB;AAArC;AAAA;AAAA;AAAA;AAAA,YAhBF,eAiBE,QAAC,MAAD;AACE,MAAA,cAAc,MADhB;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,UAAU,EAAE;AAAE,sBAAc;AAAhB;AAHd;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyrLwBN,Q;;KAAAA,Q","sourcesContent":["\n\nimport React from 'react';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function Switches() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <div>\n      <Switch\n        checked={state.checkedA}\n        onChange={handleChange}\n        name=\"checkedA\"\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\n      />\n      <Switch\n        checked={state.checkedB}\n        onChange={handleChange}\n        color=\"primary\"\n        name=\"checkedB\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />\n      <Switch inputProps={{ 'aria-label': 'primary checkbox' }} />\n      <Switch disabled inputProps={{ 'aria-label': 'disabled checkbox' }} />\n      <Switch disabled checked inputProps={{ 'aria-label': 'primary checkbox' }} />\n      <Switch\n        defaultChecked\n        color=\"default\"\n        inputProps={{ 'aria-label': 'checkbox with default color' }}\n      />\n    </div>\n  );\n}\n\n\n// import './App.css';\n// import React, { useEffect, useState } from 'react';\n// import ButtonAppBar from './ButtonAppBar';\n// import { makeStyles } from '@material-ui/core/styles';\n// import List from '@material-ui/core/List';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import quizzesImported from './Quizzes'\n// import {Container, Paper, Button, LinearProgress, Switch, FormControlLabel} from '@material-ui/core';\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: '100%',\n//     maxWidth: '100%',\n//     backgroundColor: theme.palette.background.paper,\n//     '& > *': {\n//       margin: theme.spacing(1),\n//     },\n//   },\n// }));\n\n\n// function App() {\n//   const initialData = quizzesImported;\n\n//   const classes = useStyles();\n//   const [data, setData] = useState([])\n//   const [dataAlustettu, setDataAlustettu] = useState(false)\n//   const [quiz, setQuiz] = useState(0);\n//   const [answersVisible, setAnswersVisible] = useState(false)\n//   const [isTeacherView, setIsTeacherView] = useState(false)\n\n//   useEffect(() => {\n//     let jemma = window.localStorage;\n//     let tempData = JSON.parse(jemma.getItem(\"data\"))\n//     if (tempData == null) {\n//       jemma.setItem(\"data\", JSON.stringify(initialData))\n//       tempData = initialData\n//     } \n//     setData(tempData);\n//     setDataAlustettu(true)\n//   }, [])\n\n//   useEffect(() => {\n//     if (dataAlustettu) {\n//       window.localStorage.setItem(\"data\", JSON.stringify(data))\n//     }\n//   }, [data])\n\n//   const handleToggle = (event, index, parentIndex) => {\n//     let deepCopy = JSON.parse(JSON.stringify(data))\n//     deepCopy[quiz].quizQuestions[parentIndex].answerOptions[index].selected = !deepCopy[quiz].quizQuestions[parentIndex].answerOptions[index].selected;\n//     setData(deepCopy)\n//   };\n  \n//   const selectQuiz = (quizNo, event) => {\n//     console.log(event)\n//     setQuiz(quizNo);\n//   }\n\n//   const toggleAnswers = () => {\n//     setAnswersVisible(!answersVisible);\n//   }\n\n//   const addNewQuestion= () => {\n\n//   }\n\n//   // Switch\n//   const [state, setState] = React.useState({\n//     checkedA: true,\n//     checkedB: true,\n//   });\n\n//   const handleChange = (event) => {\n//     setState({ ...state, [event.target.name]: event.target.checked });\n//   };\n\n\n//   return (\n//     <div>\n//       <ButtonAppBar/>\n//       <Container className=\"quizContainer\">\n//         <div className={classes.root}>\n//         <Button variant=\"outlined\" onClick={() => selectQuiz(0)}>Eurovision quiz</Button>\n//         <Button variant=\"outlined\" onClick={() => selectQuiz(1)}>Mineral quiz</Button> \n//         <FormControlLabel\n//         control={\n//           <Switch\n//             checked={state.checkedB}\n//             onChange={(e) => handleChange(e)}\n//             name=\"teacherModeSwitch\"\n//             color=\"primary\"\n//           />\n//         }\n//         label=\"Teacher mode\"/>\n//         </div>\n//             {dataAlustettu ? data[quiz].quizQuestions.map((value, parentIndex) => {\n//               return(\n//                 <div className=\"questionCard\">\n//                 <Paper elevation={1}>\n//                 <List className={classes.root}>\n//                 <p className=\"question\">{value.question}</p>\n//                 {value.answerOptions.map((value, index) => {\n//                   return(\n//                   <ListItem key={index} role={undefined} dense >\n//                    { answersVisible ? <ListItemIcon>\n//                       <Checkbox\n//                         onChange={(event) => handleToggle(event, index, parentIndex)}\n//                         checked={value.correct}\n//                         edge=\"start\"\n//                         tabIndex={-1}\n//                         hidden={answersVisible}\n//                         disabled\n//                       />\n//                     </ListItemIcon> : null }\n//                     <ListItemIcon>\n//                       <Checkbox\n//                         onChange={(event) => handleToggle(event, index, parentIndex)}\n//                         checked={value.selected}\n//                         edge=\"start\"\n//                         tabIndex={-1}\n//                       />\n//                     </ListItemIcon>\n//                     <ListItemText id={index} primary={value.answer} />\n//                   </ListItem>\n//                   )\n//                 })}\n//                 </List>\n//                 </Paper>\n//                 </div>\n//               );\n//             }) : \"\" }<br/>\n//             <div className=\"bottomButtons\">\n//               <Button variant=\"contained\" onClick={() => toggleAnswers()}>{answersVisible ? \"Hide answers\" : \"Show answers\"}</Button> <br />\n//             </div>\n//       </Container>\n//     </div>\n//   );\n// }\n\n// export default App;"]},"metadata":{},"sourceType":"module"}