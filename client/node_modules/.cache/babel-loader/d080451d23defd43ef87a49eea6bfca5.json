{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\vappu\\\\Documents\\\\ReactKansio\\\\quiz-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport ButtonAppBar from './ButtonAppBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Container, Card, Paper, Button, Avatar, ListItemAvatar } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const initialData = [{\n    quizName: \"Eurovision\",\n    quizQuestions: [{\n      question: \"Which country won the Eurovision song contest in 2014?\",\n      answerOptions: [{\n        answer: \"Australia\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Azerbaijan\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Armenia\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Austria\",\n        correct: true,\n        selected: false\n      }]\n    }, {\n      question: \"Which country has the most wins in the Eurovision Song Contest?\",\n      answerOptions: [{\n        answer: \"France\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Ireland\",\n        correct: true,\n        selected: false\n      }, {\n        answer: \"Sweden\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"The United Kingdom\",\n        correct: false,\n        selected: false\n      }]\n    }, {\n      question: \"What was the name of Ireland's 2011 song performed by Jedward?\",\n      answerOptions: [{\n        answer: \"Foundation\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Mascara\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Blush\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Lipstick\",\n        correct: true,\n        selected: false\n      }]\n    }, {\n      question: \"When was the first Eurovision Song Contest held?\",\n      answerOptions: [{\n        answer: \"1949\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"1956\",\n        correct: true,\n        selected: false\n      }, {\n        answer: \"1958\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"1973\",\n        correct: false,\n        selected: false\n      }]\n    }, {\n      question: \"Where will the Eurovision Song Contest be held next?\",\n      answerOptions: [{\n        answer: \"Rotterdam, The Netherlands\",\n        correct: true,\n        selected: false\n      }, {\n        answer: \"Helsinki, Finland\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Tel Aviv, Israel\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Riga, Latvia\",\n        correct: false,\n        selected: false\n      }]\n    }, {\n      question: \"What is the slogan of Eurovision Song Contest 2021?\",\n      answerOptions: [{\n        answer: \"Building Bridges\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Celebrate Diversity\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Open Up\",\n        correct: true,\n        selected: false\n      }, {\n        answer: \"All Aboard!\",\n        correct: false,\n        selected: false\n      }]\n    }]\n  }, {\n    quizName: \"Mining\",\n    quizQuestions: [{\n      question: \"What is sepiolite also called?\",\n      answerOptions: [{\n        answer: \"Montmonite\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Calcite\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Meerschaum\",\n        correct: true,\n        selected: false\n      }, {\n        answer: \"Silica gel\",\n        correct: false,\n        selected: false\n      }]\n    }, {\n      question: \"How is sepiolite commonly mined?\",\n      answerOptions: [{\n        answer: \"Surface mining\",\n        correct: true,\n        selected: false\n      }, {\n        answer: \"Shaft mining\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"In situ mining\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Fracking\",\n        correct: false,\n        selected: false\n      }]\n    }, {\n      question: \"Which country is the largest sepiolite producer in the world?\",\n      answerOptions: [{\n        answer: \"USA\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Tanzania\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Spain \",\n        correct: true,\n        selected: false\n      }, {\n        answer: \"Turkey\",\n        correct: false,\n        selected: false\n      }]\n    }, {\n      question: \"What is sepiolite often used to make?\",\n      answerOptions: [{\n        answer: \"Cat litter\",\n        correct: true,\n        selected: false\n      }, {\n        answer: \"\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Spain \",\n        correct: true,\n        selected: false\n      }, {\n        answer: \"Turkey\",\n        correct: false,\n        selected: false\n      }]\n    }, {\n      question: \"Which state holds the largest bentonite mine in the USA?\",\n      answerOptions: [{\n        answer: \"Kentucky\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Ohio\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Wisconsin \",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Wyoming\",\n        correct: true,\n        selected: false\n      }]\n    }]\n  }];\n  const classes = useStyles();\n  const [data, setData] = useState(initialData);\n  const [dataAlustettu, setDataAlustettu] = useState(false);\n  const [quiz, setQuiz] = useState(0);\n  const [answersVisible, setAnswersVisible] = useState(false);\n  useEffect(() => {\n    let jemma = window.localStorage;\n    let tempData = JSON.parse(jemma.getItem(\"data\"));\n\n    if (tempData == null) {\n      jemma.setItem(\"data\", JSON.stringify(initialData));\n      tempData = initialData;\n    }\n\n    setData(tempData);\n    setDataAlustettu(true);\n  }, []);\n  useEffect(() => {\n    if (dataAlustettu) {\n      window.localStorage.setItem(\"data\", JSON.stringify(data));\n    }\n  }, [data]);\n\n  const handleToggle = (event, index, parentIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data));\n    deepCopy[quiz].quizQuestions[parentIndex].answerOptions[index].selected = !deepCopy[quiz].quizQuestions[parentIndex].answerOptions[index].selected;\n    setData(deepCopy);\n  };\n\n  const selectQuiz = quizNo => {\n    setQuiz(quizNo);\n  };\n\n  const toggleAnswers = () => {\n    setAnswersVisible(!answersVisible);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ButtonAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"quizContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => selectQuiz(0),\n          children: \"Eurovision quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => selectQuiz(1),\n          children: \"Mining quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), data[quiz].quizQuestions.map((value, parentIndex) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questionCard\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            elevation: 1,\n            children: /*#__PURE__*/_jsxDEV(List, {\n              className: classes.root,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"question\",\n                children: value.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this), value.answerOptions.map((value, index) => {\n                return /*#__PURE__*/_jsxDEV(ListItem, {\n                  role: undefined,\n                  dense: true,\n                  children: [answersVisible ? /*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      onChange: event => handleToggle(event, index, parentIndex),\n                      checked: value.correct,\n                      edge: \"start\",\n                      tabIndex: -1,\n                      hidden: answersVisible,\n                      disabled: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 39\n                  }, this) : null, /*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      onChange: event => handleToggle(event, index, parentIndex),\n                      checked: value.selected,\n                      edge: \"start\",\n                      tabIndex: -1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    id: index,\n                    primary: value.answer\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 21\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 19\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 17\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottomButtons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => toggleAnswers(),\n          children: answersVisible ? \"Hide answers\" : \"Show answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 135\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XwahAuWolnadYJrDm3XRi/C9TiU=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/vappu/Documents/ReactKansio/quiz-app/src/App.js"],"names":["React","useEffect","useState","ButtonAppBar","makeStyles","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","Container","Card","Paper","Button","Avatar","ListItemAvatar","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","margin","spacing","App","initialData","quizName","quizQuestions","question","answerOptions","answer","correct","selected","classes","data","setData","dataAlustettu","setDataAlustettu","quiz","setQuiz","answersVisible","setAnswersVisible","jemma","window","localStorage","tempData","JSON","parse","getItem","setItem","stringify","handleToggle","event","index","parentIndex","deepCopy","selectQuiz","quizNo","toggleAnswers","map","value","undefined"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport ButtonAppBar from './ButtonAppBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport {Container, Card, Paper, Button, Avatar, ListItemAvatar} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\n\nfunction App() {\n\n  const initialData = [\n    {\n      quizName: \"Eurovision\",\n      quizQuestions: [\n      {\n        question: \"Which country won the Eurovision song contest in 2014?\",\n        answerOptions: [\n        {\n          answer: \"Australia\",\n          correct: false,\n          selected: false\n        },{\n          answer: \"Azerbaijan\",\n          correct: false,\n          selected: false\n        },{\n          answer: \"Armenia\",\n          correct: false,\n          selected: false\n        },{\n          answer: \"Austria\",\n          correct: true,\n          selected: false\n        }\n      ]},\n        {\n        question: \"Which country has the most wins in the Eurovision Song Contest?\",\n        answerOptions: [\n        {\n          answer: \"France\",\n          correct: false,\n          selected: false\n        },{\n          answer: \"Ireland\",\n          correct: true,\n          selected: false\n        },{\n          answer: \"Sweden\",\n          correct: false,\n          selected: false\n        },{\n          answer: \"The United Kingdom\",\n          correct: false,\n          selected: false\n        }]},{\n        question: \"What was the name of Ireland's 2011 song performed by Jedward?\",\n        answerOptions: [\n        {\n          answer: \"Foundation\",\n          correct: false,\n          selected: false\n        },{\n          answer: \"Mascara\",\n          correct: false,\n          selected: false\n        },{\n          answer: \"Blush\",\n          correct: false,\n          selected: false\n        },{\n          answer: \"Lipstick\",\n          correct: true,\n          selected: false\n        }\n      ]},{\n        question: \"When was the first Eurovision Song Contest held?\",\n        answerOptions: [\n        {\n          answer: \"1949\",\n          correct: false,\n          selected: false\n        },{\n          answer: \"1956\",\n          correct: true,\n          selected: false\n        },{\n          answer: \"1958\",\n          correct: false,\n          selected: false\n        },{\n          answer: \"1973\",\n          correct: false,\n          selected: false\n        }]},{\n          question: \"Where will the Eurovision Song Contest be held next?\",\n          answerOptions: [\n          {\n            answer: \"Rotterdam, The Netherlands\",\n            correct: true,\n            selected: false\n          },{\n            answer: \"Helsinki, Finland\",\n            correct: false,\n            selected: false\n          },{\n            answer: \"Tel Aviv, Israel\",\n            correct: false,\n            selected: false\n          },{\n            answer: \"Riga, Latvia\",\n            correct: false,\n            selected: false\n          }\n        ]},{\n          question: \"What is the slogan of Eurovision Song Contest 2021?\",\n          answerOptions: [\n          {\n            answer: \"Building Bridges\",\n            correct: false,\n            selected: false\n          },{\n            answer: \"Celebrate Diversity\",\n            correct: false,\n            selected: false\n          },{\n            answer: \"Open Up\",\n            correct: true,\n            selected: false\n          },{\n            answer: \"All Aboard!\",\n            correct: false,\n            selected: false\n          }\n        ]}\n      ]},\n    {\n    quizName: \"Mining\",\n    quizQuestions: [\n      {\n      question: \"What is sepiolite also called?\",\n      answerOptions: [\n      {\n        answer: \"Montmonite\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Calcite\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Meerschaum\",\n        correct: true,\n        selected: false\n      },{\n        answer: \"Silica gel\",\n        correct: false,\n        selected: false\n      }\n      ]},\n      {\n      question: \"How is sepiolite commonly mined?\",\n      answerOptions: [\n      {\n        answer: \"Surface mining\",\n        correct: true,\n        selected: false\n      },{\n        answer: \"Shaft mining\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"In situ mining\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Fracking\",\n        correct: false,\n        selected: false\n      }\n      ]},{\n      question: \"Which country is the largest sepiolite producer in the world?\",\n      answerOptions: [\n      {\n        answer: \"USA\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Tanzania\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Spain \",\n        correct: true,\n        selected: false\n      },{\n        answer: \"Turkey\",\n        correct: false,\n        selected: false\n      }\n      ]},{\n        question: \"What is sepiolite often used to make?\",\n        answerOptions: [\n        {\n          answer: \"Cat litter\",\n          correct: true,\n          selected: false\n        },{\n          answer: \"\",\n          correct: false,\n          selected: false\n        },{\n          answer: \"Spain \",\n          correct: true,\n          selected: false\n        },{\n          answer: \"Turkey\",\n          correct: false,\n          selected: false\n        }\n        ]},{\n      question: \"Which state holds the largest bentonite mine in the USA?\",\n      answerOptions: [\n      {\n        answer: \"Kentucky\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Ohio\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Wisconsin \",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Wyoming\",\n        correct: true,\n        selected: false\n      }\n      ]}\n    ]}\n];\n\n  const classes = useStyles();\n  const [data, setData] = useState(initialData)\n  const [dataAlustettu, setDataAlustettu] = useState(false)\n  const [quiz, setQuiz] = useState(0);\n  const [answersVisible, setAnswersVisible] = useState(false)\n\n  useEffect(() => {\n    let jemma = window.localStorage;\n    let tempData = JSON.parse(jemma.getItem(\"data\"))\n    if (tempData == null) {\n      jemma.setItem(\"data\", JSON.stringify(initialData))\n      tempData = initialData\n    } \n    setData(tempData);\n    setDataAlustettu(true)\n  }, [])\n\n  useEffect(() => {\n    if (dataAlustettu) {\n      window.localStorage.setItem(\"data\", JSON.stringify(data))\n    }\n  }, [data])\n\n  const handleToggle = (event, index, parentIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data))\n    deepCopy[quiz].quizQuestions[parentIndex].answerOptions[index].selected = !deepCopy[quiz].quizQuestions[parentIndex].answerOptions[index].selected;\n    setData(deepCopy)\n  };\n  \n  const selectQuiz = (quizNo) => {\n    setQuiz(quizNo);\n  }\n\n  const toggleAnswers = () => {\n    setAnswersVisible(!answersVisible);\n  }\n\n  return (\n    <div>\n      <ButtonAppBar/>\n        <Container className=\"quizContainer\">\n        <div className={classes.root}>\n        <Button variant=\"outlined\" onClick={() => selectQuiz(0)}>Eurovision quiz</Button>\n          <Button variant=\"outlined\" onClick={() => selectQuiz(1)}>Mining quiz</Button> \n        </div>\n            {data[quiz].quizQuestions.map((value, parentIndex) => {\n              return(\n                <div className=\"questionCard\">\n                <Card elevation={1}>\n                <List className={classes.root}>\n                <p className=\"question\">{value.question}</p>\n                {value.answerOptions.map((value, index) => {\n                  return(\n                  <ListItem key={index} role={undefined} dense >\n                   { answersVisible ? <ListItemIcon>\n                      <Checkbox\n                        onChange={(event) => handleToggle(event, index, parentIndex)}\n                        checked={value.correct}\n                        edge=\"start\"\n                        tabIndex={-1}\n                        hidden={answersVisible}\n                        disabled\n                      />\n                    </ListItemIcon> : null }\n                    <ListItemIcon>\n                      <Checkbox\n                        onChange={(event) => handleToggle(event, index, parentIndex)}\n                        checked={value.selected}\n                        edge=\"start\"\n                        tabIndex={-1}\n                      />\n                    </ListItemIcon>\n                    <ListItemText id={index} primary={value.answer} />\n                  </ListItem>\n                  )\n                })}\n                </List>\n                </Card>\n                </div>\n              );\n            })}<br/>\n            <div className=\"bottomButtons\">\n              <Button variant=\"contained\" onClick={() => toggleAnswers()}>{answersVisible ? \"Hide answers\" : \"Show answers\"}</Button> <br />\n            </div>\n        </Container>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}