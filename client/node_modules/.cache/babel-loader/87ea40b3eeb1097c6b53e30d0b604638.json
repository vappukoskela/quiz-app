{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\vappu\\\\Documents\\\\ReactKansio\\\\quiz-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport ButtonAppBar from './ButtonAppBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Container, Card, Paper, Button } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const initialData = [{\n    quizId: 0,\n    quizQuestions: [{\n      question: \"What is sepiolite also called?\",\n      answerOptions: [{\n        answer: \"Montmonite\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Calcite\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Meerschaum\",\n        correct: true,\n        selected: false\n      }, {\n        answer: \"Silica gel\",\n        correct: false,\n        selected: false\n      }]\n    }, {\n      question: \"How is sepiolite commonly mined?\",\n      answerOptions: [{\n        answer: \"Surface mining\",\n        correct: true,\n        selected: false\n      }, {\n        answer: \"Shaft mining\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"In situ mining\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Fracking\",\n        correct: false,\n        selected: false\n      }]\n    }, {\n      question: \"Which country is the largest sepiolite producer in the world?\",\n      answerOptions: [{\n        answer: \"USA\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Tanzania\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Spain \",\n        correct: true,\n        selected: false\n      }, {\n        answer: \"Turkey\",\n        correct: false,\n        selected: false\n      }]\n    }, {\n      question: \"Which state holds the largest bentonite mine in the USA?\",\n      answerOptions: [{\n        answer: \"Kentucky\",\n        correct: true,\n        selected: false\n      }, {\n        answer: \"Ohio\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Wisconsin \",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Wyoming\",\n        correct: true,\n        selected: false\n      }]\n    }]\n  }, {\n    quizId: 1,\n    quizQuestions: [{\n      question: \"Which country won the Eurovision song contest in 2014?\",\n      answerOptions: [{\n        answer: \"Australia\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Azerbaijan\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Armenia\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Austria\",\n        correct: true,\n        selected: false\n      }]\n    }, {\n      question: \"Which country has the most wins in the Eurovision Song Contest?\",\n      answerOptions: [{\n        answer: \"France\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"Ireland\",\n        correct: true,\n        selected: false\n      }, {\n        answer: \"Sweden\",\n        correct: false,\n        selected: false\n      }, {\n        answer: \"The United Kingdom\",\n        correct: false,\n        selected: false\n      }]\n    }]\n  }];\n  const [data, setData] = useState([]);\n  const [dataAlustettu, setDataAlustettu] = useState(false);\n  const [quiz, setQuiz] = useState(0);\n  useEffect(() => {\n    let jemma = window.localStorage;\n    let tempData = JSON.parse(jemma.getItem(\"data\"));\n\n    if (tempData == null) {\n      jemma.setItem(\"data\", JSON.stringify(initialData));\n      tempData = initialData;\n    }\n\n    setData(tempData);\n    setDataAlustettu(true);\n  }, []);\n  useEffect(() => {\n    if (dataAlustettu) {\n      window.localStorage.setItem(\"data\", JSON.stringify(data));\n    }\n  }, [data]);\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n\n  const handleToggle = (event, index, parentIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data));\n    deepCopy[parentIndex].answerOptions[index].selected = !deepCopy[parentIndex].answerOptions[index].selected;\n    setData(deepCopy);\n  };\n\n  const selectQuiz = quizNo => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(data.quizzes), /*#__PURE__*/_jsxDEV(ButtonAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"quizContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          children: \"Mining quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          children: \"Other quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), data.map((value, parentIndex) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questionCard\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            elevation: 1,\n            children: /*#__PURE__*/_jsxDEV(List, {\n              className: classes.root,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"question\",\n                children: value.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), value.answerOptions.map((value, index) => {\n                return /*#__PURE__*/_jsxDEV(ListItem, {\n                  role: undefined,\n                  dense: true,\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      onChange: event => handleToggle(event, index, parentIndex),\n                      checked: value.correct,\n                      edge: \"start\",\n                      tabIndex: -1,\n                      disabled: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      onChange: event => handleToggle(event, index, parentIndex),\n                      checked: value.selected,\n                      edge: \"start\",\n                      tabIndex: -1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    id: index,\n                    primary: value.answer\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 21\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ewbcro14fUlFfM7FiiaE5KGvRT8=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/vappu/Documents/ReactKansio/quiz-app/src/App.js"],"names":["React","useEffect","useState","ButtonAppBar","makeStyles","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","Container","Card","Paper","Button","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","margin","spacing","App","initialData","quizId","quizQuestions","question","answerOptions","answer","correct","selected","data","setData","dataAlustettu","setDataAlustettu","quiz","setQuiz","jemma","window","localStorage","tempData","JSON","parse","getItem","setItem","stringify","classes","checked","setChecked","handleToggle","event","index","parentIndex","deepCopy","selectQuiz","quizNo","console","log","quizzes","map","value","undefined"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport ButtonAppBar from './ButtonAppBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport {Container, Card, Paper, Button} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\n\nfunction App() {\n\n  const initialData = [{\nquizId: 0,\nquizQuestions: [\n      {\n      question: \"What is sepiolite also called?\",\n      answerOptions: [\n      {\n        answer: \"Montmonite\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Calcite\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Meerschaum\",\n        correct: true,\n        selected: false\n      },{\n        answer: \"Silica gel\",\n        correct: false,\n        selected: false\n      }\n      ]},\n      {\n      question: \"How is sepiolite commonly mined?\",\n      answerOptions: [\n      {\n        answer: \"Surface mining\",\n        correct: true,\n        selected: false\n      },{\n        answer: \"Shaft mining\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"In situ mining\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Fracking\",\n        correct: false,\n        selected: false\n      }\n      ]},{\n      question: \"Which country is the largest sepiolite producer in the world?\",\n      answerOptions: [\n      {\n        answer: \"USA\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Tanzania\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Spain \",\n        correct: true,\n        selected: false\n      },{\n        answer: \"Turkey\",\n        correct: false,\n        selected: false\n      }\n      ]},{\n      question: \"Which state holds the largest bentonite mine in the USA?\",\n      answerOptions: [\n      {\n        answer: \"Kentucky\",\n        correct: true,\n        selected: false\n      },{\n        answer: \"Ohio\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Wisconsin \",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Wyoming\",\n        correct: true,\n        selected: false\n      }\n      ]}\n    ]},{\nquizId: 1,\nquizQuestions: [\n    \n    {\n      question: \"Which country won the Eurovision song contest in 2014?\",\n      answerOptions: [\n      {\n        answer: \"Australia\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Azerbaijan\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Armenia\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Austria\",\n        correct: true,\n        selected: false\n      }\n    ]},\n      {\n      question: \"Which country has the most wins in the Eurovision Song Contest?\",\n      answerOptions: [\n      {\n        answer: \"France\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"Ireland\",\n        correct: true,\n        selected: false\n      },{\n        answer: \"Sweden\",\n        correct: false,\n        selected: false\n      },{\n        answer: \"The United Kingdom\",\n        correct: false,\n        selected: false\n      }\n    ]}\n]}\n];\n\n  const [data, setData] = useState([])\n  const [dataAlustettu, setDataAlustettu] = useState(false)\n  const [quiz, setQuiz] = useState(0);\n\n  useEffect(() => {\n    let jemma = window.localStorage;\n    let tempData = JSON.parse(jemma.getItem(\"data\"))\n    if (tempData == null) {\n      jemma.setItem(\"data\", JSON.stringify(initialData))\n      tempData = initialData\n    } \n    setData(tempData);\n    setDataAlustettu(true)\n  }, [])\n\n  useEffect(() => {\n    if (dataAlustettu) {\n      window.localStorage.setItem(\"data\", JSON.stringify(data))\n    }\n  }, [data])\n\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n\n  const handleToggle = (event, index, parentIndex) => {\n    let deepCopy = JSON.parse(JSON.stringify(data))\n    deepCopy[parentIndex].answerOptions[index].selected = !deepCopy[parentIndex].answerOptions[index].selected;\n    setData(deepCopy)\n  };\n  \n  const selectQuiz = (quizNo) => {\n    \n  }\n  return (\n    <div>\n      {  console.log(data.quizzes)\n}\n      <ButtonAppBar/>\n        <Container className=\"quizContainer\">\n        <div className={classes.root}>\n\n        <Button variant=\"outlined\">Mining quiz</Button> \n        <Button variant=\"outlined\">Other quiz</Button>\n\n        </div>\n            {data.map((value, parentIndex) => {\n\n              return(\n                <div className=\"questionCard\">\n                <Card elevation={1}>\n                <List className={classes.root}>\n                <p className=\"question\">{value.question}</p>\n                {value.answerOptions.map((value, index) => {\n                  return(\n                  <ListItem key={index} role={undefined} dense >\n                    <ListItemIcon>\n                      <Checkbox\n                        onChange={(event) => handleToggle(event, index, parentIndex)}\n                        checked={value.correct}\n                        edge=\"start\"\n                        tabIndex={-1}\n                        disabled\n                      />\n                    </ListItemIcon>\n                    <ListItemIcon>\n                      <Checkbox\n                        onChange={(event) => handleToggle(event, index, parentIndex)}\n                        checked={value.selected}\n                        edge=\"start\"\n                        tabIndex={-1}\n                      />\n                    </ListItemIcon>\n                    <ListItemText id={index} primary={value.answer} />\n                  </ListItem>\n                  )\n                })}\n                </List>\n                </Card>\n                </div>\n              );\n            })}<br/>\n        </Container>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}